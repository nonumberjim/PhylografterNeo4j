(dp1
S'output'
p2
S"<type 'exceptions.ImportError'> No module named lxml"
p3
sS'layer'
p4
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/study.py'
p5
sS'code'
p6
S'import os, uuid\nfrom cStringIO import StringIO\nfrom gluon.custom_import import track_changes\nfrom gluon.storage import Storage\ntrack_changes()\nivy = local_import(\'ivy\')\ntreebase = ivy.treebase\n#from ivy import treebase\nresponse.subtitle = "Studies"\n\nclass Virtual(object):\n    def study_url(self):\n        u = URL(c="study",f="view",args=[self.study.id],extension="")\n        s = self.study.citation\n        N = 50\n        if len(s)>N: s = s[:N-3]+" ..."\n        return A(s, _href=u, _title=self.study.citation)\n\n    def trees(self):\n        rows = db(db.stree.study==self.study.id).select()\n        ul = DIV()\n        for r in rows:\n            a = A(r.type, _href=URL(\'stree\',\'svgView\',args=r.id,extension=\'\'))\n            ul.append(DIV(a))\n        return ul.xml()\n\n## def index():\n##     t = db.study\n\n##     class Virtual(object):\n##         @virtualsettings(label=\'Citation\')\n##         def study_url(self):\n##             study = t[self.study.id]\n##             u = URL(c="study",f="view",args=[study.id])\n##             s = study.citation\n##             N = 50\n##             if len(s)>N: s = s[:N-3]+" ..."\n##             return A(s, _href=u, _title=study.citation)\n\n##         @virtualsettings(label=\'OTUs\')\n##         def otus(self):\n##             study = t[self.study.id]\n##             n = db(db.otu.study==study.id).count()\n##             if n > 0:\n##                 u = URL(c="otu",f="study",args=[study.id])\n##                 return A(str(n), _href=u)\n##             else:\n##                 return str(n)\n\n##     powerTable = plugins.powerTable\n##     powerTable.datasource = t\n##     powerTable.dtfeatures["sScrollY"] = "100%"\n##     powerTable.dtfeatures["sScrollX"] = "100%"\n##     powerTable.virtualfields = Virtual()\n##     powerTable.headers = "labels"\n##     powerTable.showkeycolumn = False\n##     powerTable.dtfeatures["bJQueryUI"] = request.vars.get("jqueryui",True)\n##     ## powerTable.uitheme = request.vars.get("theme","cupertino")\n##     powerTable.uitheme = request.vars.get("theme","smoothness")\n##     powerTable.dtfeatures["bStateSave"] = \'true\'\n##     powerTable.dtfeatures["iDisplayLength"] = 25\n##     powerTable.dtfeatures["aaSorting"] = [[6,\'desc\']]\n##     powerTable.dtfeatures["sPaginationType"] = request.vars.get(\n##         "pager","full_numbers"\n##         ) # two_button scrolling\n##     powerTable.columns = ["study.id",\n##                           "study.focal_clade",\n##                           "virtual.study_url",\n##                           "study.year_published",\n##                           "virtual.otus",\n##                           ## "study.treebase_id",\n##                           ## "study.contributor",\n##                           "study.uploaded"]\n##     #powerTable.hiddencolumns = ["study.treebase_id"]\n##     details = dict(detailscallback=URL(c="study",f="details"))\n##     powerTable.extra = dict(autoresize=True,\n##                             ## tooltip={},\n##                             details=details)\n##     return dict(table=powerTable.create())\n\ndef index():\n    theme = "smoothness"\n    for x in (\n        \'DataTables-1.8.1/media/js/jquery.js\',\n        \'DataTables-1.8.1/media/js/jquery.dataTables.min.js\',\n        \'DataTables-1.8.1/media/css/demo_table.css\',\n        \'DataTables-1.8.1/media/ui/css/%s/jquery-ui-1.8.5.custom.css\' % theme):\n        response.files.append(URL(\'static\',x))\n\n    t = db.study\n    fields = t.fields\n    colnames = ["Id", "Focal clade", "Citation",\n                "Year", "OTUs", "Trees", "Uploaded"]\n    widths = ["5%", "10%", "30%", "5%", "5%", "20%","15%"]\n    tid = "studies"\n    table = TABLE(_id=tid, _class="display")\n    table.append(THEAD(TR(*[ TH(f, _width=w)\n                             for f, w in zip(colnames, widths) ])))\n    table.append(TBODY(TR(TD("Loading data from server",\n                             _colspan=len(fields),\n                             _class="dataTables_empty"))))\n    table.append(TFOOT(TR(\n        TH(INPUT(_name="search_id",\n                 _style="width:100%",_class="search_init",\n                 _title="search Id" )),\n        TH(INPUT(_name="search_focal_clade",\n                 _style="width:100%",_class="search_init",\n                 _title="search focal clade" )),\n        TH(INPUT(_name="search_citation",\n                 _style="width:100%",_class="search_init",\n                 _title="search citation" )),\n        TH(INPUT(_name="search_year",\n                 _style="width:100%",_class="search_init",\n                 _title="search publication year" )),\n        TH(),\n        TH(),\n        TH(INPUT(_name="search_uploaded",\n                 _style="width:100%",_class="search_init",\n                 _title="search uploaded" )))))\n\n    return dict(tid=tid, table=table)\n    \ndef dtrecords():\n    ## for k, v in sorted(request.vars.items()):\n    ##     print k, ":", v\n\n    t = db.study\n    t.virtualfields.append(Virtual())\n    otu_count = db.otu.id.count()\n    left = db.otu.on(db.otu.study==db.study.id)\n\n    fields = [ t.id, t.focal_clade, t.citation, t.year_published,\n               otu_count, None, t.uploaded ]\n    orderby = []\n    if request.vars.iSortCol_0:\n        for i in range(int(request.vars.iSortingCols or 1)):\n            col = int(request.vars.get("iSortCol_%s" % i))\n            if col != 5:\n                scol = fields[col]\n                sdir = request.vars.get("sSortDir_%s" % i) or "asc"\n                if sdir == "desc": scol = ~scol\n                orderby.append(scol)\n    start = int(request.vars.iDisplayStart or 0)\n    end = start + int(request.vars.iDisplayLength or 10)\n    limitby = (start,end)\n    q = q0 = (t.id>0)\n    for i, f in enumerate(fields):\n        sterm = request.vars.get("sSearch_%s" % i)\n        if f and sterm and f != otu_count:\n            if f is t.focal_clade:\n                q &= ((t.focal_clade==db.taxon.id)&\n                      (db.taxon.name.like(\'%\'+sterm+\'%\')))\n            else:\n                q &= f.like(\'%\'+sterm+\'%\')\n                \n    rows = db(q).select(*filter(None,fields), groupby=t.id, left=left,\n                        orderby=orderby, limitby=limitby)\n\n    def otus(rec):\n        n = rec[otu_count]\n        if n > 0:\n            u = URL(c="otu",f="study",args=[rec.study.id],extension=\'\')\n            return A(str(n), _href=u).xml()\n        else:\n            return str(n)\n\n    data = [ (r.study.id,\n              db.taxon[r.study.focal_clade].name if r.study.focal_clade else \'\',\n              r.study.study_url.xml(),\n              r.study.year_published,\n              otus(r), r.study.trees, r.study.uploaded)\n             for r in rows ]\n    totalrecs = db(q0).count()\n    disprecs = db(q).count()\n    return dict(aaData=data,\n                iTotalRecords=totalrecs,\n                iTotalDisplayRecords=disprecs,\n                sEcho=int(request.vars.sEcho))\n\ndef details():\n    t = db.study\n    study = None\n    for k in request.vars.keys():\n        if k[:3] == \'dt_\':\n            study = int(request.vars[k].split(".")[-1])\n            break\n\n    tbl = TABLE(TR(TD("Nothing to see here")))\n\n    if study:\n        stree = db.stree\n        comment = t[study].comment\n        edit = A("Edit record", _href=URL(c="study",f="view",args=[study]))\n        newtree = A("add new tree",\n                    _href=URL(c="stree",f="create",args=[study]))\n        newfile = A("add data file",\n                    _href=URL(c="study",f="addfile",args=[study]))\n        span = SPAN(edit, " or ", newtree, " or ", newfile)\n        rows = filter(None, [comment, span])\n        trees = db(stree.study==study).select(stree.id,stree.type)\n        if trees:\n            for x in trees:\n                a = A(x.type, _href=URL(c="stree",f="v",args=[x.id]))\n                rows.append(a)\n        tbl = UL(*[ LI(x) for x in rows ])\n\n    return tbl\n\ndef editfile():\n    f = db.study_file(request.args(0)) or redirect(URL("index"))\n    def w(field, value):\n        u = URL(c="study",f="view",args=[f.study])\n        return A(_study_rep(f.study), _href=u)\n    db.study_file.study.widget = w\n    fields = ["study", "description", "source", "file", "data", "comment"]\n    readonly = not auth.has_membership(role="contributor")\n    form = SQLFORM(db.study_file, f, showid=False, fields=fields,\n                   deletable=True, upload=URL(r=request,f=\'download\'),\n                   readonly=readonly)\n    form.vars.study = f.study\n    if request.vars.file:\n        form.vars.filename = request.vars.file.filename\n    if form.accepts(request.vars, session):\n        response.flash = "record updated"\n        redirect(URL(c="study",f="view",args=[f.study]))\n    return dict(form=form)\n\n#@auth.requires_membership(\'contributor\')\n@auth.requires_login()\ndef addfile():\n    study = db.study(request.args(0)) or redirect(URL("index"))\n    def w(field, value):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    t = db.study_file\n    t.study.widget = w\n    t.uploaded.readable=False\n    ## form = crud.create(t)\n    form = SQLFORM(t, fields=["study","description","source","file","comment"])\n    form.vars.study=study.id\n    name = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    form.vars.contributor = name\n    if request.vars.file != None:\n        form.vars.filename = request.vars.file.filename\n    if form.accepts(request.vars, session):\n        redirect(URL(c="study",f="view",args=[study.id]))\n    return dict(form=form)\n\ndef index_ajax():\n    response.subtitle = A("Studies", _href=URL(c=\'study\',f="index"))\n    t = db.study\n    cit = Field("citation")\n    t.year_published.requires = IS_NULL_OR(IS_IN_SET(\n        [ x.year_published for x in\n          db(t.id>0).select(t.year_published, orderby=t.year_published,\n                            distinct=True) ]\n        ))\n    t.contributor.requires = IS_NULL_OR(IS_IN_SET(\n        [ x.contributor for x in\n          db(t.id>0).select(t.contributor, orderby=t.contributor,\n                            distinct=True) ]\n        ))\n    form = SQLFORM.factory(\n        cit, t.year_published, t.contributor,\n        _id="searchform", _action=URL(c="study", f="search.load")\n        )\n    return dict(form=form)\n\ndef recent():\n    t = db.study\n    rows = db(t.id>0).select(t.ALL, limitby=(0,10), orderby=~t.uploaded)\n    ## for rec in recent:\n    ##     u = URL(c="study",f="view",args=[rec.id])\n    ##     a = A(rec.citation, _href=u)\n    ##     records.append(a)\n    return dict(records=rows)\n\ndef search():\n    t = db.study\n    q = (t.id>0)\n    for k, v in [ (k, v) for k, v in request.vars.items()\n                  if (k in t.fields) ]:\n        if v:\n            q &= (t[k].like("%"+v+"%"))\n    fields = (t.id, t.citation, t.year_published, t.uploaded)\n    rows = db(q).select(*fields)\n    headers = dict(\n        [ (str(x), (str(x).split(".")[1]).capitalize().replace("_", " "))\n          for x in fields ]\n        )\n    results = SQLTABLE2(rows, headers=headers)\n    return dict(results=results)\n\ndef load_record():\n    i = int(request.args(0) or 0)\n    return LOAD("study", "record.load", args=[i], vars=request.vars, ajax=True)\n    \n@auth.requires_membership(\'contributor\')\ndef record():\n    t = db.study\n    rec = t(int(request.args(0) or 0))\n    t.focal_clade.requires = IS_NULL_OR(IS_IN_DB(db, db.taxon.id))\n    t.focal_clade.widget = SQLFORM.widgets.autocomplete(\n        request, db.taxon.name, id_field=db.taxon.id\n        )\n    form = SQLFORM(t, rec, _id="recordform", showid=False)\n    v = [ LI(A(tr.type, _target="_blank",\n               _href=URL(c="stree", f="html", args=[tr.id], extension="")))\n          for tr in db(db.stree.study==rec).select() ]\n    trees = UL(*v)\n    if form.accepts(request):\n        response.flash = "record updated"\n    return dict(form=form, trees=trees)\n\n\n@auth.requires_membership(\'contributor\')\ndef create():\n    t = db.study\n    name = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    t.contributor.default=name\n    t.focal_clade.widget = SQLFORM.widgets.autocomplete(\n        request, db.taxon.name, id_field=db.taxon.id\n        )\n    t.uploaded.readable=False\n    form = crud.create(t, next="view/[id]")\n    return dict(form=form)\n\ndef view():\n    rec = db.study(request.args(0)) or redirect(URL("create"))\n    readonly = not auth.has_membership(role="contributor")\n    db.study.focal_clade.widget = SQLFORM.widgets.autocomplete(\n        request, db.taxon.name, id_field=db.taxon.id\n        )\n    form = SQLFORM(db.study, rec, deletable=False, readonly=readonly,\n                   fields = ["citation", "year_published", "doi", "label",\n                             "focal_clade", "treebase_id",\n                             "contributor", "comment", "uploaded"],\n                   showid=False, submit_button="Update record")\n    ## name = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    ## form.vars.contributor = name\n    if form.accepts(request.vars, session):\n        response.flash = "record updated"\n    label = _study_rep(rec)\n    trees = db(db.stree.study==rec.id).select()\n    for f in "study", "source", "data", "uploaded", "contributor", "comment":\n        db.study_file[f].readable=False\n        db.study_file[f].writable=False\n    db.study_file.file.label = "Download"\n    db.study_file.id.label = ""\n    db.study_file.id.represent = lambda v: ""\n    if auth.has_membership(role="contributor"):\n        r = lambda v: A("edit", _href=URL(c="study",f="editfile",args=[v]))\n        db.study_file.id.represent = r\n    files = crud.select(db.study_file, db.study_file.study==rec, truncate=64)\n    return dict(form=form, label=label, trees=trees, files=files, rec=rec)\n        \ndef download():\n    return response.download(request, db)\n\ndef strees():\n    rows = db(db.stree.study==int(request.args(0) or 0)).select()\n    return dict(trees=rows)\n\n@auth.requires_membership(\'contributor\')\ndef tbimport():\n    t = db.study\n    key = "uploaded_nexml_%s" % auth.user.id\n    contributor = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    tbid = request.args(0)\n    if tbid:\n        e = treebase.fetch_study(tbid)\n        nexml = treebase.parse_nexml(e)\n        if nexml:\n            nexml.meta[\'contributor\'] = contributor\n            cache.ram.clear(key)\n            x = cache.ram(key, lambda:nexml, time_expire=10000)\n            redirect(URL(\'study\',\'tbimport2\',args=tbid))\n    uploadfolder = request.folder+\'uploads\'\n    fields = [Field("study_id", "string", default=tbid),\n              Field("nexml_file", "upload", uploadfolder=uploadfolder)]\n    form = SQLFORM.factory(*fields)\n    if form.accepts(request.vars, session, dbio=False):\n        if form.vars.study_id:\n            e = treebase.fetch_study(form.vars.study_id)\n            nexml = treebase.parse_nexml(e)\n        elif form.vars.nexml_file:\n            path = os.path.join(uploadfolder,\n                                form.vars.nexml_file_newfilename)\n            nexml = treebase.parse_nexml(path)\n            os.remove(path)\n        else:\n            nexml = {}\n            request.flash = "Valid study id or nexml file required"\n        if nexml:\n            nexml.meta[\'contributor\'] = contributor\n            cache.ram.clear(key)\n            x = cache.ram(key, lambda:nexml, time_expire=10000)\n            redirect(URL(\'study\',\'tbimport2\',args=tbid))\n            \n    return dict(form=form)\n\n@auth.requires_membership(\'contributor\')\ndef tbimport2():\n    tbid = request.args(0)\n    t = db.study\n    t.focal_clade.widget = SQLFORM.widgets.autocomplete(\n        request, db.taxon.name, id_field=db.taxon.id\n        )\n    t.uploaded.readable=False\n    key = "uploaded_nexml_%s" % auth.user.id\n    nexml = cache.ram(key, lambda:None, time_expire=10000)\n    if not nexml:\n        session.flash = "Please upload the Nexml file again"\n        redirect(URL(\'study\',\'tbimport\'))\n    cache.ram(key, lambda:nexml, time_expire=10000)\n    ## assert nexml\n    ## cache.ram.clear(key)\n    get = lambda x: nexml.meta.get(x) or None\n    treebase_id = int(get(\'tb:identifier.study\'))\n    rec = db(t.treebase_id==treebase_id).select().first()\n    year = int(get(\'prism:publicationDate\') or 0)\n    d = dict(citation = get(\'dcterms:bibliographicCitation\'),\n             year_published = year if year else None,\n             label = get(\'tb:title.study\'),\n             treebase_id = treebase_id,\n             contributor = get(\'contributor\'))\n\n    diffs = []\n    if rec: # edit an existing study record\n        if not tbid: response.flash = "Record exists: study id = %s" % rec.id\n        diffs = [ (k, v) for k, v in d.items()\n                  if rec[k] != v and k != \'contributor\' ]\n        form = SQLFORM(t, rec, showid=False, submit_button="Update study")\n\n    else:\n        for k, v in d.items():\n            if v and k in t.fields: t[k].default = v\n        form = SQLFORM(t, submit_button="Insert study")\n    \n    ## form = crud.create(t, next="view/[id]")\n    if form.accepts(request.vars, session):\n        if rec: response.flash = "record updated"\n        else: response.flash = "record inserted"\n        ## redirect(URL(\'study\',\'view\',args=form.vars.id))\n\n    return dict(form=form, rec=rec, diffs=diffs)\n\ndef tbimport_otus():\n    theme = "smoothness"\n    for x in (\n        \'DataTables-1.8.1/media/js/jquery.js\',\n        \'DataTables-1.8.1/media/js/jquery.dataTables.min.js\',\n        \'DataTables-1.8.1/media/css/demo_table.css\',\n        \'DataTables-1.8.1/media/ui/css/%s/jquery-ui-1.8.5.custom.css\' % theme):\n        response.files.append(URL(\'static\',x))\n\n    t = db.study\n    t.focal_clade.widget = SQLFORM.widgets.autocomplete(\n        request, db.taxon.name, id_field=db.taxon.id\n        )\n    t.uploaded.readable=False\n    key = "uploaded_nexml_%s" % auth.user.id\n    nexml = cache.ram(key, lambda:None, time_expire=10000)\n    if not nexml:\n        session.flash = "Please upload the Nexml file again"\n        redirect(URL(\'study\',\'tbimport\'))\n    cache.ram(key, lambda:nexml, time_expire=10000)\n    otus = [ (k, Storage(v)) for k,v in sorted(nexml.otus.items()) ]\n    get = lambda x: nexml.meta.get(x) or None\n    treebase_id = int(get(\'tb:identifier.study\'))\n    rec = db(t.treebase_id==treebase_id).select().first()\n    if not rec:\n        session.flash = \'Study record needed!\'\n        redirect(URL(\'study\',\'tbimport2\'))\n\n    # figure out if OTUs already exist for this study\n    left = db.taxon.on(db.otu.taxon==db.taxon.id)\n    rows = db(db.otu.study==rec.id).select(db.otu.ALL, db.taxon.ALL, left=left)\n    d = dict([ (x.taxon.tb_taxid, x.otu.id)\n               for x in rows if x.taxon and x.taxon.tb_taxid ])\n    d.update(dict([ (x.otu.label, x.otu) for x in rows ]))\n    d.update(dict([ (x.otu.tb_nexml_id, x.otu) for x in rows ]))\n    existing = [ not ((v.tb_taxid in d) or (v.label in d) or (v.id in d))\n                 for k, v in otus ]\n    for k, v in otus:\n        o = nexml.otus[k]\n        o.otu = d.get(v.id) or d.get(v.label) or d.get(v.tb_taxid)\n\n    colnames = ["Nexml id", "Label", "NCBI taxid", "NameBank id",\n                "Taxon match?", "New?"]\n    colwidths = [ "15%", "30%", "15%", "15%", "15%", "10%"]\n    \n    # figure out if uploaded OTUs have matching taxon records\n    q = (db.taxon.name.belongs([ v.label for k,v in otus ])|\n         db.taxon.ncbi_taxid.belongs([ int(v.ncbi_taxid) for k,v in otus\n                                       if v.ncbi_taxid ]))\n    rows = db(q).select()\n    matches = dict([ (x.name, x.id) for x in rows ])\n    matches.update(dict([ (x.ncbi_taxid, x.id) for x in rows if x.ncbi_taxid ]))\n    matchv = [ bool((v.name in matches) or\n                    (v.ncbi_taxid and v.ncbi_taxid in matches))\n               for k,v in otus ]\n\n    tid = "otus"\n    table = TABLE(_id=tid,_class="display")\n    table.append(THEAD(TR(*[ TH(c, _width=w) for c, w in\n                             zip(colnames, colwidths) ])))\n    rows = [ TR(TD(v.id), TD(v.label), TD(v.ncbi_taxid or ""),\n                TD(v.namebank_id or ""),\n                INPUT(_type=\'checkbox\',value=m, _disabled="disabled"),\n                INPUT(_type=\'checkbox\',value=bool(e), _disabled="disabled"))\n             for (k, v), m, e in zip(otus, matchv, existing) ]\n    table.append(TBODY(*rows))\n\n    new_otus = [ v for (k,v),e in zip(otus, existing) if e ]\n    if new_otus:\n        value = "|".join([ x.id for x in new_otus ])\n        form = FORM(INPUT(_type="hidden",_name="_import",_value=value),\n                    INPUT(_type="submit",\n                          _value="Import %s new OTUs" % len(new_otus)))\n        if request.vars._import:\n        ## if form.accepts(request.vars, session):\n            v = request.vars._import.split("|")\n            n = 0\n            for k in v:\n                x = Storage(nexml.otus[k])\n                ## t = (new_tb_taxids.get(x.tb_taxid) or\n                ##      new_ncbi_taxids.get(x.ncbi_taxid) or\n                ##      new_labels.get(x.label))\n                t = matches.get(x.label) or matches.get(x.ncbi_taxid)\n                if t:\n                    r = db.taxon[t]\n                    if not r.tb_taxid and x.tb_taxid:\n                        r.update_record(tb_taxid=x.tb_taxid)\n                    if not r.ncbi_taxid and x.ncbi_taxid:\n                        r.update_record(ncbi_taxid=x.ncbi_taxid)\n                    if not r.namebank_id and x.namebank_id:\n                        r.update_record(namebank_id=x.namebank_id)\n                i = db.otu.insert(study=rec.id, label=x.label, taxon=t,\n                                  tb_nexml_id=x.id)\n                if i:\n                    nexml.otus[k][\'otu\'] = db.otu[i]\n                    n += 1\n                else:\n                    print x.label, t\n\n            session.flash = "%s OTUs inserted" % n\n            redirect(URL(\'study\',\'tbimport_otus\'))\n    else:\n        form = ""\n        \n    return dict(nexml=nexml, table=table, tid=tid, form=form, rec=rec)\n\ndef fetch_treebase_nexml():\n    sid = request.args(0)\n    e = treebase.fetch_study(sid)\n    response.headers["Content-Type"] = "text/xml"\n    s = "attachment; filename=TB-study-%s.nexml" % sid\n    response.headers["Content-Disposition"] = s\n    buf = StringIO()\n    e.write(buf, pretty_print=True)\n    return buf.getvalue()\n\ndef tbimport_trees():\n    t = db.study\n    key = "uploaded_nexml_%s" % auth.user.id\n    ## nexml = cache.ram(key, lambda:None, time_expire=10000)\n    nexml = cache.ram(key, lambda:None, time_expire=10000)\n    if not nexml:\n        session.flash = "Please upload the Nexml file again"\n        redirect(URL(\'study\',\'tbimport\'))\n    cache.ram(key, lambda:nexml, time_expire=10000)\n    get = lambda x: nexml.meta.get(x) or None\n    treebase_id = int(get(\'tb:identifier.study\'))\n    rec = db(t.treebase_id==treebase_id).select().first()\n    if not rec:\n        session.flash = \'Study record needed!\'\n        redirect(URL(\'study\',\'tbimport2\'))\n\n    for tree in nexml.trees:\n        stree = db(db.stree.tb_tree_id==tree.attrib.id).select(db.stree.id).first()\n        if not stree:\n            tree.importform = FORM(\n                INPUT(_type=\'hidden\',_name=\'treeid\',_value=tree.attrib.id),\n                INPUT(_type=\'submit\',_value=\'import tree\'),\n                _action=URL(\'stree\',\'import_cached_nexml\',args=tree.attrib.id)\n                )\n        else:\n            tree.importform = A("Imported", _href=URL(\'stree\',\'svgView\',args=stree.id))\n            \n    return dict(rec=rec, trees=nexml.trees)\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.ImportError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.ImportError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.ImportError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.ImportError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.ImportError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.ImportError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.ImportError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.ImportError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.ImportError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.ImportError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.ImportError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.ImportError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.ImportError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.ImportError object>"
p41
sS'args'
p42
S"('No module named lxml',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.ImportError object>'
p47
sS'__doc__'
p48
S'"Import can\'t find module, or can\'t find name in module."'
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.ImportError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'No module named lxml'
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'Phylografter'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
sbasbasbasbag57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g67
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
g82
g83
ssg71
g147
sg64
(lp154
S'body'
p155
asbag57
(g78
g59
NtRp156
(dp157
g62
(dp158
g89
g90
ssg71
g147
sg64
(lp159
S':'
asbag57
(g78
g59
NtRp160
(dp161
g62
(dp162
sg71
g147
sg64
(lp163
g57
(g58
g59
NtRp164
(dp165
g62
(dp166
g70
I5
ssg71
g160
sg64
(lp167
S'<cStringIO.StringO object at 0x02AA75C0>'
p168
asbasbasbag57
(g73
g59
NtRp169
(dp170
g62
(dp171
sg71
g67
sg64
(lp172
g57
(g78
g59
NtRp173
(dp174
g62
(dp175
g82
g83
ssg71
g169
sg64
(lp176
S'client'
p177
asbag57
(g78
g59
NtRp178
(dp179
g62
(dp180
g89
g90
ssg71
g169
sg64
(lp181
S':'
asbag57
(g78
g59
NtRp182
(dp183
g62
(dp184
sg71
g169
sg64
(lp185
g57
(g58
g59
NtRp186
(dp187
g62
(dp188
g70
I5
ssg71
g182
sg64
(lp189
S'127.0.0.1'
p190
asbasbasbag57
(g73
g59
NtRp191
(dp192
g62
(dp193
sg71
g67
sg64
(lp194
g57
(g78
g59
NtRp195
(dp196
g62
(dp197
g82
g83
ssg71
g191
sg64
(lp198
S'controller'
p199
asbag57
(g78
g59
NtRp200
(dp201
g62
(dp202
g89
g90
ssg71
g191
sg64
(lp203
S':'
asbag57
(g78
g59
NtRp204
(dp205
g62
(dp206
sg71
g191
sg64
(lp207
g57
(g58
g59
NtRp208
(dp209
g62
(dp210
g70
I5
ssg71
g204
sg64
(lp211
S'study'
p212
asbasbasbag57
(g73
g59
NtRp213
(dp214
g62
(dp215
sg71
g67
sg64
(lp216
g57
(g78
g59
NtRp217
(dp218
g62
(dp219
g82
g83
ssg71
g213
sg64
(lp220
S'cookies'
p221
asbag57
(g78
g59
NtRp222
(dp223
g62
(dp224
g89
g90
ssg71
g213
sg64
(lp225
S':'
asbag57
(g78
g59
NtRp226
(dp227
g62
(dp228
sg71
g213
sg64
(lp229
g57
(g58
g59
NtRp230
(dp231
g62
(dp232
g70
I5
ssg71
g226
sg64
(lp233
g57
(g66
g59
NtRp234
(dp235
g62
(dp236
g70
I4
ssg71
Nsg64
(lp237
g57
(g73
g59
NtRp238
(dp239
g62
(dp240
sg71
g234
sg64
(lp241
g57
(g78
g59
NtRp242
(dp243
g62
(dp244
g82
g83
ssg71
g238
sg64
(lp245
S'session_id_admin'
p246
asbag57
(g78
g59
NtRp247
(dp248
g62
(dp249
g89
g90
ssg71
g238
sg64
(lp250
S':'
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
sg71
g238
sg64
(lp254
g57
(g58
g59
NtRp255
(dp256
g62
(dp257
g70
I4
ssg71
g251
sg64
(lp258
g57
(g66
g59
NtRp259
(dp260
g62
(dp261
g70
I3
ssg71
Nsg64
(lp262
g57
(g73
g59
NtRp263
(dp264
g62
(dp265
sg71
g259
sg64
(lp266
g57
(g78
g59
NtRp267
(dp268
g62
(dp269
g82
g83
ssg71
g263
sg64
(lp270
S'comment'
p271
asbag57
(g78
g59
NtRp272
(dp273
g62
(dp274
g89
g90
ssg71
g263
sg64
(lp275
S':'
asbag57
(g78
g59
NtRp276
(dp277
g62
(dp278
sg71
g263
sg64
(lp279
g57
(g58
g59
NtRp280
(dp281
g62
(dp282
g70
I3
ssg71
g276
sg64
(lp283
S''
asbasbasbag57
(g73
g59
NtRp284
(dp285
g62
(dp286
sg71
g259
sg64
(lp287
g57
(g78
g59
NtRp288
(dp289
g62
(dp290
g82
g83
ssg71
g284
sg64
(lp291
S'domain'
p292
asbag57
(g78
g59
NtRp293
(dp294
g62
(dp295
g89
g90
ssg71
g284
sg64
(lp296
S':'
asbag57
(g78
g59
NtRp297
(dp298
g62
(dp299
sg71
g284
sg64
(lp300
g57
(g58
g59
NtRp301
(dp302
g62
(dp303
g70
I3
ssg71
g297
sg64
(lp304
S''
asbasbasbag57
(g73
g59
NtRp305
(dp306
g62
(dp307
sg71
g259
sg64
(lp308
g57
(g78
g59
NtRp309
(dp310
g62
(dp311
g82
g83
ssg71
g305
sg64
(lp312
S'expires'
p313
asbag57
(g78
g59
NtRp314
(dp315
g62
(dp316
g89
g90
ssg71
g305
sg64
(lp317
S':'
asbag57
(g78
g59
NtRp318
(dp319
g62
(dp320
sg71
g305
sg64
(lp321
g57
(g58
g59
NtRp322
(dp323
g62
(dp324
g70
I3
ssg71
g318
sg64
(lp325
S''
asbasbasbag57
(g73
g59
NtRp326
(dp327
g62
(dp328
sg71
g259
sg64
(lp329
g57
(g78
g59
NtRp330
(dp331
g62
(dp332
g82
g83
ssg71
g326
sg64
(lp333
S'httponly'
p334
asbag57
(g78
g59
NtRp335
(dp336
g62
(dp337
g89
g90
ssg71
g326
sg64
(lp338
S':'
asbag57
(g78
g59
NtRp339
(dp340
g62
(dp341
sg71
g326
sg64
(lp342
g57
(g58
g59
NtRp343
(dp344
g62
(dp345
g70
I3
ssg71
g339
sg64
(lp346
S''
asbasbasbag57
(g73
g59
NtRp347
(dp348
g62
(dp349
sg71
g259
sg64
(lp350
g57
(g78
g59
NtRp351
(dp352
g62
(dp353
g82
g83
ssg71
g347
sg64
(lp354
S'max-age'
p355
asbag57
(g78
g59
NtRp356
(dp357
g62
(dp358
g89
g90
ssg71
g347
sg64
(lp359
S':'
asbag57
(g78
g59
NtRp360
(dp361
g62
(dp362
sg71
g347
sg64
(lp363
g57
(g58
g59
NtRp364
(dp365
g62
(dp366
g70
I3
ssg71
g360
sg64
(lp367
S''
asbasbasbag57
(g73
g59
NtRp368
(dp369
g62
(dp370
sg71
g259
sg64
(lp371
g57
(g78
g59
NtRp372
(dp373
g62
(dp374
g82
g83
ssg71
g368
sg64
(lp375
S'path'
p376
asbag57
(g78
g59
NtRp377
(dp378
g62
(dp379
g89
g90
ssg71
g368
sg64
(lp380
S':'
asbag57
(g78
g59
NtRp381
(dp382
g62
(dp383
sg71
g368
sg64
(lp384
g57
(g58
g59
NtRp385
(dp386
g62
(dp387
g70
I3
ssg71
g381
sg64
(lp388
S''
asbasbasbag57
(g73
g59
NtRp389
(dp390
g62
(dp391
sg71
g259
sg64
(lp392
g57
(g78
g59
NtRp393
(dp394
g62
(dp395
g82
g83
ssg71
g389
sg64
(lp396
S'secure'
p397
asbag57
(g78
g59
NtRp398
(dp399
g62
(dp400
g89
g90
ssg71
g389
sg64
(lp401
S':'
asbag57
(g78
g59
NtRp402
(dp403
g62
(dp404
sg71
g389
sg64
(lp405
g57
(g58
g59
NtRp406
(dp407
g62
(dp408
g70
I3
ssg71
g402
sg64
(lp409
S''
asbasbasbag57
(g73
g59
NtRp410
(dp411
g62
(dp412
sg71
g259
sg64
(lp413
g57
(g78
g59
NtRp414
(dp415
g62
(dp416
g82
g83
ssg71
g410
sg64
(lp417
S'version'
p418
asbag57
(g78
g59
NtRp419
(dp420
g62
(dp421
g89
g90
ssg71
g410
sg64
(lp422
S':'
asbag57
(g78
g59
NtRp423
(dp424
g62
(dp425
sg71
g410
sg64
(lp426
g57
(g58
g59
NtRp427
(dp428
g62
(dp429
g70
I3
ssg71
g423
sg64
(lp430
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp431
(dp432
g62
(dp433
sg71
g234
sg64
(lp434
g57
(g78
g59
NtRp435
(dp436
g62
(dp437
g82
g83
ssg71
g431
sg64
(lp438
S'session_id_phylografter'
p439
asbag57
(g78
g59
NtRp440
(dp441
g62
(dp442
g89
g90
ssg71
g431
sg64
(lp443
S':'
asbag57
(g78
g59
NtRp444
(dp445
g62
(dp446
sg71
g431
sg64
(lp447
g57
(g58
g59
NtRp448
(dp449
g62
(dp450
g70
I4
ssg71
g444
sg64
(lp451
g57
(g66
g59
NtRp452
(dp453
g62
(dp454
g70
I3
ssg71
Nsg64
(lp455
g57
(g73
g59
NtRp456
(dp457
g62
(dp458
sg71
g452
sg64
(lp459
g57
(g78
g59
NtRp460
(dp461
g62
(dp462
g82
g83
ssg71
g456
sg64
(lp463
g271
asbag57
(g78
g59
NtRp464
(dp465
g62
(dp466
g89
g90
ssg71
g456
sg64
(lp467
S':'
asbag57
(g78
g59
NtRp468
(dp469
g62
(dp470
sg71
g456
sg64
(lp471
g57
(g58
g59
NtRp472
(dp473
g62
(dp474
g70
I3
ssg71
g468
sg64
(lp475
S''
asbasbasbag57
(g73
g59
NtRp476
(dp477
g62
(dp478
sg71
g452
sg64
(lp479
g57
(g78
g59
NtRp480
(dp481
g62
(dp482
g82
g83
ssg71
g476
sg64
(lp483
g292
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g476
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g476
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g452
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
g313
asbag57
(g78
g59
NtRp504
(dp505
g62
(dp506
g89
g90
ssg71
g496
sg64
(lp507
S':'
asbag57
(g78
g59
NtRp508
(dp509
g62
(dp510
sg71
g496
sg64
(lp511
g57
(g58
g59
NtRp512
(dp513
g62
(dp514
g70
I3
ssg71
g508
sg64
(lp515
S''
asbasbasbag57
(g73
g59
NtRp516
(dp517
g62
(dp518
sg71
g452
sg64
(lp519
g57
(g78
g59
NtRp520
(dp521
g62
(dp522
g82
g83
ssg71
g516
sg64
(lp523
g334
asbag57
(g78
g59
NtRp524
(dp525
g62
(dp526
g89
g90
ssg71
g516
sg64
(lp527
S':'
asbag57
(g78
g59
NtRp528
(dp529
g62
(dp530
sg71
g516
sg64
(lp531
g57
(g58
g59
NtRp532
(dp533
g62
(dp534
g70
I3
ssg71
g528
sg64
(lp535
S''
asbasbasbag57
(g73
g59
NtRp536
(dp537
g62
(dp538
sg71
g452
sg64
(lp539
g57
(g78
g59
NtRp540
(dp541
g62
(dp542
g82
g83
ssg71
g536
sg64
(lp543
g355
asbag57
(g78
g59
NtRp544
(dp545
g62
(dp546
g89
g90
ssg71
g536
sg64
(lp547
S':'
asbag57
(g78
g59
NtRp548
(dp549
g62
(dp550
sg71
g536
sg64
(lp551
g57
(g58
g59
NtRp552
(dp553
g62
(dp554
g70
I3
ssg71
g548
sg64
(lp555
S''
asbasbasbag57
(g73
g59
NtRp556
(dp557
g62
(dp558
sg71
g452
sg64
(lp559
g57
(g78
g59
NtRp560
(dp561
g62
(dp562
g82
g83
ssg71
g556
sg64
(lp563
g376
asbag57
(g78
g59
NtRp564
(dp565
g62
(dp566
g89
g90
ssg71
g556
sg64
(lp567
S':'
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
sg71
g556
sg64
(lp571
g57
(g58
g59
NtRp572
(dp573
g62
(dp574
g70
I3
ssg71
g568
sg64
(lp575
S''
asbasbasbag57
(g73
g59
NtRp576
(dp577
g62
(dp578
sg71
g452
sg64
(lp579
g57
(g78
g59
NtRp580
(dp581
g62
(dp582
g82
g83
ssg71
g576
sg64
(lp583
g397
asbag57
(g78
g59
NtRp584
(dp585
g62
(dp586
g89
g90
ssg71
g576
sg64
(lp587
S':'
asbag57
(g78
g59
NtRp588
(dp589
g62
(dp590
sg71
g576
sg64
(lp591
g57
(g58
g59
NtRp592
(dp593
g62
(dp594
g70
I3
ssg71
g588
sg64
(lp595
S''
asbasbasbag57
(g73
g59
NtRp596
(dp597
g62
(dp598
sg71
g452
sg64
(lp599
g57
(g78
g59
NtRp600
(dp601
g62
(dp602
g82
g83
ssg71
g596
sg64
(lp603
g418
asbag57
(g78
g59
NtRp604
(dp605
g62
(dp606
g89
g90
ssg71
g596
sg64
(lp607
S':'
asbag57
(g78
g59
NtRp608
(dp609
g62
(dp610
sg71
g596
sg64
(lp611
g57
(g58
g59
NtRp612
(dp613
g62
(dp614
g70
I3
ssg71
g608
sg64
(lp615
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp616
(dp617
g62
(dp618
sg71
g234
sg64
(lp619
g57
(g78
g59
NtRp620
(dp621
g62
(dp622
g82
g83
ssg71
g616
sg64
(lp623
S'session_id_welcome'
p624
asbag57
(g78
g59
NtRp625
(dp626
g62
(dp627
g89
g90
ssg71
g616
sg64
(lp628
S':'
asbag57
(g78
g59
NtRp629
(dp630
g62
(dp631
sg71
g616
sg64
(lp632
g57
(g58
g59
NtRp633
(dp634
g62
(dp635
g70
I4
ssg71
g629
sg64
(lp636
g57
(g66
g59
NtRp637
(dp638
g62
(dp639
g70
I3
ssg71
Nsg64
(lp640
g57
(g73
g59
NtRp641
(dp642
g62
(dp643
sg71
g637
sg64
(lp644
g57
(g78
g59
NtRp645
(dp646
g62
(dp647
g82
g83
ssg71
g641
sg64
(lp648
g271
asbag57
(g78
g59
NtRp649
(dp650
g62
(dp651
g89
g90
ssg71
g641
sg64
(lp652
S':'
asbag57
(g78
g59
NtRp653
(dp654
g62
(dp655
sg71
g641
sg64
(lp656
g57
(g58
g59
NtRp657
(dp658
g62
(dp659
g70
I3
ssg71
g653
sg64
(lp660
S''
asbasbasbag57
(g73
g59
NtRp661
(dp662
g62
(dp663
sg71
g637
sg64
(lp664
g57
(g78
g59
NtRp665
(dp666
g62
(dp667
g82
g83
ssg71
g661
sg64
(lp668
g292
asbag57
(g78
g59
NtRp669
(dp670
g62
(dp671
g89
g90
ssg71
g661
sg64
(lp672
S':'
asbag57
(g78
g59
NtRp673
(dp674
g62
(dp675
sg71
g661
sg64
(lp676
g57
(g58
g59
NtRp677
(dp678
g62
(dp679
g70
I3
ssg71
g673
sg64
(lp680
S''
asbasbasbag57
(g73
g59
NtRp681
(dp682
g62
(dp683
sg71
g637
sg64
(lp684
g57
(g78
g59
NtRp685
(dp686
g62
(dp687
g82
g83
ssg71
g681
sg64
(lp688
g313
asbag57
(g78
g59
NtRp689
(dp690
g62
(dp691
g89
g90
ssg71
g681
sg64
(lp692
S':'
asbag57
(g78
g59
NtRp693
(dp694
g62
(dp695
sg71
g681
sg64
(lp696
g57
(g58
g59
NtRp697
(dp698
g62
(dp699
g70
I3
ssg71
g693
sg64
(lp700
S''
asbasbasbag57
(g73
g59
NtRp701
(dp702
g62
(dp703
sg71
g637
sg64
(lp704
g57
(g78
g59
NtRp705
(dp706
g62
(dp707
g82
g83
ssg71
g701
sg64
(lp708
g334
asbag57
(g78
g59
NtRp709
(dp710
g62
(dp711
g89
g90
ssg71
g701
sg64
(lp712
S':'
asbag57
(g78
g59
NtRp713
(dp714
g62
(dp715
sg71
g701
sg64
(lp716
g57
(g58
g59
NtRp717
(dp718
g62
(dp719
g70
I3
ssg71
g713
sg64
(lp720
S''
asbasbasbag57
(g73
g59
NtRp721
(dp722
g62
(dp723
sg71
g637
sg64
(lp724
g57
(g78
g59
NtRp725
(dp726
g62
(dp727
g82
g83
ssg71
g721
sg64
(lp728
g355
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
g89
g90
ssg71
g721
sg64
(lp732
S':'
asbag57
(g78
g59
NtRp733
(dp734
g62
(dp735
sg71
g721
sg64
(lp736
g57
(g58
g59
NtRp737
(dp738
g62
(dp739
g70
I3
ssg71
g733
sg64
(lp740
S''
asbasbasbag57
(g73
g59
NtRp741
(dp742
g62
(dp743
sg71
g637
sg64
(lp744
g57
(g78
g59
NtRp745
(dp746
g62
(dp747
g82
g83
ssg71
g741
sg64
(lp748
g376
asbag57
(g78
g59
NtRp749
(dp750
g62
(dp751
g89
g90
ssg71
g741
sg64
(lp752
S':'
asbag57
(g78
g59
NtRp753
(dp754
g62
(dp755
sg71
g741
sg64
(lp756
g57
(g58
g59
NtRp757
(dp758
g62
(dp759
g70
I3
ssg71
g753
sg64
(lp760
S''
asbasbasbag57
(g73
g59
NtRp761
(dp762
g62
(dp763
sg71
g637
sg64
(lp764
g57
(g78
g59
NtRp765
(dp766
g62
(dp767
g82
g83
ssg71
g761
sg64
(lp768
g397
asbag57
(g78
g59
NtRp769
(dp770
g62
(dp771
g89
g90
ssg71
g761
sg64
(lp772
S':'
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
sg71
g761
sg64
(lp776
g57
(g58
g59
NtRp777
(dp778
g62
(dp779
g70
I3
ssg71
g773
sg64
(lp780
S''
asbasbasbag57
(g73
g59
NtRp781
(dp782
g62
(dp783
sg71
g637
sg64
(lp784
g57
(g78
g59
NtRp785
(dp786
g62
(dp787
g82
g83
ssg71
g781
sg64
(lp788
g418
asbag57
(g78
g59
NtRp789
(dp790
g62
(dp791
g89
g90
ssg71
g781
sg64
(lp792
S':'
asbag57
(g78
g59
NtRp793
(dp794
g62
(dp795
sg71
g781
sg64
(lp796
g57
(g58
g59
NtRp797
(dp798
g62
(dp799
g70
I3
ssg71
g793
sg64
(lp800
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp801
(dp802
g62
(dp803
sg71
g67
sg64
(lp804
g57
(g78
g59
NtRp805
(dp806
g62
(dp807
g82
g83
ssg71
g801
sg64
(lp808
S'env'
p809
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
g89
g90
ssg71
g801
sg64
(lp813
S':'
asbag57
(g78
g59
NtRp814
(dp815
g62
(dp816
sg71
g801
sg64
(lp817
g57
(g58
g59
NtRp818
(dp819
g62
(dp820
g70
I5
ssg71
g814
sg64
(lp821
g57
(g66
g59
NtRp822
(dp823
g62
(dp824
g70
I4
ssg71
Nsg64
(lp825
g57
(g73
g59
NtRp826
(dp827
g62
(dp828
sg71
g822
sg64
(lp829
g57
(g78
g59
NtRp830
(dp831
g62
(dp832
g82
g83
ssg71
g826
sg64
(lp833
S'app_folders'
p834
asbag57
(g78
g59
NtRp835
(dp836
g62
(dp837
g89
g90
ssg71
g826
sg64
(lp838
S':'
asbag57
(g78
g59
NtRp839
(dp840
g62
(dp841
sg71
g826
sg64
(lp842
g57
(g58
g59
NtRp843
(dp844
g62
(dp845
g70
I4
ssg71
g839
sg64
(lp846
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p847
asbasbasbag57
(g73
g59
NtRp848
(dp849
g62
(dp850
sg71
g822
sg64
(lp851
g57
(g78
g59
NtRp852
(dp853
g62
(dp854
g82
g83
ssg71
g848
sg64
(lp855
S'applications_parent'
p856
asbag57
(g78
g59
NtRp857
(dp858
g62
(dp859
g89
g90
ssg71
g848
sg64
(lp860
S':'
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
sg71
g848
sg64
(lp864
g57
(g58
g59
NtRp865
(dp866
g62
(dp867
g70
I4
ssg71
g861
sg64
(lp868
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p869
asbasbasbag57
(g73
g59
NtRp870
(dp871
g62
(dp872
sg71
g822
sg64
(lp873
g57
(g78
g59
NtRp874
(dp875
g62
(dp876
g82
g83
ssg71
g870
sg64
(lp877
S'cmd_args'
p878
asbag57
(g78
g59
NtRp879
(dp880
g62
(dp881
g89
g90
ssg71
g870
sg64
(lp882
S':'
asbag57
(g78
g59
NtRp883
(dp884
g62
(dp885
sg71
g870
sg64
(lp886
g57
(g58
g59
NtRp887
(dp888
g62
(dp889
g70
I4
ssg71
g883
sg64
(lp890
g57
(g66
g59
NtRp891
(dp892
g62
(dp893
g70
I3
ssg71
Nsg64
(lp894
sbasbasbasbag57
(g73
g59
NtRp895
(dp896
g62
(dp897
sg71
g822
sg64
(lp898
g57
(g78
g59
NtRp899
(dp900
g62
(dp901
g82
g83
ssg71
g895
sg64
(lp902
S'cmd_options'
p903
asbag57
(g78
g59
NtRp904
(dp905
g62
(dp906
g89
g90
ssg71
g895
sg64
(lp907
S':'
asbag57
(g78
g59
NtRp908
(dp909
g62
(dp910
sg71
g895
sg64
(lp911
g57
(g58
g59
NtRp912
(dp913
g62
(dp914
g70
I4
ssg71
g908
sg64
(lp915
S"<Values at 0x19539b8: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p916
asbasbasbag57
(g73
g59
NtRp917
(dp918
g62
(dp919
sg71
g822
sg64
(lp920
g57
(g78
g59
NtRp921
(dp922
g62
(dp923
g82
g83
ssg71
g917
sg64
(lp924
S'db_sessions'
p925
asbag57
(g78
g59
NtRp926
(dp927
g62
(dp928
g89
g90
ssg71
g917
sg64
(lp929
S':'
asbag57
(g78
g59
NtRp930
(dp931
g62
(dp932
sg71
g917
sg64
(lp933
g57
(g58
g59
NtRp934
(dp935
g62
(dp936
g70
I4
ssg71
g930
sg64
(lp937
S'set([])'
p938
asbasbasbag57
(g73
g59
NtRp939
(dp940
g62
(dp941
sg71
g822
sg64
(lp942
g57
(g78
g59
NtRp943
(dp944
g62
(dp945
g82
g83
ssg71
g939
sg64
(lp946
S'debugging'
p947
asbag57
(g78
g59
NtRp948
(dp949
g62
(dp950
g89
g90
ssg71
g939
sg64
(lp951
S':'
asbag57
(g78
g59
NtRp952
(dp953
g62
(dp954
sg71
g939
sg64
(lp955
g57
(g58
g59
NtRp956
(dp957
g62
(dp958
g70
I4
ssg71
g952
sg64
(lp959
g100
asbasbasbag57
(g73
g59
NtRp960
(dp961
g62
(dp962
sg71
g822
sg64
(lp963
g57
(g78
g59
NtRp964
(dp965
g62
(dp966
g82
g83
ssg71
g960
sg64
(lp967
S'gluon_parent'
p968
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
g89
g90
ssg71
g960
sg64
(lp972
S':'
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
sg71
g960
sg64
(lp976
g57
(g58
g59
NtRp977
(dp978
g62
(dp979
g70
I4
ssg71
g973
sg64
(lp980
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p981
asbasbasbag57
(g73
g59
NtRp982
(dp983
g62
(dp984
sg71
g822
sg64
(lp985
g57
(g78
g59
NtRp986
(dp987
g62
(dp988
g82
g83
ssg71
g982
sg64
(lp989
S'http_accept'
p990
asbag57
(g78
g59
NtRp991
(dp992
g62
(dp993
g89
g90
ssg71
g982
sg64
(lp994
S':'
asbag57
(g78
g59
NtRp995
(dp996
g62
(dp997
sg71
g982
sg64
(lp998
g57
(g58
g59
NtRp999
(dp1000
g62
(dp1001
g70
I4
ssg71
g995
sg64
(lp1002
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1003
asbasbasbag57
(g73
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g822
sg64
(lp1007
g57
(g78
g59
NtRp1008
(dp1009
g62
(dp1010
g82
g83
ssg71
g1004
sg64
(lp1011
S'http_accept_charset'
p1012
asbag57
(g78
g59
NtRp1013
(dp1014
g62
(dp1015
g89
g90
ssg71
g1004
sg64
(lp1016
S':'
asbag57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
sg71
g1004
sg64
(lp1020
g57
(g58
g59
NtRp1021
(dp1022
g62
(dp1023
g70
I4
ssg71
g1017
sg64
(lp1024
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1025
asbasbasbag57
(g73
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g822
sg64
(lp1029
g57
(g78
g59
NtRp1030
(dp1031
g62
(dp1032
g82
g83
ssg71
g1026
sg64
(lp1033
S'http_accept_encoding'
p1034
asbag57
(g78
g59
NtRp1035
(dp1036
g62
(dp1037
g89
g90
ssg71
g1026
sg64
(lp1038
S':'
asbag57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
sg71
g1026
sg64
(lp1042
g57
(g58
g59
NtRp1043
(dp1044
g62
(dp1045
g70
I4
ssg71
g1039
sg64
(lp1046
S'gzip,deflate,sdch'
p1047
asbasbasbag57
(g73
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g822
sg64
(lp1051
g57
(g78
g59
NtRp1052
(dp1053
g62
(dp1054
g82
g83
ssg71
g1048
sg64
(lp1055
S'http_accept_language'
p1056
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
g89
g90
ssg71
g1048
sg64
(lp1060
S':'
asbag57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
sg71
g1048
sg64
(lp1064
g57
(g58
g59
NtRp1065
(dp1066
g62
(dp1067
g70
I4
ssg71
g1061
sg64
(lp1068
S'en-US,en;q=0.8'
p1069
asbasbasbag57
(g73
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g822
sg64
(lp1073
g57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g82
g83
ssg71
g1070
sg64
(lp1077
S'http_connection'
p1078
asbag57
(g78
g59
NtRp1079
(dp1080
g62
(dp1081
g89
g90
ssg71
g1070
sg64
(lp1082
S':'
asbag57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
sg71
g1070
sg64
(lp1086
g57
(g58
g59
NtRp1087
(dp1088
g62
(dp1089
g70
I4
ssg71
g1083
sg64
(lp1090
S'keep-alive'
p1091
asbasbasbag57
(g73
g59
NtRp1092
(dp1093
g62
(dp1094
sg71
g822
sg64
(lp1095
g57
(g78
g59
NtRp1096
(dp1097
g62
(dp1098
g82
g83
ssg71
g1092
sg64
(lp1099
S'http_cookie'
p1100
asbag57
(g78
g59
NtRp1101
(dp1102
g62
(dp1103
g89
g90
ssg71
g1092
sg64
(lp1104
S':'
asbag57
(g78
g59
NtRp1105
(dp1106
g62
(dp1107
sg71
g1092
sg64
(lp1108
g57
(g58
g59
NtRp1109
(dp1110
g62
(dp1111
g70
I4
ssg71
g1105
sg64
(lp1112
S'session_id_welcome=127.0.0.1-3d4ceb6b-a5a6-4ae7-bbde-3c7d2974bedf; session_id_admin=127.0.0.1-ad3c68cd-ccae-4e0a-852d-2d207a50acd0; session_id_phylografter=127.0.0.1-94d59530-2f92-49a5-9554-e3c37d572288'
p1113
asbasbasbag57
(g73
g59
NtRp1114
(dp1115
g62
(dp1116
sg71
g822
sg64
(lp1117
g57
(g78
g59
NtRp1118
(dp1119
g62
(dp1120
g82
g83
ssg71
g1114
sg64
(lp1121
S'http_host'
p1122
asbag57
(g78
g59
NtRp1123
(dp1124
g62
(dp1125
g89
g90
ssg71
g1114
sg64
(lp1126
S':'
asbag57
(g78
g59
NtRp1127
(dp1128
g62
(dp1129
sg71
g1114
sg64
(lp1130
g57
(g58
g59
NtRp1131
(dp1132
g62
(dp1133
g70
I4
ssg71
g1127
sg64
(lp1134
S'127.0.0.1:8000'
p1135
asbasbasbag57
(g73
g59
NtRp1136
(dp1137
g62
(dp1138
sg71
g822
sg64
(lp1139
g57
(g78
g59
NtRp1140
(dp1141
g62
(dp1142
g82
g83
ssg71
g1136
sg64
(lp1143
S'http_referer'
p1144
asbag57
(g78
g59
NtRp1145
(dp1146
g62
(dp1147
g89
g90
ssg71
g1136
sg64
(lp1148
S':'
asbag57
(g78
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1136
sg64
(lp1152
g57
(g58
g59
NtRp1153
(dp1154
g62
(dp1155
g70
I4
ssg71
g1149
sg64
(lp1156
S'http://127.0.0.1:8000/Phylografter/default/index'
p1157
asbasbasbag57
(g73
g59
NtRp1158
(dp1159
g62
(dp1160
sg71
g822
sg64
(lp1161
g57
(g78
g59
NtRp1162
(dp1163
g62
(dp1164
g82
g83
ssg71
g1158
sg64
(lp1165
S'http_user_agent'
p1166
asbag57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
g89
g90
ssg71
g1158
sg64
(lp1170
S':'
asbag57
(g78
g59
NtRp1171
(dp1172
g62
(dp1173
sg71
g1158
sg64
(lp1174
g57
(g58
g59
NtRp1175
(dp1176
g62
(dp1177
g70
I4
ssg71
g1171
sg64
(lp1178
S'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5'
p1179
asbasbasbag57
(g73
g59
NtRp1180
(dp1181
g62
(dp1182
sg71
g822
sg64
(lp1183
g57
(g78
g59
NtRp1184
(dp1185
g62
(dp1186
g82
g83
ssg71
g1180
sg64
(lp1187
S'is_jython'
p1188
asbag57
(g78
g59
NtRp1189
(dp1190
g62
(dp1191
g89
g90
ssg71
g1180
sg64
(lp1192
S':'
asbag57
(g78
g59
NtRp1193
(dp1194
g62
(dp1195
sg71
g1180
sg64
(lp1196
g57
(g58
g59
NtRp1197
(dp1198
g62
(dp1199
g70
I4
ssg71
g1193
sg64
(lp1200
g100
asbasbasbag57
(g73
g59
NtRp1201
(dp1202
g62
(dp1203
sg71
g822
sg64
(lp1204
g57
(g78
g59
NtRp1205
(dp1206
g62
(dp1207
g82
g83
ssg71
g1201
sg64
(lp1208
S'is_pypy'
p1209
asbag57
(g78
g59
NtRp1210
(dp1211
g62
(dp1212
g89
g90
ssg71
g1201
sg64
(lp1213
S':'
asbag57
(g78
g59
NtRp1214
(dp1215
g62
(dp1216
sg71
g1201
sg64
(lp1217
g57
(g58
g59
NtRp1218
(dp1219
g62
(dp1220
g70
I4
ssg71
g1214
sg64
(lp1221
g100
asbasbasbag57
(g73
g59
NtRp1222
(dp1223
g62
(dp1224
sg71
g822
sg64
(lp1225
g57
(g78
g59
NtRp1226
(dp1227
g62
(dp1228
g82
g83
ssg71
g1222
sg64
(lp1229
S'path_info'
p1230
asbag57
(g78
g59
NtRp1231
(dp1232
g62
(dp1233
g89
g90
ssg71
g1222
sg64
(lp1234
S':'
asbag57
(g78
g59
NtRp1235
(dp1236
g62
(dp1237
sg71
g1222
sg64
(lp1238
g57
(g58
g59
NtRp1239
(dp1240
g62
(dp1241
g70
I4
ssg71
g1235
sg64
(lp1242
S'/Phylografter/study/index'
p1243
asbasbasbag57
(g73
g59
NtRp1244
(dp1245
g62
(dp1246
sg71
g822
sg64
(lp1247
g57
(g78
g59
NtRp1248
(dp1249
g62
(dp1250
g82
g83
ssg71
g1244
sg64
(lp1251
S'query_string'
p1252
asbag57
(g78
g59
NtRp1253
(dp1254
g62
(dp1255
g89
g90
ssg71
g1244
sg64
(lp1256
S':'
asbag57
(g78
g59
NtRp1257
(dp1258
g62
(dp1259
sg71
g1244
sg64
(lp1260
g57
(g58
g59
NtRp1261
(dp1262
g62
(dp1263
g70
I4
ssg71
g1257
sg64
(lp1264
S''
asbasbasbag57
(g73
g59
NtRp1265
(dp1266
g62
(dp1267
sg71
g822
sg64
(lp1268
g57
(g78
g59
NtRp1269
(dp1270
g62
(dp1271
g82
g83
ssg71
g1265
sg64
(lp1272
S'remote_addr'
p1273
asbag57
(g78
g59
NtRp1274
(dp1275
g62
(dp1276
g89
g90
ssg71
g1265
sg64
(lp1277
S':'
asbag57
(g78
g59
NtRp1278
(dp1279
g62
(dp1280
sg71
g1265
sg64
(lp1281
g57
(g58
g59
NtRp1282
(dp1283
g62
(dp1284
g70
I4
ssg71
g1278
sg64
(lp1285
g190
asbasbasbag57
(g73
g59
NtRp1286
(dp1287
g62
(dp1288
sg71
g822
sg64
(lp1289
g57
(g78
g59
NtRp1290
(dp1291
g62
(dp1292
g82
g83
ssg71
g1286
sg64
(lp1293
S'remote_port'
p1294
asbag57
(g78
g59
NtRp1295
(dp1296
g62
(dp1297
g89
g90
ssg71
g1286
sg64
(lp1298
S':'
asbag57
(g78
g59
NtRp1299
(dp1300
g62
(dp1301
sg71
g1286
sg64
(lp1302
g57
(g58
g59
NtRp1303
(dp1304
g62
(dp1305
g70
I4
ssg71
g1299
sg64
(lp1306
S'3233'
p1307
asbasbasbag57
(g73
g59
NtRp1308
(dp1309
g62
(dp1310
sg71
g822
sg64
(lp1311
g57
(g78
g59
NtRp1312
(dp1313
g62
(dp1314
g82
g83
ssg71
g1308
sg64
(lp1315
S'request_method'
p1316
asbag57
(g78
g59
NtRp1317
(dp1318
g62
(dp1319
g89
g90
ssg71
g1308
sg64
(lp1320
S':'
asbag57
(g78
g59
NtRp1321
(dp1322
g62
(dp1323
sg71
g1308
sg64
(lp1324
g57
(g58
g59
NtRp1325
(dp1326
g62
(dp1327
g70
I4
ssg71
g1321
sg64
(lp1328
S'GET'
p1329
asbasbasbag57
(g73
g59
NtRp1330
(dp1331
g62
(dp1332
sg71
g822
sg64
(lp1333
g57
(g78
g59
NtRp1334
(dp1335
g62
(dp1336
g82
g83
ssg71
g1330
sg64
(lp1337
S'script_name'
p1338
asbag57
(g78
g59
NtRp1339
(dp1340
g62
(dp1341
g89
g90
ssg71
g1330
sg64
(lp1342
S':'
asbag57
(g78
g59
NtRp1343
(dp1344
g62
(dp1345
sg71
g1330
sg64
(lp1346
g57
(g58
g59
NtRp1347
(dp1348
g62
(dp1349
g70
I4
ssg71
g1343
sg64
(lp1350
S''
asbasbasbag57
(g73
g59
NtRp1351
(dp1352
g62
(dp1353
sg71
g822
sg64
(lp1354
g57
(g78
g59
NtRp1355
(dp1356
g62
(dp1357
g82
g83
ssg71
g1351
sg64
(lp1358
S'server_name'
p1359
asbag57
(g78
g59
NtRp1360
(dp1361
g62
(dp1362
g89
g90
ssg71
g1351
sg64
(lp1363
S':'
asbag57
(g78
g59
NtRp1364
(dp1365
g62
(dp1366
sg71
g1351
sg64
(lp1367
g57
(g58
g59
NtRp1368
(dp1369
g62
(dp1370
g70
I4
ssg71
g1364
sg64
(lp1371
S'fm-biosync-int1'
p1372
asbasbasbag57
(g73
g59
NtRp1373
(dp1374
g62
(dp1375
sg71
g822
sg64
(lp1376
g57
(g78
g59
NtRp1377
(dp1378
g62
(dp1379
g82
g83
ssg71
g1373
sg64
(lp1380
S'server_port'
p1381
asbag57
(g78
g59
NtRp1382
(dp1383
g62
(dp1384
g89
g90
ssg71
g1373
sg64
(lp1385
S':'
asbag57
(g78
g59
NtRp1386
(dp1387
g62
(dp1388
sg71
g1373
sg64
(lp1389
g57
(g58
g59
NtRp1390
(dp1391
g62
(dp1392
g70
I4
ssg71
g1386
sg64
(lp1393
S'8000'
p1394
asbasbasbag57
(g73
g59
NtRp1395
(dp1396
g62
(dp1397
sg71
g822
sg64
(lp1398
g57
(g78
g59
NtRp1399
(dp1400
g62
(dp1401
g82
g83
ssg71
g1395
sg64
(lp1402
S'server_protocol'
p1403
asbag57
(g78
g59
NtRp1404
(dp1405
g62
(dp1406
g89
g90
ssg71
g1395
sg64
(lp1407
S':'
asbag57
(g78
g59
NtRp1408
(dp1409
g62
(dp1410
sg71
g1395
sg64
(lp1411
g57
(g58
g59
NtRp1412
(dp1413
g62
(dp1414
g70
I4
ssg71
g1408
sg64
(lp1415
S'HTTP/1.1'
p1416
asbasbasbag57
(g73
g59
NtRp1417
(dp1418
g62
(dp1419
sg71
g822
sg64
(lp1420
g57
(g78
g59
NtRp1421
(dp1422
g62
(dp1423
g82
g83
ssg71
g1417
sg64
(lp1424
S'server_software'
p1425
asbag57
(g78
g59
NtRp1426
(dp1427
g62
(dp1428
g89
g90
ssg71
g1417
sg64
(lp1429
S':'
asbag57
(g78
g59
NtRp1430
(dp1431
g62
(dp1432
sg71
g1417
sg64
(lp1433
g57
(g58
g59
NtRp1434
(dp1435
g62
(dp1436
g70
I4
ssg71
g1430
sg64
(lp1437
S'Rocket 1.2.4'
p1438
asbasbasbag57
(g73
g59
NtRp1439
(dp1440
g62
(dp1441
sg71
g822
sg64
(lp1442
g57
(g78
g59
NtRp1443
(dp1444
g62
(dp1445
g82
g83
ssg71
g1439
sg64
(lp1446
S'web2py_crontype'
p1447
asbag57
(g78
g59
NtRp1448
(dp1449
g62
(dp1450
g89
g90
ssg71
g1439
sg64
(lp1451
S':'
asbag57
(g78
g59
NtRp1452
(dp1453
g62
(dp1454
sg71
g1439
sg64
(lp1455
g57
(g58
g59
NtRp1456
(dp1457
g62
(dp1458
g70
I4
ssg71
g1452
sg64
(lp1459
S'hard'
p1460
asbasbasbag57
(g73
g59
NtRp1461
(dp1462
g62
(dp1463
sg71
g822
sg64
(lp1464
g57
(g78
g59
NtRp1465
(dp1466
g62
(dp1467
g82
g83
ssg71
g1461
sg64
(lp1468
S'web2py_path'
p1469
asbag57
(g78
g59
NtRp1470
(dp1471
g62
(dp1472
g89
g90
ssg71
g1461
sg64
(lp1473
S':'
asbag57
(g78
g59
NtRp1474
(dp1475
g62
(dp1476
sg71
g1461
sg64
(lp1477
g57
(g58
g59
NtRp1478
(dp1479
g62
(dp1480
g70
I4
ssg71
g1474
sg64
(lp1481
g869
asbasbasbag57
(g73
g59
NtRp1482
(dp1483
g62
(dp1484
sg71
g822
sg64
(lp1485
g57
(g78
g59
NtRp1486
(dp1487
g62
(dp1488
g82
g83
ssg71
g1482
sg64
(lp1489
S'web2py_version'
p1490
asbag57
(g78
g59
NtRp1491
(dp1492
g62
(dp1493
g89
g90
ssg71
g1482
sg64
(lp1494
S':'
asbag57
(g78
g59
NtRp1495
(dp1496
g62
(dp1497
sg71
g1482
sg64
(lp1498
g57
(g58
g59
NtRp1499
(dp1500
g62
(dp1501
g70
I4
ssg71
g1495
sg64
(lp1502
g57
(g66
g59
NtRp1503
(dp1504
g62
(dp1505
g70
I3
ssg71
Nsg64
(lp1506
g57
(g73
g59
NtRp1507
(dp1508
g62
(dp1509
sg71
g1503
sg64
(lp1510
g57
(g78
g59
NtRp1511
(dp1512
g62
(dp1513
sg71
g1507
sg64
(lp1514
g57
(g58
g59
NtRp1515
(dp1516
g62
(dp1517
g70
I3
ssg71
g1511
sg64
(lp1518
S'1'
asbasbasbag57
(g73
g59
NtRp1519
(dp1520
g62
(dp1521
sg71
g1503
sg64
(lp1522
g57
(g78
g59
NtRp1523
(dp1524
g62
(dp1525
sg71
g1519
sg64
(lp1526
g57
(g58
g59
NtRp1527
(dp1528
g62
(dp1529
g70
I3
ssg71
g1523
sg64
(lp1530
S'99'
p1531
asbasbasbag57
(g73
g59
NtRp1532
(dp1533
g62
(dp1534
sg71
g1503
sg64
(lp1535
g57
(g78
g59
NtRp1536
(dp1537
g62
(dp1538
sg71
g1532
sg64
(lp1539
g57
(g58
g59
NtRp1540
(dp1541
g62
(dp1542
g70
I3
ssg71
g1536
sg64
(lp1543
S'7'
asbasbasbag57
(g73
g59
NtRp1544
(dp1545
g62
(dp1546
sg71
g1503
sg64
(lp1547
g57
(g78
g59
NtRp1548
(dp1549
g62
(dp1550
sg71
g1544
sg64
(lp1551
g57
(g58
g59
NtRp1552
(dp1553
g62
(dp1554
g70
I3
ssg71
g1548
sg64
(lp1555
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1556
asbasbasbag57
(g73
g59
NtRp1557
(dp1558
g62
(dp1559
sg71
g1503
sg64
(lp1560
g57
(g78
g59
NtRp1561
(dp1562
g62
(dp1563
sg71
g1557
sg64
(lp1564
g57
(g58
g59
NtRp1565
(dp1566
g62
(dp1567
g70
I3
ssg71
g1561
sg64
(lp1568
S'stable'
p1569
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1570
(dp1571
g62
(dp1572
sg71
g822
sg64
(lp1573
g57
(g78
g59
NtRp1574
(dp1575
g62
(dp1576
g82
g83
ssg71
g1570
sg64
(lp1577
S'wsgi_errors'
p1578
asbag57
(g78
g59
NtRp1579
(dp1580
g62
(dp1581
g89
g90
ssg71
g1570
sg64
(lp1582
S':'
asbag57
(g78
g59
NtRp1583
(dp1584
g62
(dp1585
sg71
g1570
sg64
(lp1586
g57
(g58
g59
NtRp1587
(dp1588
g62
(dp1589
g70
I4
ssg71
g1583
sg64
(lp1590
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p1591
asbasbasbag57
(g73
g59
NtRp1592
(dp1593
g62
(dp1594
sg71
g822
sg64
(lp1595
g57
(g78
g59
NtRp1596
(dp1597
g62
(dp1598
g82
g83
ssg71
g1592
sg64
(lp1599
S'wsgi_file_wrapper'
p1600
asbag57
(g78
g59
NtRp1601
(dp1602
g62
(dp1603
g89
g90
ssg71
g1592
sg64
(lp1604
S':'
asbag57
(g78
g59
NtRp1605
(dp1606
g62
(dp1607
sg71
g1592
sg64
(lp1608
g57
(g58
g59
NtRp1609
(dp1610
g62
(dp1611
g70
I4
ssg71
g1605
sg64
(lp1612
S'<class wsgiref.util.FileWrapper at 0x017FAC00>'
p1613
asbasbasbag57
(g73
g59
NtRp1614
(dp1615
g62
(dp1616
sg71
g822
sg64
(lp1617
g57
(g78
g59
NtRp1618
(dp1619
g62
(dp1620
g82
g83
ssg71
g1614
sg64
(lp1621
S'wsgi_input'
p1622
asbag57
(g78
g59
NtRp1623
(dp1624
g62
(dp1625
g89
g90
ssg71
g1614
sg64
(lp1626
S':'
asbag57
(g78
g59
NtRp1627
(dp1628
g62
(dp1629
sg71
g1614
sg64
(lp1630
g57
(g58
g59
NtRp1631
(dp1632
g62
(dp1633
g70
I4
ssg71
g1627
sg64
(lp1634
S'<socket._fileobject object at 0x02855130>'
p1635
asbasbasbag57
(g73
g59
NtRp1636
(dp1637
g62
(dp1638
sg71
g822
sg64
(lp1639
g57
(g78
g59
NtRp1640
(dp1641
g62
(dp1642
g82
g83
ssg71
g1636
sg64
(lp1643
S'wsgi_multiprocess'
p1644
asbag57
(g78
g59
NtRp1645
(dp1646
g62
(dp1647
g89
g90
ssg71
g1636
sg64
(lp1648
S':'
asbag57
(g78
g59
NtRp1649
(dp1650
g62
(dp1651
sg71
g1636
sg64
(lp1652
g57
(g58
g59
NtRp1653
(dp1654
g62
(dp1655
g70
I4
ssg71
g1649
sg64
(lp1656
g100
asbasbasbag57
(g73
g59
NtRp1657
(dp1658
g62
(dp1659
sg71
g822
sg64
(lp1660
g57
(g78
g59
NtRp1661
(dp1662
g62
(dp1663
g82
g83
ssg71
g1657
sg64
(lp1664
S'wsgi_multithread'
p1665
asbag57
(g78
g59
NtRp1666
(dp1667
g62
(dp1668
g89
g90
ssg71
g1657
sg64
(lp1669
S':'
asbag57
(g78
g59
NtRp1670
(dp1671
g62
(dp1672
sg71
g1657
sg64
(lp1673
g57
(g58
g59
NtRp1674
(dp1675
g62
(dp1676
g70
I4
ssg71
g1670
sg64
(lp1677
S'True'
p1678
asbasbasbag57
(g73
g59
NtRp1679
(dp1680
g62
(dp1681
sg71
g822
sg64
(lp1682
g57
(g78
g59
NtRp1683
(dp1684
g62
(dp1685
g82
g83
ssg71
g1679
sg64
(lp1686
S'wsgi_run_once'
p1687
asbag57
(g78
g59
NtRp1688
(dp1689
g62
(dp1690
g89
g90
ssg71
g1679
sg64
(lp1691
S':'
asbag57
(g78
g59
NtRp1692
(dp1693
g62
(dp1694
sg71
g1679
sg64
(lp1695
g57
(g58
g59
NtRp1696
(dp1697
g62
(dp1698
g70
I4
ssg71
g1692
sg64
(lp1699
g100
asbasbasbag57
(g73
g59
NtRp1700
(dp1701
g62
(dp1702
sg71
g822
sg64
(lp1703
g57
(g78
g59
NtRp1704
(dp1705
g62
(dp1706
g82
g83
ssg71
g1700
sg64
(lp1707
S'wsgi_url_scheme'
p1708
asbag57
(g78
g59
NtRp1709
(dp1710
g62
(dp1711
g89
g90
ssg71
g1700
sg64
(lp1712
S':'
asbag57
(g78
g59
NtRp1713
(dp1714
g62
(dp1715
sg71
g1700
sg64
(lp1716
g57
(g58
g59
NtRp1717
(dp1718
g62
(dp1719
g70
I4
ssg71
g1713
sg64
(lp1720
S'http'
p1721
asbasbasbag57
(g73
g59
NtRp1722
(dp1723
g62
(dp1724
sg71
g822
sg64
(lp1725
g57
(g78
g59
NtRp1726
(dp1727
g62
(dp1728
g82
g83
ssg71
g1722
sg64
(lp1729
S'wsgi_version'
p1730
asbag57
(g78
g59
NtRp1731
(dp1732
g62
(dp1733
g89
g90
ssg71
g1722
sg64
(lp1734
S':'
asbag57
(g78
g59
NtRp1735
(dp1736
g62
(dp1737
sg71
g1722
sg64
(lp1738
g57
(g58
g59
NtRp1739
(dp1740
g62
(dp1741
g70
I4
ssg71
g1735
sg64
(lp1742
g57
(g66
g59
NtRp1743
(dp1744
g62
(dp1745
g70
I3
ssg71
Nsg64
(lp1746
g57
(g73
g59
NtRp1747
(dp1748
g62
(dp1749
sg71
g1743
sg64
(lp1750
g57
(g78
g59
NtRp1751
(dp1752
g62
(dp1753
sg71
g1747
sg64
(lp1754
g57
(g58
g59
NtRp1755
(dp1756
g62
(dp1757
g70
I3
ssg71
g1751
sg64
(lp1758
S'1'
asbasbasbag57
(g73
g59
NtRp1759
(dp1760
g62
(dp1761
sg71
g1743
sg64
(lp1762
g57
(g78
g59
NtRp1763
(dp1764
g62
(dp1765
sg71
g1759
sg64
(lp1766
g57
(g58
g59
NtRp1767
(dp1768
g62
(dp1769
g70
I3
ssg71
g1763
sg64
(lp1770
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1771
(dp1772
g62
(dp1773
sg71
g67
sg64
(lp1774
g57
(g78
g59
NtRp1775
(dp1776
g62
(dp1777
g82
g83
ssg71
g1771
sg64
(lp1778
S'extension'
p1779
asbag57
(g78
g59
NtRp1780
(dp1781
g62
(dp1782
g89
g90
ssg71
g1771
sg64
(lp1783
S':'
asbag57
(g78
g59
NtRp1784
(dp1785
g62
(dp1786
sg71
g1771
sg64
(lp1787
g57
(g58
g59
NtRp1788
(dp1789
g62
(dp1790
g70
I5
ssg71
g1784
sg64
(lp1791
S'html'
p1792
asbasbasbag57
(g73
g59
NtRp1793
(dp1794
g62
(dp1795
sg71
g67
sg64
(lp1796
g57
(g78
g59
NtRp1797
(dp1798
g62
(dp1799
g82
g83
ssg71
g1793
sg64
(lp1800
S'folder'
p1801
asbag57
(g78
g59
NtRp1802
(dp1803
g62
(dp1804
g89
g90
ssg71
g1793
sg64
(lp1805
S':'
asbag57
(g78
g59
NtRp1806
(dp1807
g62
(dp1808
sg71
g1793
sg64
(lp1809
g57
(g58
g59
NtRp1810
(dp1811
g62
(dp1812
g70
I5
ssg71
g1806
sg64
(lp1813
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\'
p1814
asbasbasbag57
(g73
g59
NtRp1815
(dp1816
g62
(dp1817
sg71
g67
sg64
(lp1818
g57
(g78
g59
NtRp1819
(dp1820
g62
(dp1821
g82
g83
ssg71
g1815
sg64
(lp1822
S'function'
p1823
asbag57
(g78
g59
NtRp1824
(dp1825
g62
(dp1826
g89
g90
ssg71
g1815
sg64
(lp1827
S':'
asbag57
(g78
g59
NtRp1828
(dp1829
g62
(dp1830
sg71
g1815
sg64
(lp1831
g57
(g58
g59
NtRp1832
(dp1833
g62
(dp1834
g70
I5
ssg71
g1828
sg64
(lp1835
S'index'
p1836
asbasbasbag57
(g73
g59
NtRp1837
(dp1838
g62
(dp1839
sg71
g67
sg64
(lp1840
g57
(g78
g59
NtRp1841
(dp1842
g62
(dp1843
g82
g83
ssg71
g1837
sg64
(lp1844
S'get_vars'
p1845
asbag57
(g78
g59
NtRp1846
(dp1847
g62
(dp1848
g89
g90
ssg71
g1837
sg64
(lp1849
S':'
asbag57
(g78
g59
NtRp1850
(dp1851
g62
(dp1852
sg71
g1837
sg64
(lp1853
g57
(g58
g59
NtRp1854
(dp1855
g62
(dp1856
g70
I5
ssg71
g1850
sg64
(lp1857
g57
(g66
g59
NtRp1858
(dp1859
g62
(dp1860
g70
I4
ssg71
Nsg64
(lp1861
sbasbasbasbag57
(g73
g59
NtRp1862
(dp1863
g62
(dp1864
sg71
g67
sg64
(lp1865
g57
(g78
g59
NtRp1866
(dp1867
g62
(dp1868
g82
g83
ssg71
g1862
sg64
(lp1869
S'global_settings'
p1870
asbag57
(g78
g59
NtRp1871
(dp1872
g62
(dp1873
g89
g90
ssg71
g1862
sg64
(lp1874
S':'
asbag57
(g78
g59
NtRp1875
(dp1876
g62
(dp1877
sg71
g1862
sg64
(lp1878
g57
(g58
g59
NtRp1879
(dp1880
g62
(dp1881
g70
I5
ssg71
g1875
sg64
(lp1882
g57
(g66
g59
NtRp1883
(dp1884
g62
(dp1885
g70
I4
ssg71
Nsg64
(lp1886
g57
(g73
g59
NtRp1887
(dp1888
g62
(dp1889
sg71
g1883
sg64
(lp1890
g57
(g78
g59
NtRp1891
(dp1892
g62
(dp1893
g82
g83
ssg71
g1887
sg64
(lp1894
g834
asbag57
(g78
g59
NtRp1895
(dp1896
g62
(dp1897
g89
g90
ssg71
g1887
sg64
(lp1898
S':'
asbag57
(g78
g59
NtRp1899
(dp1900
g62
(dp1901
sg71
g1887
sg64
(lp1902
g57
(g58
g59
NtRp1903
(dp1904
g62
(dp1905
g70
I4
ssg71
g1899
sg64
(lp1906
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p1907
asbasbasbag57
(g73
g59
NtRp1908
(dp1909
g62
(dp1910
sg71
g1883
sg64
(lp1911
g57
(g78
g59
NtRp1912
(dp1913
g62
(dp1914
g82
g83
ssg71
g1908
sg64
(lp1915
g856
asbag57
(g78
g59
NtRp1916
(dp1917
g62
(dp1918
g89
g90
ssg71
g1908
sg64
(lp1919
S':'
asbag57
(g78
g59
NtRp1920
(dp1921
g62
(dp1922
sg71
g1908
sg64
(lp1923
g57
(g58
g59
NtRp1924
(dp1925
g62
(dp1926
g70
I4
ssg71
g1920
sg64
(lp1927
g869
asbasbasbag57
(g73
g59
NtRp1928
(dp1929
g62
(dp1930
sg71
g1883
sg64
(lp1931
g57
(g78
g59
NtRp1932
(dp1933
g62
(dp1934
g82
g83
ssg71
g1928
sg64
(lp1935
g878
asbag57
(g78
g59
NtRp1936
(dp1937
g62
(dp1938
g89
g90
ssg71
g1928
sg64
(lp1939
S':'
asbag57
(g78
g59
NtRp1940
(dp1941
g62
(dp1942
sg71
g1928
sg64
(lp1943
g57
(g58
g59
NtRp1944
(dp1945
g62
(dp1946
g70
I4
ssg71
g1940
sg64
(lp1947
g57
(g66
g59
NtRp1948
(dp1949
g62
(dp1950
g70
I3
ssg71
Nsg64
(lp1951
sbasbasbasbag57
(g73
g59
NtRp1952
(dp1953
g62
(dp1954
sg71
g1883
sg64
(lp1955
g57
(g78
g59
NtRp1956
(dp1957
g62
(dp1958
g82
g83
ssg71
g1952
sg64
(lp1959
g903
asbag57
(g78
g59
NtRp1960
(dp1961
g62
(dp1962
g89
g90
ssg71
g1952
sg64
(lp1963
S':'
asbag57
(g78
g59
NtRp1964
(dp1965
g62
(dp1966
sg71
g1952
sg64
(lp1967
g57
(g58
g59
NtRp1968
(dp1969
g62
(dp1970
g70
I4
ssg71
g1964
sg64
(lp1971
S"<Values at 0x19539b8: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1972
asbasbasbag57
(g73
g59
NtRp1973
(dp1974
g62
(dp1975
sg71
g1883
sg64
(lp1976
g57
(g78
g59
NtRp1977
(dp1978
g62
(dp1979
g82
g83
ssg71
g1973
sg64
(lp1980
g925
asbag57
(g78
g59
NtRp1981
(dp1982
g62
(dp1983
g89
g90
ssg71
g1973
sg64
(lp1984
S':'
asbag57
(g78
g59
NtRp1985
(dp1986
g62
(dp1987
sg71
g1973
sg64
(lp1988
g57
(g58
g59
NtRp1989
(dp1990
g62
(dp1991
g70
I4
ssg71
g1985
sg64
(lp1992
S'set([])'
p1993
asbasbasbag57
(g73
g59
NtRp1994
(dp1995
g62
(dp1996
sg71
g1883
sg64
(lp1997
g57
(g78
g59
NtRp1998
(dp1999
g62
(dp2000
g82
g83
ssg71
g1994
sg64
(lp2001
g947
asbag57
(g78
g59
NtRp2002
(dp2003
g62
(dp2004
g89
g90
ssg71
g1994
sg64
(lp2005
S':'
asbag57
(g78
g59
NtRp2006
(dp2007
g62
(dp2008
sg71
g1994
sg64
(lp2009
g57
(g58
g59
NtRp2010
(dp2011
g62
(dp2012
g70
I4
ssg71
g2006
sg64
(lp2013
g100
asbasbasbag57
(g73
g59
NtRp2014
(dp2015
g62
(dp2016
sg71
g1883
sg64
(lp2017
g57
(g78
g59
NtRp2018
(dp2019
g62
(dp2020
g82
g83
ssg71
g2014
sg64
(lp2021
g968
asbag57
(g78
g59
NtRp2022
(dp2023
g62
(dp2024
g89
g90
ssg71
g2014
sg64
(lp2025
S':'
asbag57
(g78
g59
NtRp2026
(dp2027
g62
(dp2028
sg71
g2014
sg64
(lp2029
g57
(g58
g59
NtRp2030
(dp2031
g62
(dp2032
g70
I4
ssg71
g2026
sg64
(lp2033
g981
asbasbasbag57
(g73
g59
NtRp2034
(dp2035
g62
(dp2036
sg71
g1883
sg64
(lp2037
g57
(g78
g59
NtRp2038
(dp2039
g62
(dp2040
g82
g83
ssg71
g2034
sg64
(lp2041
g1188
asbag57
(g78
g59
NtRp2042
(dp2043
g62
(dp2044
g89
g90
ssg71
g2034
sg64
(lp2045
S':'
asbag57
(g78
g59
NtRp2046
(dp2047
g62
(dp2048
sg71
g2034
sg64
(lp2049
g57
(g58
g59
NtRp2050
(dp2051
g62
(dp2052
g70
I4
ssg71
g2046
sg64
(lp2053
g100
asbasbasbag57
(g73
g59
NtRp2054
(dp2055
g62
(dp2056
sg71
g1883
sg64
(lp2057
g57
(g78
g59
NtRp2058
(dp2059
g62
(dp2060
g82
g83
ssg71
g2054
sg64
(lp2061
g1209
asbag57
(g78
g59
NtRp2062
(dp2063
g62
(dp2064
g89
g90
ssg71
g2054
sg64
(lp2065
S':'
asbag57
(g78
g59
NtRp2066
(dp2067
g62
(dp2068
sg71
g2054
sg64
(lp2069
g57
(g58
g59
NtRp2070
(dp2071
g62
(dp2072
g70
I4
ssg71
g2066
sg64
(lp2073
g100
asbasbasbag57
(g73
g59
NtRp2074
(dp2075
g62
(dp2076
sg71
g1883
sg64
(lp2077
g57
(g78
g59
NtRp2078
(dp2079
g62
(dp2080
g82
g83
ssg71
g2074
sg64
(lp2081
g1447
asbag57
(g78
g59
NtRp2082
(dp2083
g62
(dp2084
g89
g90
ssg71
g2074
sg64
(lp2085
S':'
asbag57
(g78
g59
NtRp2086
(dp2087
g62
(dp2088
sg71
g2074
sg64
(lp2089
g57
(g58
g59
NtRp2090
(dp2091
g62
(dp2092
g70
I4
ssg71
g2086
sg64
(lp2093
g1460
asbasbasbag57
(g73
g59
NtRp2094
(dp2095
g62
(dp2096
sg71
g1883
sg64
(lp2097
g57
(g78
g59
NtRp2098
(dp2099
g62
(dp2100
g82
g83
ssg71
g2094
sg64
(lp2101
g1490
asbag57
(g78
g59
NtRp2102
(dp2103
g62
(dp2104
g89
g90
ssg71
g2094
sg64
(lp2105
S':'
asbag57
(g78
g59
NtRp2106
(dp2107
g62
(dp2108
sg71
g2094
sg64
(lp2109
g57
(g58
g59
NtRp2110
(dp2111
g62
(dp2112
g70
I4
ssg71
g2106
sg64
(lp2113
g57
(g66
g59
NtRp2114
(dp2115
g62
(dp2116
g70
I3
ssg71
Nsg64
(lp2117
g57
(g73
g59
NtRp2118
(dp2119
g62
(dp2120
sg71
g2114
sg64
(lp2121
g57
(g78
g59
NtRp2122
(dp2123
g62
(dp2124
sg71
g2118
sg64
(lp2125
g57
(g58
g59
NtRp2126
(dp2127
g62
(dp2128
g70
I3
ssg71
g2122
sg64
(lp2129
S'1'
asbasbasbag57
(g73
g59
NtRp2130
(dp2131
g62
(dp2132
sg71
g2114
sg64
(lp2133
g57
(g78
g59
NtRp2134
(dp2135
g62
(dp2136
sg71
g2130
sg64
(lp2137
g57
(g58
g59
NtRp2138
(dp2139
g62
(dp2140
g70
I3
ssg71
g2134
sg64
(lp2141
S'99'
p2142
asbasbasbag57
(g73
g59
NtRp2143
(dp2144
g62
(dp2145
sg71
g2114
sg64
(lp2146
g57
(g78
g59
NtRp2147
(dp2148
g62
(dp2149
sg71
g2143
sg64
(lp2150
g57
(g58
g59
NtRp2151
(dp2152
g62
(dp2153
g70
I3
ssg71
g2147
sg64
(lp2154
S'7'
asbasbasbag57
(g73
g59
NtRp2155
(dp2156
g62
(dp2157
sg71
g2114
sg64
(lp2158
g57
(g78
g59
NtRp2159
(dp2160
g62
(dp2161
sg71
g2155
sg64
(lp2162
g57
(g58
g59
NtRp2163
(dp2164
g62
(dp2165
g70
I3
ssg71
g2159
sg64
(lp2166
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2167
asbasbasbag57
(g73
g59
NtRp2168
(dp2169
g62
(dp2170
sg71
g2114
sg64
(lp2171
g57
(g78
g59
NtRp2172
(dp2173
g62
(dp2174
sg71
g2168
sg64
(lp2175
g57
(g58
g59
NtRp2176
(dp2177
g62
(dp2178
g70
I3
ssg71
g2172
sg64
(lp2179
g1569
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2180
(dp2181
g62
(dp2182
sg71
g67
sg64
(lp2183
g57
(g78
g59
NtRp2184
(dp2185
g62
(dp2186
g82
g83
ssg71
g2180
sg64
(lp2187
S'is_https'
p2188
asbag57
(g78
g59
NtRp2189
(dp2190
g62
(dp2191
g89
g90
ssg71
g2180
sg64
(lp2192
S':'
asbag57
(g78
g59
NtRp2193
(dp2194
g62
(dp2195
sg71
g2180
sg64
(lp2196
g57
(g58
g59
NtRp2197
(dp2198
g62
(dp2199
g70
I5
ssg71
g2193
sg64
(lp2200
g100
asbasbasbag57
(g73
g59
NtRp2201
(dp2202
g62
(dp2203
sg71
g67
sg64
(lp2204
g57
(g78
g59
NtRp2205
(dp2206
g62
(dp2207
g82
g83
ssg71
g2201
sg64
(lp2208
S'is_local'
p2209
asbag57
(g78
g59
NtRp2210
(dp2211
g62
(dp2212
g89
g90
ssg71
g2201
sg64
(lp2213
S':'
asbag57
(g78
g59
NtRp2214
(dp2215
g62
(dp2216
sg71
g2201
sg64
(lp2217
g57
(g58
g59
NtRp2218
(dp2219
g62
(dp2220
g70
I5
ssg71
g2214
sg64
(lp2221
g1678
asbasbasbag57
(g73
g59
NtRp2222
(dp2223
g62
(dp2224
sg71
g67
sg64
(lp2225
g57
(g78
g59
NtRp2226
(dp2227
g62
(dp2228
g82
g83
ssg71
g2222
sg64
(lp2229
S'is_restful'
p2230
asbag57
(g78
g59
NtRp2231
(dp2232
g62
(dp2233
g89
g90
ssg71
g2222
sg64
(lp2234
S':'
asbag57
(g78
g59
NtRp2235
(dp2236
g62
(dp2237
sg71
g2222
sg64
(lp2238
g57
(g58
g59
NtRp2239
(dp2240
g62
(dp2241
g70
I5
ssg71
g2235
sg64
(lp2242
g100
asbasbasbag57
(g73
g59
NtRp2243
(dp2244
g62
(dp2245
sg71
g67
sg64
(lp2246
g57
(g78
g59
NtRp2247
(dp2248
g62
(dp2249
g82
g83
ssg71
g2243
sg64
(lp2250
S'now'
p2251
asbag57
(g78
g59
NtRp2252
(dp2253
g62
(dp2254
g89
g90
ssg71
g2243
sg64
(lp2255
S':'
asbag57
(g78
g59
NtRp2256
(dp2257
g62
(dp2258
sg71
g2243
sg64
(lp2259
g57
(g58
g59
NtRp2260
(dp2261
g62
(dp2262
g70
I5
ssg71
g2256
sg64
(lp2263
S'datetime.datetime(2012, 6, 13, 14, 1, 55, 343000)'
p2264
asbasbasbag57
(g73
g59
NtRp2265
(dp2266
g62
(dp2267
sg71
g67
sg64
(lp2268
g57
(g78
g59
NtRp2269
(dp2270
g62
(dp2271
g82
g83
ssg71
g2265
sg64
(lp2272
S'post_vars'
p2273
asbag57
(g78
g59
NtRp2274
(dp2275
g62
(dp2276
g89
g90
ssg71
g2265
sg64
(lp2277
S':'
asbag57
(g78
g59
NtRp2278
(dp2279
g62
(dp2280
sg71
g2265
sg64
(lp2281
g57
(g58
g59
NtRp2282
(dp2283
g62
(dp2284
g70
I5
ssg71
g2278
sg64
(lp2285
g57
(g66
g59
NtRp2286
(dp2287
g62
(dp2288
g70
I4
ssg71
Nsg64
(lp2289
sbasbasbasbag57
(g73
g59
NtRp2290
(dp2291
g62
(dp2292
sg71
g67
sg64
(lp2293
g57
(g78
g59
NtRp2294
(dp2295
g62
(dp2296
g82
g83
ssg71
g2290
sg64
(lp2297
S'url'
p2298
asbag57
(g78
g59
NtRp2299
(dp2300
g62
(dp2301
g89
g90
ssg71
g2290
sg64
(lp2302
S':'
asbag57
(g78
g59
NtRp2303
(dp2304
g62
(dp2305
sg71
g2290
sg64
(lp2306
g57
(g58
g59
NtRp2307
(dp2308
g62
(dp2309
g70
I5
ssg71
g2303
sg64
(lp2310
S'/Phylografter/study/index'
p2311
asbasbasbag57
(g73
g59
NtRp2312
(dp2313
g62
(dp2314
sg71
g67
sg64
(lp2315
g57
(g78
g59
NtRp2316
(dp2317
g62
(dp2318
g82
g83
ssg71
g2312
sg64
(lp2319
S'utcnow'
p2320
asbag57
(g78
g59
NtRp2321
(dp2322
g62
(dp2323
g89
g90
ssg71
g2312
sg64
(lp2324
S':'
asbag57
(g78
g59
NtRp2325
(dp2326
g62
(dp2327
sg71
g2312
sg64
(lp2328
g57
(g58
g59
NtRp2329
(dp2330
g62
(dp2331
g70
I5
ssg71
g2325
sg64
(lp2332
S'datetime.datetime(2012, 6, 13, 19, 1, 55, 343000)'
p2333
asbasbasbag57
(g73
g59
NtRp2334
(dp2335
g62
(dp2336
sg71
g67
sg64
(lp2337
g57
(g78
g59
NtRp2338
(dp2339
g62
(dp2340
g82
g83
ssg71
g2334
sg64
(lp2341
S'uuid'
p2342
asbag57
(g78
g59
NtRp2343
(dp2344
g62
(dp2345
g89
g90
ssg71
g2334
sg64
(lp2346
S':'
asbag57
(g78
g59
NtRp2347
(dp2348
g62
(dp2349
sg71
g2334
sg64
(lp2350
g57
(g58
g59
NtRp2351
(dp2352
g62
(dp2353
g70
I5
ssg71
g2347
sg64
(lp2354
S'Phylografter/127.0.0.1.2012-06-13.14-01-55.1b251b9e-3b25-4893-9735-24ef12cb04c1'
p2355
asbasbasbag57
(g73
g59
NtRp2356
(dp2357
g62
(dp2358
sg71
g67
sg64
(lp2359
g57
(g78
g59
NtRp2360
(dp2361
g62
(dp2362
g82
g83
ssg71
g2356
sg64
(lp2363
S'vars'
p2364
asbag57
(g78
g59
NtRp2365
(dp2366
g62
(dp2367
g89
g90
ssg71
g2356
sg64
(lp2368
S':'
asbag57
(g78
g59
NtRp2369
(dp2370
g62
(dp2371
sg71
g2356
sg64
(lp2372
g57
(g58
g59
NtRp2373
(dp2374
g62
(dp2375
g70
I5
ssg71
g2369
sg64
(lp2376
g57
(g66
g59
NtRp2377
(dp2378
g62
(dp2379
g70
I4
ssg71
Nsg64
(lp2380
sbasbasbasbag57
(g73
g59
NtRp2381
(dp2382
g62
(dp2383
sg71
g67
sg64
(lp2384
g57
(g78
g59
NtRp2385
(dp2386
g62
(dp2387
g82
g83
ssg71
g2381
sg64
(lp2388
S'wsgi'
p2389
asbag57
(g78
g59
NtRp2390
(dp2391
g62
(dp2392
g89
g90
ssg71
g2381
sg64
(lp2393
S':'
asbag57
(g78
g59
NtRp2394
(dp2395
g62
(dp2396
sg71
g2381
sg64
(lp2397
g57
(g58
g59
NtRp2398
(dp2399
g62
(dp2400
g70
I5
ssg71
g2394
sg64
(lp2401
g57
(g66
g59
NtRp2402
(dp2403
g62
(dp2404
g70
I4
ssg71
Nsg64
(lp2405
g57
(g73
g59
NtRp2406
(dp2407
g62
(dp2408
sg71
g2402
sg64
(lp2409
g57
(g78
g59
NtRp2410
(dp2411
g62
(dp2412
g82
g83
ssg71
g2406
sg64
(lp2413
S'environ'
p2414
asbag57
(g78
g59
NtRp2415
(dp2416
g62
(dp2417
g89
g90
ssg71
g2406
sg64
(lp2418
S':'
asbag57
(g78
g59
NtRp2419
(dp2420
g62
(dp2421
sg71
g2406
sg64
(lp2422
g57
(g58
g59
NtRp2423
(dp2424
g62
(dp2425
g70
I4
ssg71
g2419
sg64
(lp2426
g57
(g66
g59
NtRp2427
(dp2428
g62
(dp2429
g70
I3
ssg71
Nsg64
(lp2430
g57
(g73
g59
NtRp2431
(dp2432
g62
(dp2433
sg71
g2427
sg64
(lp2434
g57
(g78
g59
NtRp2435
(dp2436
g62
(dp2437
g82
g83
ssg71
g2431
sg64
(lp2438
S'HTTP_ACCEPT'
p2439
asbag57
(g78
g59
NtRp2440
(dp2441
g62
(dp2442
g89
g90
ssg71
g2431
sg64
(lp2443
S':'
asbag57
(g78
g59
NtRp2444
(dp2445
g62
(dp2446
sg71
g2431
sg64
(lp2447
g57
(g58
g59
NtRp2448
(dp2449
g62
(dp2450
g70
I3
ssg71
g2444
sg64
(lp2451
g1003
asbasbasbag57
(g73
g59
NtRp2452
(dp2453
g62
(dp2454
sg71
g2427
sg64
(lp2455
g57
(g78
g59
NtRp2456
(dp2457
g62
(dp2458
g82
g83
ssg71
g2452
sg64
(lp2459
S'HTTP_ACCEPT_CHARSET'
p2460
asbag57
(g78
g59
NtRp2461
(dp2462
g62
(dp2463
g89
g90
ssg71
g2452
sg64
(lp2464
S':'
asbag57
(g78
g59
NtRp2465
(dp2466
g62
(dp2467
sg71
g2452
sg64
(lp2468
g57
(g58
g59
NtRp2469
(dp2470
g62
(dp2471
g70
I3
ssg71
g2465
sg64
(lp2472
g1025
asbasbasbag57
(g73
g59
NtRp2473
(dp2474
g62
(dp2475
sg71
g2427
sg64
(lp2476
g57
(g78
g59
NtRp2477
(dp2478
g62
(dp2479
g82
g83
ssg71
g2473
sg64
(lp2480
S'HTTP_ACCEPT_ENCODING'
p2481
asbag57
(g78
g59
NtRp2482
(dp2483
g62
(dp2484
g89
g90
ssg71
g2473
sg64
(lp2485
S':'
asbag57
(g78
g59
NtRp2486
(dp2487
g62
(dp2488
sg71
g2473
sg64
(lp2489
g57
(g58
g59
NtRp2490
(dp2491
g62
(dp2492
g70
I3
ssg71
g2486
sg64
(lp2493
g1047
asbasbasbag57
(g73
g59
NtRp2494
(dp2495
g62
(dp2496
sg71
g2427
sg64
(lp2497
g57
(g78
g59
NtRp2498
(dp2499
g62
(dp2500
g82
g83
ssg71
g2494
sg64
(lp2501
S'HTTP_ACCEPT_LANGUAGE'
p2502
asbag57
(g78
g59
NtRp2503
(dp2504
g62
(dp2505
g89
g90
ssg71
g2494
sg64
(lp2506
S':'
asbag57
(g78
g59
NtRp2507
(dp2508
g62
(dp2509
sg71
g2494
sg64
(lp2510
g57
(g58
g59
NtRp2511
(dp2512
g62
(dp2513
g70
I3
ssg71
g2507
sg64
(lp2514
g1069
asbasbasbag57
(g73
g59
NtRp2515
(dp2516
g62
(dp2517
sg71
g2427
sg64
(lp2518
g57
(g78
g59
NtRp2519
(dp2520
g62
(dp2521
g82
g83
ssg71
g2515
sg64
(lp2522
S'HTTP_CONNECTION'
p2523
asbag57
(g78
g59
NtRp2524
(dp2525
g62
(dp2526
g89
g90
ssg71
g2515
sg64
(lp2527
S':'
asbag57
(g78
g59
NtRp2528
(dp2529
g62
(dp2530
sg71
g2515
sg64
(lp2531
g57
(g58
g59
NtRp2532
(dp2533
g62
(dp2534
g70
I3
ssg71
g2528
sg64
(lp2535
g1091
asbasbasbag57
(g73
g59
NtRp2536
(dp2537
g62
(dp2538
sg71
g2427
sg64
(lp2539
g57
(g78
g59
NtRp2540
(dp2541
g62
(dp2542
g82
g83
ssg71
g2536
sg64
(lp2543
S'HTTP_COOKIE'
p2544
asbag57
(g78
g59
NtRp2545
(dp2546
g62
(dp2547
g89
g90
ssg71
g2536
sg64
(lp2548
S':'
asbag57
(g78
g59
NtRp2549
(dp2550
g62
(dp2551
sg71
g2536
sg64
(lp2552
g57
(g58
g59
NtRp2553
(dp2554
g62
(dp2555
g70
I3
ssg71
g2549
sg64
(lp2556
g1113
asbasbasbag57
(g73
g59
NtRp2557
(dp2558
g62
(dp2559
sg71
g2427
sg64
(lp2560
g57
(g78
g59
NtRp2561
(dp2562
g62
(dp2563
g82
g83
ssg71
g2557
sg64
(lp2564
S'HTTP_HOST'
p2565
asbag57
(g78
g59
NtRp2566
(dp2567
g62
(dp2568
g89
g90
ssg71
g2557
sg64
(lp2569
S':'
asbag57
(g78
g59
NtRp2570
(dp2571
g62
(dp2572
sg71
g2557
sg64
(lp2573
g57
(g58
g59
NtRp2574
(dp2575
g62
(dp2576
g70
I3
ssg71
g2570
sg64
(lp2577
g1135
asbasbasbag57
(g73
g59
NtRp2578
(dp2579
g62
(dp2580
sg71
g2427
sg64
(lp2581
g57
(g78
g59
NtRp2582
(dp2583
g62
(dp2584
g82
g83
ssg71
g2578
sg64
(lp2585
S'HTTP_REFERER'
p2586
asbag57
(g78
g59
NtRp2587
(dp2588
g62
(dp2589
g89
g90
ssg71
g2578
sg64
(lp2590
S':'
asbag57
(g78
g59
NtRp2591
(dp2592
g62
(dp2593
sg71
g2578
sg64
(lp2594
g57
(g58
g59
NtRp2595
(dp2596
g62
(dp2597
g70
I3
ssg71
g2591
sg64
(lp2598
g1157
asbasbasbag57
(g73
g59
NtRp2599
(dp2600
g62
(dp2601
sg71
g2427
sg64
(lp2602
g57
(g78
g59
NtRp2603
(dp2604
g62
(dp2605
g82
g83
ssg71
g2599
sg64
(lp2606
S'HTTP_USER_AGENT'
p2607
asbag57
(g78
g59
NtRp2608
(dp2609
g62
(dp2610
g89
g90
ssg71
g2599
sg64
(lp2611
S':'
asbag57
(g78
g59
NtRp2612
(dp2613
g62
(dp2614
sg71
g2599
sg64
(lp2615
g57
(g58
g59
NtRp2616
(dp2617
g62
(dp2618
g70
I3
ssg71
g2612
sg64
(lp2619
g1179
asbasbasbag57
(g73
g59
NtRp2620
(dp2621
g62
(dp2622
sg71
g2427
sg64
(lp2623
g57
(g78
g59
NtRp2624
(dp2625
g62
(dp2626
g82
g83
ssg71
g2620
sg64
(lp2627
S'PATH_INFO'
p2628
asbag57
(g78
g59
NtRp2629
(dp2630
g62
(dp2631
g89
g90
ssg71
g2620
sg64
(lp2632
S':'
asbag57
(g78
g59
NtRp2633
(dp2634
g62
(dp2635
sg71
g2620
sg64
(lp2636
g57
(g58
g59
NtRp2637
(dp2638
g62
(dp2639
g70
I3
ssg71
g2633
sg64
(lp2640
g1243
asbasbasbag57
(g73
g59
NtRp2641
(dp2642
g62
(dp2643
sg71
g2427
sg64
(lp2644
g57
(g78
g59
NtRp2645
(dp2646
g62
(dp2647
g82
g83
ssg71
g2641
sg64
(lp2648
S'QUERY_STRING'
p2649
asbag57
(g78
g59
NtRp2650
(dp2651
g62
(dp2652
g89
g90
ssg71
g2641
sg64
(lp2653
S':'
asbag57
(g78
g59
NtRp2654
(dp2655
g62
(dp2656
sg71
g2641
sg64
(lp2657
g57
(g58
g59
NtRp2658
(dp2659
g62
(dp2660
g70
I3
ssg71
g2654
sg64
(lp2661
S''
asbasbasbag57
(g73
g59
NtRp2662
(dp2663
g62
(dp2664
sg71
g2427
sg64
(lp2665
g57
(g78
g59
NtRp2666
(dp2667
g62
(dp2668
g82
g83
ssg71
g2662
sg64
(lp2669
S'REMOTE_ADDR'
p2670
asbag57
(g78
g59
NtRp2671
(dp2672
g62
(dp2673
g89
g90
ssg71
g2662
sg64
(lp2674
S':'
asbag57
(g78
g59
NtRp2675
(dp2676
g62
(dp2677
sg71
g2662
sg64
(lp2678
g57
(g58
g59
NtRp2679
(dp2680
g62
(dp2681
g70
I3
ssg71
g2675
sg64
(lp2682
g190
asbasbasbag57
(g73
g59
NtRp2683
(dp2684
g62
(dp2685
sg71
g2427
sg64
(lp2686
g57
(g78
g59
NtRp2687
(dp2688
g62
(dp2689
g82
g83
ssg71
g2683
sg64
(lp2690
S'REMOTE_PORT'
p2691
asbag57
(g78
g59
NtRp2692
(dp2693
g62
(dp2694
g89
g90
ssg71
g2683
sg64
(lp2695
S':'
asbag57
(g78
g59
NtRp2696
(dp2697
g62
(dp2698
sg71
g2683
sg64
(lp2699
g57
(g58
g59
NtRp2700
(dp2701
g62
(dp2702
g70
I3
ssg71
g2696
sg64
(lp2703
g1307
asbasbasbag57
(g73
g59
NtRp2704
(dp2705
g62
(dp2706
sg71
g2427
sg64
(lp2707
g57
(g78
g59
NtRp2708
(dp2709
g62
(dp2710
g82
g83
ssg71
g2704
sg64
(lp2711
S'REQUEST_METHOD'
p2712
asbag57
(g78
g59
NtRp2713
(dp2714
g62
(dp2715
g89
g90
ssg71
g2704
sg64
(lp2716
S':'
asbag57
(g78
g59
NtRp2717
(dp2718
g62
(dp2719
sg71
g2704
sg64
(lp2720
g57
(g58
g59
NtRp2721
(dp2722
g62
(dp2723
g70
I3
ssg71
g2717
sg64
(lp2724
g1329
asbasbasbag57
(g73
g59
NtRp2725
(dp2726
g62
(dp2727
sg71
g2427
sg64
(lp2728
g57
(g78
g59
NtRp2729
(dp2730
g62
(dp2731
g82
g83
ssg71
g2725
sg64
(lp2732
S'SCRIPT_NAME'
p2733
asbag57
(g78
g59
NtRp2734
(dp2735
g62
(dp2736
g89
g90
ssg71
g2725
sg64
(lp2737
S':'
asbag57
(g78
g59
NtRp2738
(dp2739
g62
(dp2740
sg71
g2725
sg64
(lp2741
g57
(g58
g59
NtRp2742
(dp2743
g62
(dp2744
g70
I3
ssg71
g2738
sg64
(lp2745
S''
asbasbasbag57
(g73
g59
NtRp2746
(dp2747
g62
(dp2748
sg71
g2427
sg64
(lp2749
g57
(g78
g59
NtRp2750
(dp2751
g62
(dp2752
g82
g83
ssg71
g2746
sg64
(lp2753
S'SERVER_NAME'
p2754
asbag57
(g78
g59
NtRp2755
(dp2756
g62
(dp2757
g89
g90
ssg71
g2746
sg64
(lp2758
S':'
asbag57
(g78
g59
NtRp2759
(dp2760
g62
(dp2761
sg71
g2746
sg64
(lp2762
g57
(g58
g59
NtRp2763
(dp2764
g62
(dp2765
g70
I3
ssg71
g2759
sg64
(lp2766
g1372
asbasbasbag57
(g73
g59
NtRp2767
(dp2768
g62
(dp2769
sg71
g2427
sg64
(lp2770
g57
(g78
g59
NtRp2771
(dp2772
g62
(dp2773
g82
g83
ssg71
g2767
sg64
(lp2774
S'SERVER_PORT'
p2775
asbag57
(g78
g59
NtRp2776
(dp2777
g62
(dp2778
g89
g90
ssg71
g2767
sg64
(lp2779
S':'
asbag57
(g78
g59
NtRp2780
(dp2781
g62
(dp2782
sg71
g2767
sg64
(lp2783
g57
(g58
g59
NtRp2784
(dp2785
g62
(dp2786
g70
I3
ssg71
g2780
sg64
(lp2787
g1394
asbasbasbag57
(g73
g59
NtRp2788
(dp2789
g62
(dp2790
sg71
g2427
sg64
(lp2791
g57
(g78
g59
NtRp2792
(dp2793
g62
(dp2794
g82
g83
ssg71
g2788
sg64
(lp2795
S'SERVER_PROTOCOL'
p2796
asbag57
(g78
g59
NtRp2797
(dp2798
g62
(dp2799
g89
g90
ssg71
g2788
sg64
(lp2800
S':'
asbag57
(g78
g59
NtRp2801
(dp2802
g62
(dp2803
sg71
g2788
sg64
(lp2804
g57
(g58
g59
NtRp2805
(dp2806
g62
(dp2807
g70
I3
ssg71
g2801
sg64
(lp2808
g1416
asbasbasbag57
(g73
g59
NtRp2809
(dp2810
g62
(dp2811
sg71
g2427
sg64
(lp2812
g57
(g78
g59
NtRp2813
(dp2814
g62
(dp2815
g82
g83
ssg71
g2809
sg64
(lp2816
S'SERVER_SOFTWARE'
p2817
asbag57
(g78
g59
NtRp2818
(dp2819
g62
(dp2820
g89
g90
ssg71
g2809
sg64
(lp2821
S':'
asbag57
(g78
g59
NtRp2822
(dp2823
g62
(dp2824
sg71
g2809
sg64
(lp2825
g57
(g58
g59
NtRp2826
(dp2827
g62
(dp2828
g70
I3
ssg71
g2822
sg64
(lp2829
g1438
asbasbasbag57
(g73
g59
NtRp2830
(dp2831
g62
(dp2832
sg71
g2427
sg64
(lp2833
g57
(g78
g59
NtRp2834
(dp2835
g62
(dp2836
g82
g83
ssg71
g2830
sg64
(lp2837
S'wsgi.errors'
p2838
asbag57
(g78
g59
NtRp2839
(dp2840
g62
(dp2841
g89
g90
ssg71
g2830
sg64
(lp2842
S':'
asbag57
(g78
g59
NtRp2843
(dp2844
g62
(dp2845
sg71
g2830
sg64
(lp2846
g57
(g58
g59
NtRp2847
(dp2848
g62
(dp2849
g70
I3
ssg71
g2843
sg64
(lp2850
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p2851
asbasbasbag57
(g73
g59
NtRp2852
(dp2853
g62
(dp2854
sg71
g2427
sg64
(lp2855
g57
(g78
g59
NtRp2856
(dp2857
g62
(dp2858
g82
g83
ssg71
g2852
sg64
(lp2859
S'wsgi.file_wrapper'
p2860
asbag57
(g78
g59
NtRp2861
(dp2862
g62
(dp2863
g89
g90
ssg71
g2852
sg64
(lp2864
S':'
asbag57
(g78
g59
NtRp2865
(dp2866
g62
(dp2867
sg71
g2852
sg64
(lp2868
g57
(g58
g59
NtRp2869
(dp2870
g62
(dp2871
g70
I3
ssg71
g2865
sg64
(lp2872
S'<class wsgiref.util.FileWrapper at 0x017FAC00>'
p2873
asbasbasbag57
(g73
g59
NtRp2874
(dp2875
g62
(dp2876
sg71
g2427
sg64
(lp2877
g57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
g82
g83
ssg71
g2874
sg64
(lp2881
S'wsgi.input'
p2882
asbag57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
g89
g90
ssg71
g2874
sg64
(lp2886
S':'
asbag57
(g78
g59
NtRp2887
(dp2888
g62
(dp2889
sg71
g2874
sg64
(lp2890
g57
(g58
g59
NtRp2891
(dp2892
g62
(dp2893
g70
I3
ssg71
g2887
sg64
(lp2894
S'<cStringIO.StringO object at 0x02AA75C0>'
p2895
asbasbasbag57
(g73
g59
NtRp2896
(dp2897
g62
(dp2898
sg71
g2427
sg64
(lp2899
g57
(g78
g59
NtRp2900
(dp2901
g62
(dp2902
g82
g83
ssg71
g2896
sg64
(lp2903
S'wsgi.multiprocess'
p2904
asbag57
(g78
g59
NtRp2905
(dp2906
g62
(dp2907
g89
g90
ssg71
g2896
sg64
(lp2908
S':'
asbag57
(g78
g59
NtRp2909
(dp2910
g62
(dp2911
sg71
g2896
sg64
(lp2912
g57
(g58
g59
NtRp2913
(dp2914
g62
(dp2915
g70
I3
ssg71
g2909
sg64
(lp2916
g100
asbasbasbag57
(g73
g59
NtRp2917
(dp2918
g62
(dp2919
sg71
g2427
sg64
(lp2920
g57
(g78
g59
NtRp2921
(dp2922
g62
(dp2923
g82
g83
ssg71
g2917
sg64
(lp2924
S'wsgi.multithread'
p2925
asbag57
(g78
g59
NtRp2926
(dp2927
g62
(dp2928
g89
g90
ssg71
g2917
sg64
(lp2929
S':'
asbag57
(g78
g59
NtRp2930
(dp2931
g62
(dp2932
sg71
g2917
sg64
(lp2933
g57
(g58
g59
NtRp2934
(dp2935
g62
(dp2936
g70
I3
ssg71
g2930
sg64
(lp2937
g1678
asbasbasbag57
(g73
g59
NtRp2938
(dp2939
g62
(dp2940
sg71
g2427
sg64
(lp2941
g57
(g78
g59
NtRp2942
(dp2943
g62
(dp2944
g82
g83
ssg71
g2938
sg64
(lp2945
S'wsgi.run_once'
p2946
asbag57
(g78
g59
NtRp2947
(dp2948
g62
(dp2949
g89
g90
ssg71
g2938
sg64
(lp2950
S':'
asbag57
(g78
g59
NtRp2951
(dp2952
g62
(dp2953
sg71
g2938
sg64
(lp2954
g57
(g58
g59
NtRp2955
(dp2956
g62
(dp2957
g70
I3
ssg71
g2951
sg64
(lp2958
g100
asbasbasbag57
(g73
g59
NtRp2959
(dp2960
g62
(dp2961
sg71
g2427
sg64
(lp2962
g57
(g78
g59
NtRp2963
(dp2964
g62
(dp2965
g82
g83
ssg71
g2959
sg64
(lp2966
S'wsgi.url_scheme'
p2967
asbag57
(g78
g59
NtRp2968
(dp2969
g62
(dp2970
g89
g90
ssg71
g2959
sg64
(lp2971
S':'
asbag57
(g78
g59
NtRp2972
(dp2973
g62
(dp2974
sg71
g2959
sg64
(lp2975
g57
(g58
g59
NtRp2976
(dp2977
g62
(dp2978
g70
I3
ssg71
g2972
sg64
(lp2979
g1721
asbasbasbag57
(g73
g59
NtRp2980
(dp2981
g62
(dp2982
sg71
g2427
sg64
(lp2983
g57
(g78
g59
NtRp2984
(dp2985
g62
(dp2986
g82
g83
ssg71
g2980
sg64
(lp2987
S'wsgi.version'
p2988
asbag57
(g78
g59
NtRp2989
(dp2990
g62
(dp2991
g89
g90
ssg71
g2980
sg64
(lp2992
S':'
asbag57
(g78
g59
NtRp2993
(dp2994
g62
(dp2995
sg71
g2980
sg64
(lp2996
g57
(g58
g59
NtRp2997
(dp2998
g62
(dp2999
g70
I3
ssg71
g2993
sg64
(lp3000
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3001
(lp3002
(dp3003
S'file'
p3004
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py'
p3005
sS'dump'
p3006
(dp3007
S'environment'
p3008
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3009
sS'ccode'
p3010
S'<code object <module> at 029A71D0, file "C:\\Docu...tions\\Phylografter\\controllers/study.py", line 1>'
p3011
ssS'lnum'
p3012
I205
sS'lines'
p3013
(dp3014
I200
S'    try:'
p3015
sI201
S'        if type(code) == types.CodeType:'
p3016
sI202
S'            ccode = code'
p3017
sI203
S'        else:'
p3018
sI204
S'            ccode = compile2(code,layer)'
p3019
sI205
S'        exec ccode in environment'
p3020
sI206
S'    except HTTP:'
p3021
sI207
S'        raise'
p3022
sI208
S'    except RestrictedError:'
p3023
sI209
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3024
ssS'call'
p3025
S"(code='import os, uuid\\nfrom cStringIO import StringIO\\nf...l.trees)\\n\\nresponse._vars=response._caller(index)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer=r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/study.py')"
p3026
sS'func'
p3027
S'restricted'
p3028
sa(dp3029
g3004
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers\\study.py'
p3030
sg3006
(dp3031
S'ivy'
p3032
S'undefined'
p3033
sS'local_import'
p3034
S'<function <lambda>>'
p3035
ssg3012
I6
sg3013
(dp3036
I2
S'from cStringIO import StringIO'
p3037
sI3
S'from gluon.custom_import import track_changes'
p3038
sI4
S'from gluon.storage import Storage'
p3039
sI5
S'track_changes()'
p3040
sI6
S"ivy = local_import('ivy')"
p3041
sI7
S'treebase = ivy.treebase'
p3042
sI8
S'#from ivy import treebase'
p3043
sI9
S'response.subtitle = "Studies"'
p3044
sI10
S''
sI11
S'class Virtual(object):'
p3045
ssg3025
S'()'
p3046
sg3027
S'<module>'
p3047
sa(dp3048
g3004
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\compileapp.py'
p3049
sg3006
(dp3050
S'global local_import_aux'
p3051
S'<function local_import_aux>'
p3052
sS'reload'
p3053
g100
sS'app'
p3054
S"'Phylografter'"
p3055
sS'name'
p3056
S"'ivy'"
p3057
ssg3012
I405
sg3013
(dp3058
I400
S"    environment['SQLFORM'] = SQLFORM"
p3059
sI401
S"    environment['SQLTABLE'] = SQLTABLE"
p3060
sI402
S"    environment['LOAD'] = LOAD"
p3061
sI403
S"    environment['local_import'] = \\"
p3062
sI404
S'        lambda name, reload=False, app=request.application:\\'
p3063
sI405
S'        local_import_aux(name,reload,app)'
p3064
sI406
S"    BaseAdapter.set_folder(os.path.join(request.folder, 'databases'))"
p3065
sI407
S'    response._view_environment = copy.copy(environment)'
p3066
sI408
S'    return environment'
p3067
sI409
S''
ssg3025
S"(name='ivy', reload=False, app='Phylografter')"
p3068
sg3027
S'<lambda>'
p3069
sa(dp3070
g3004
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\compileapp.py'
p3071
sg3006
(dp3072
S'name'
p3073
S"'applications.Phylografter.modules.ivy'"
p3074
sS'module'
p3075
g3033
sS'builtin__import__'
p3076
S'<gluon.custom_import._Web2pyDateTrackerImporter object>'
p3077
ssg3012
I324
sg3013
(dp3078
I320
S'    It can be used to import any module, including regular Python modules.'
p3079
sI321
S'    """'
p3080
sI322
S"    items = name.replace('/','.')"
p3081
sI323
S'    name = "applications.%s.modules.%s" % (app, items)'
p3082
sI324
S'    module = __import__(name)'
p3083
sI325
S'    for item in name.split(".")[1:]:'
p3084
sI326
S'        module = getattr(module, item)'
p3085
sI327
S'    if reload_force:'
p3086
sI328
S'        reload(module)'
p3087
sI319
S'    This prevents conflict between applications and un-necessary execs.'
p3088
ssg3025
S"(name='applications.Phylografter.modules.ivy', reload_force=False, app='Phylografter')"
p3089
sg3027
S'local_import_aux'
p3090
sa(dp3091
g3004
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\custom_import.py'
p3092
sg3006
(dp3093
S'fromlist'
p3094
S'[]'
p3095
sS'level'
p3096
S'-1'
p3097
ssg3012
I293
sg3013
(dp3098
I288
S'                            .__call__(modules_prefix+"."+name,'
p3099
sI289
S'                                    globals, locals, fromlist, level)'
p3100
sI290
S'                except ImportError:'
p3101
sI291
S'                    pass'
p3102
sI292
S'        return super(_Web2pyImporter, self).__call__(name, globals, locals,'
p3103
sI293
S'                                                    fromlist, level)'
p3104
sI294
S'        #except Exception, e:'
p3105
sI295
S"        #    raise e  # Don't hide something that went wrong"
p3106
sI296
S'        #finally:'
p3107
sI297
S'        self.end()'
p3108
ssg3025
S"(self=<gluon.custom_import._Web2pyDateTrackerImporter object>, name='applications.Phylografter.modules.ivy', globals={}, locals={}, fromlist=[], level=-1)"
p3109
sg3027
S'__call__'
p3110
sa(dp3111
g3004
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\custom_import.py'
p3112
sg3006
(dp3113
S'e'
S"ImportError('No module named lxml',)"
p3114
ssg3012
I132
sg3013
(dp3115
I128
S'            # Module maybe loaded for the 1st time so we need to set the date'
p3116
sI129
S'            self._update_dates(name, fromlist)'
p3117
sI130
S'            return result'
p3118
sI131
S'        except Exception, e:'
p3119
sI132
S"            raise e  # Don't hide something that went wrong"
p3120
sI133
S'        finally:'
p3121
sI134
S'            if call_begin_end:'
p3122
sI135
S'                self.end()'
p3123
sI136
S''
sI127
S'              .__call__(name, globals, locals, fromlist, level)'
p3124
ssg3025
S"(self=<gluon.custom_import._Web2pyDateTrackerImporter object>, name='applications.Phylografter.modules.ivy', globals={}, locals={}, fromlist=[], level=-1)"
p3125
sg3027
g3110
sasS'pyver'
p3126
S'Python 2.7.3: C:\\Python27\\python.exe'
p3127
sS'session'
p3128
g57
(g58
g59
NtRp3129
(dp3130
g62
(dp3131
sg64
(lp3132
g57
(g66
g59
NtRp3133
(dp3134
g62
(dp3135
g70
I5
ssg71
Nsg64
(lp3136
g57
(g73
g59
NtRp3137
(dp3138
g62
(dp3139
sg71
g3133
sg64
(lp3140
g57
(g78
g59
NtRp3141
(dp3142
g62
(dp3143
g82
g83
ssg71
g3137
sg64
(lp3144
S'scrollbarWidth'
p3145
asbag57
(g78
g59
NtRp3146
(dp3147
g62
(dp3148
g89
g90
ssg71
g3137
sg64
(lp3149
S':'
asbag57
(g78
g59
NtRp3150
(dp3151
g62
(dp3152
sg71
g3137
sg64
(lp3153
g57
(g58
g59
NtRp3154
(dp3155
g62
(dp3156
g70
I5
ssg71
g3150
sg64
(lp3157
S'17'
p3158
asbasbasbag57
(g73
g59
NtRp3159
(dp3160
g62
(dp3161
sg71
g3133
sg64
(lp3162
g57
(g78
g59
NtRp3163
(dp3164
g62
(dp3165
g82
g83
ssg71
g3159
sg64
(lp3166
S'textWidthMetric'
p3167
asbag57
(g78
g59
NtRp3168
(dp3169
g62
(dp3170
g89
g90
ssg71
g3159
sg64
(lp3171
S':'
asbag57
(g78
g59
NtRp3172
(dp3173
g62
(dp3174
sg71
g3159
sg64
(lp3175
g57
(g58
g59
NtRp3176
(dp3177
g62
(dp3178
g70
I5
ssg71
g3172
sg64
(lp3179
S'10.0'
p3180
asbasbasbag57
(g73
g59
NtRp3181
(dp3182
g62
(dp3183
sg71
g3133
sg64
(lp3184
g57
(g78
g59
NtRp3185
(dp3186
g62
(dp3187
g82
g83
ssg71
g3181
sg64
(lp3188
S'windowHeight'
p3189
asbag57
(g78
g59
NtRp3190
(dp3191
g62
(dp3192
g89
g90
ssg71
g3181
sg64
(lp3193
S':'
asbag57
(g78
g59
NtRp3194
(dp3195
g62
(dp3196
sg71
g3181
sg64
(lp3197
g57
(g58
g59
NtRp3198
(dp3199
g62
(dp3200
g70
I5
ssg71
g3194
sg64
(lp3201
S'959'
p3202
asbasbasbag57
(g73
g59
NtRp3203
(dp3204
g62
(dp3205
sg71
g3133
sg64
(lp3206
g57
(g78
g59
NtRp3207
(dp3208
g62
(dp3209
g82
g83
ssg71
g3203
sg64
(lp3210
S'windowWidth'
p3211
asbag57
(g78
g59
NtRp3212
(dp3213
g62
(dp3214
g89
g90
ssg71
g3203
sg64
(lp3215
S':'
asbag57
(g78
g59
NtRp3216
(dp3217
g62
(dp3218
sg71
g3203
sg64
(lp3219
g57
(g58
g59
NtRp3220
(dp3221
g62
(dp3222
g70
I5
ssg71
g3216
sg64
(lp3223
S'1680'
p3224
asbasbasbasbasbsS'etype'
p3225
S"<type 'exceptions.ImportError'>"
p3226
sS'date'
p3227
S'Wed Jun 13 14:01:55 2012'
p3228
sS'response'
p3229
g57
(g58
g59
NtRp3230
(dp3231
g62
(dp3232
sg64
(lp3233
g57
(g66
g59
NtRp3234
(dp3235
g62
(dp3236
g70
I5
ssg71
Nsg64
(lp3237
g57
(g73
g59
NtRp3238
(dp3239
g62
(dp3240
sg71
g3234
sg64
(lp3241
g57
(g78
g59
NtRp3242
(dp3243
g62
(dp3244
g82
g83
ssg71
g3238
sg64
(lp3245
g155
asbag57
(g78
g59
NtRp3246
(dp3247
g62
(dp3248
g89
g90
ssg71
g3238
sg64
(lp3249
S':'
asbag57
(g78
g59
NtRp3250
(dp3251
g62
(dp3252
sg71
g3238
sg64
(lp3253
g57
(g58
g59
NtRp3254
(dp3255
g62
(dp3256
g70
I5
ssg71
g3250
sg64
(lp3257
S'<cStringIO.StringO object at 0x02AAF6C0>'
p3258
asbasbasbag57
(g73
g59
NtRp3259
(dp3260
g62
(dp3261
sg71
g3234
sg64
(lp3262
g57
(g78
g59
NtRp3263
(dp3264
g62
(dp3265
g82
g83
ssg71
g3259
sg64
(lp3266
g221
asbag57
(g78
g59
NtRp3267
(dp3268
g62
(dp3269
g89
g90
ssg71
g3259
sg64
(lp3270
S':'
asbag57
(g78
g59
NtRp3271
(dp3272
g62
(dp3273
sg71
g3259
sg64
(lp3274
g57
(g58
g59
NtRp3275
(dp3276
g62
(dp3277
g70
I5
ssg71
g3271
sg64
(lp3278
g57
(g66
g59
NtRp3279
(dp3280
g62
(dp3281
g70
I4
ssg71
Nsg64
(lp3282
g57
(g73
g59
NtRp3283
(dp3284
g62
(dp3285
sg71
g3279
sg64
(lp3286
g57
(g78
g59
NtRp3287
(dp3288
g62
(dp3289
g82
g83
ssg71
g3283
sg64
(lp3290
S'session_id_phylografter'
p3291
asbag57
(g78
g59
NtRp3292
(dp3293
g62
(dp3294
g89
g90
ssg71
g3283
sg64
(lp3295
S':'
asbag57
(g78
g59
NtRp3296
(dp3297
g62
(dp3298
sg71
g3283
sg64
(lp3299
g57
(g58
g59
NtRp3300
(dp3301
g62
(dp3302
g70
I4
ssg71
g3296
sg64
(lp3303
g57
(g66
g59
NtRp3304
(dp3305
g62
(dp3306
g70
I3
ssg71
Nsg64
(lp3307
g57
(g73
g59
NtRp3308
(dp3309
g62
(dp3310
sg71
g3304
sg64
(lp3311
g57
(g78
g59
NtRp3312
(dp3313
g62
(dp3314
g82
g83
ssg71
g3308
sg64
(lp3315
g271
asbag57
(g78
g59
NtRp3316
(dp3317
g62
(dp3318
g89
g90
ssg71
g3308
sg64
(lp3319
S':'
asbag57
(g78
g59
NtRp3320
(dp3321
g62
(dp3322
sg71
g3308
sg64
(lp3323
g57
(g58
g59
NtRp3324
(dp3325
g62
(dp3326
g70
I3
ssg71
g3320
sg64
(lp3327
S''
asbasbasbag57
(g73
g59
NtRp3328
(dp3329
g62
(dp3330
sg71
g3304
sg64
(lp3331
g57
(g78
g59
NtRp3332
(dp3333
g62
(dp3334
g82
g83
ssg71
g3328
sg64
(lp3335
g292
asbag57
(g78
g59
NtRp3336
(dp3337
g62
(dp3338
g89
g90
ssg71
g3328
sg64
(lp3339
S':'
asbag57
(g78
g59
NtRp3340
(dp3341
g62
(dp3342
sg71
g3328
sg64
(lp3343
g57
(g58
g59
NtRp3344
(dp3345
g62
(dp3346
g70
I3
ssg71
g3340
sg64
(lp3347
S''
asbasbasbag57
(g73
g59
NtRp3348
(dp3349
g62
(dp3350
sg71
g3304
sg64
(lp3351
g57
(g78
g59
NtRp3352
(dp3353
g62
(dp3354
g82
g83
ssg71
g3348
sg64
(lp3355
g313
asbag57
(g78
g59
NtRp3356
(dp3357
g62
(dp3358
g89
g90
ssg71
g3348
sg64
(lp3359
S':'
asbag57
(g78
g59
NtRp3360
(dp3361
g62
(dp3362
sg71
g3348
sg64
(lp3363
g57
(g58
g59
NtRp3364
(dp3365
g62
(dp3366
g70
I3
ssg71
g3360
sg64
(lp3367
S''
asbasbasbag57
(g73
g59
NtRp3368
(dp3369
g62
(dp3370
sg71
g3304
sg64
(lp3371
g57
(g78
g59
NtRp3372
(dp3373
g62
(dp3374
g82
g83
ssg71
g3368
sg64
(lp3375
g334
asbag57
(g78
g59
NtRp3376
(dp3377
g62
(dp3378
g89
g90
ssg71
g3368
sg64
(lp3379
S':'
asbag57
(g78
g59
NtRp3380
(dp3381
g62
(dp3382
sg71
g3368
sg64
(lp3383
g57
(g58
g59
NtRp3384
(dp3385
g62
(dp3386
g70
I3
ssg71
g3380
sg64
(lp3387
S''
asbasbasbag57
(g73
g59
NtRp3388
(dp3389
g62
(dp3390
sg71
g3304
sg64
(lp3391
g57
(g78
g59
NtRp3392
(dp3393
g62
(dp3394
g82
g83
ssg71
g3388
sg64
(lp3395
g355
asbag57
(g78
g59
NtRp3396
(dp3397
g62
(dp3398
g89
g90
ssg71
g3388
sg64
(lp3399
S':'
asbag57
(g78
g59
NtRp3400
(dp3401
g62
(dp3402
sg71
g3388
sg64
(lp3403
g57
(g58
g59
NtRp3404
(dp3405
g62
(dp3406
g70
I3
ssg71
g3400
sg64
(lp3407
S''
asbasbasbag57
(g73
g59
NtRp3408
(dp3409
g62
(dp3410
sg71
g3304
sg64
(lp3411
g57
(g78
g59
NtRp3412
(dp3413
g62
(dp3414
g82
g83
ssg71
g3408
sg64
(lp3415
g376
asbag57
(g78
g59
NtRp3416
(dp3417
g62
(dp3418
g89
g90
ssg71
g3408
sg64
(lp3419
S':'
asbag57
(g78
g59
NtRp3420
(dp3421
g62
(dp3422
sg71
g3408
sg64
(lp3423
g57
(g58
g59
NtRp3424
(dp3425
g62
(dp3426
g70
I3
ssg71
g3420
sg64
(lp3427
S'/'
asbasbasbag57
(g73
g59
NtRp3428
(dp3429
g62
(dp3430
sg71
g3304
sg64
(lp3431
g57
(g78
g59
NtRp3432
(dp3433
g62
(dp3434
g82
g83
ssg71
g3428
sg64
(lp3435
g397
asbag57
(g78
g59
NtRp3436
(dp3437
g62
(dp3438
g89
g90
ssg71
g3428
sg64
(lp3439
S':'
asbag57
(g78
g59
NtRp3440
(dp3441
g62
(dp3442
sg71
g3428
sg64
(lp3443
g57
(g58
g59
NtRp3444
(dp3445
g62
(dp3446
g70
I3
ssg71
g3440
sg64
(lp3447
S''
asbasbasbag57
(g73
g59
NtRp3448
(dp3449
g62
(dp3450
sg71
g3304
sg64
(lp3451
g57
(g78
g59
NtRp3452
(dp3453
g62
(dp3454
g82
g83
ssg71
g3448
sg64
(lp3455
g418
asbag57
(g78
g59
NtRp3456
(dp3457
g62
(dp3458
g89
g90
ssg71
g3448
sg64
(lp3459
S':'
asbag57
(g78
g59
NtRp3460
(dp3461
g62
(dp3462
sg71
g3448
sg64
(lp3463
g57
(g58
g59
NtRp3464
(dp3465
g62
(dp3466
g70
I3
ssg71
g3460
sg64
(lp3467
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3468
(dp3469
g62
(dp3470
sg71
g3234
sg64
(lp3471
g57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
g82
g83
ssg71
g3468
sg64
(lp3475
S'delimiters'
p3476
asbag57
(g78
g59
NtRp3477
(dp3478
g62
(dp3479
g89
g90
ssg71
g3468
sg64
(lp3480
S':'
asbag57
(g78
g59
NtRp3481
(dp3482
g62
(dp3483
sg71
g3468
sg64
(lp3484
g57
(g58
g59
NtRp3485
(dp3486
g62
(dp3487
g70
I5
ssg71
g3481
sg64
(lp3488
g57
(g66
g59
NtRp3489
(dp3490
g62
(dp3491
g70
I4
ssg71
Nsg64
(lp3492
g57
(g73
g59
NtRp3493
(dp3494
g62
(dp3495
sg71
g3489
sg64
(lp3496
g57
(g78
g59
NtRp3497
(dp3498
g62
(dp3499
sg71
g3493
sg64
(lp3500
g57
(g58
g59
NtRp3501
(dp3502
g62
(dp3503
g70
I4
ssg71
g3497
sg64
(lp3504
S'{{'
p3505
asbasbasbag57
(g73
g59
NtRp3506
(dp3507
g62
(dp3508
sg71
g3489
sg64
(lp3509
g57
(g78
g59
NtRp3510
(dp3511
g62
(dp3512
sg71
g3506
sg64
(lp3513
g57
(g58
g59
NtRp3514
(dp3515
g62
(dp3516
g70
I4
ssg71
g3510
sg64
(lp3517
S'}}'
p3518
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3519
(dp3520
g62
(dp3521
sg71
g3234
sg64
(lp3522
g57
(g78
g59
NtRp3523
(dp3524
g62
(dp3525
g82
g83
ssg71
g3519
sg64
(lp3526
S'files'
p3527
asbag57
(g78
g59
NtRp3528
(dp3529
g62
(dp3530
g89
g90
ssg71
g3519
sg64
(lp3531
S':'
asbag57
(g78
g59
NtRp3532
(dp3533
g62
(dp3534
sg71
g3519
sg64
(lp3535
g57
(g58
g59
NtRp3536
(dp3537
g62
(dp3538
g70
I5
ssg71
g3532
sg64
(lp3539
g57
(g66
g59
NtRp3540
(dp3541
g62
(dp3542
g70
I4
ssg71
Nsg64
(lp3543
sbasbasbasbag57
(g73
g59
NtRp3544
(dp3545
g62
(dp3546
sg71
g3234
sg64
(lp3547
g57
(g78
g59
NtRp3548
(dp3549
g62
(dp3550
g82
g83
ssg71
g3544
sg64
(lp3551
S'flash'
p3552
asbag57
(g78
g59
NtRp3553
(dp3554
g62
(dp3555
g89
g90
ssg71
g3544
sg64
(lp3556
S':'
asbag57
(g78
g59
NtRp3557
(dp3558
g62
(dp3559
sg71
g3544
sg64
(lp3560
g57
(g58
g59
NtRp3561
(dp3562
g62
(dp3563
g70
I5
ssg71
g3557
sg64
(lp3564
S''
asbasbasbag57
(g73
g59
NtRp3565
(dp3566
g62
(dp3567
sg71
g3234
sg64
(lp3568
g57
(g78
g59
NtRp3569
(dp3570
g62
(dp3571
g82
g83
ssg71
g3565
sg64
(lp3572
S'generic_patterns'
p3573
asbag57
(g78
g59
NtRp3574
(dp3575
g62
(dp3576
g89
g90
ssg71
g3565
sg64
(lp3577
S':'
asbag57
(g78
g59
NtRp3578
(dp3579
g62
(dp3580
sg71
g3565
sg64
(lp3581
g57
(g58
g59
NtRp3582
(dp3583
g62
(dp3584
g70
I5
ssg71
g3578
sg64
(lp3585
g57
(g66
g59
NtRp3586
(dp3587
g62
(dp3588
g70
I4
ssg71
Nsg64
(lp3589
sbasbasbasbag57
(g73
g59
NtRp3590
(dp3591
g62
(dp3592
sg71
g3234
sg64
(lp3593
g57
(g78
g59
NtRp3594
(dp3595
g62
(dp3596
g82
g83
ssg71
g3590
sg64
(lp3597
S'headers'
p3598
asbag57
(g78
g59
NtRp3599
(dp3600
g62
(dp3601
g89
g90
ssg71
g3590
sg64
(lp3602
S':'
asbag57
(g78
g59
NtRp3603
(dp3604
g62
(dp3605
sg71
g3590
sg64
(lp3606
g57
(g58
g59
NtRp3607
(dp3608
g62
(dp3609
g70
I5
ssg71
g3603
sg64
(lp3610
g57
(g66
g59
NtRp3611
(dp3612
g62
(dp3613
g70
I4
ssg71
Nsg64
(lp3614
g57
(g73
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3611
sg64
(lp3618
g57
(g78
g59
NtRp3619
(dp3620
g62
(dp3621
g82
g83
ssg71
g3615
sg64
(lp3622
S'Cache-Control'
p3623
asbag57
(g78
g59
NtRp3624
(dp3625
g62
(dp3626
g89
g90
ssg71
g3615
sg64
(lp3627
S':'
asbag57
(g78
g59
NtRp3628
(dp3629
g62
(dp3630
sg71
g3615
sg64
(lp3631
g57
(g58
g59
NtRp3632
(dp3633
g62
(dp3634
g70
I4
ssg71
g3628
sg64
(lp3635
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3636
asbasbasbag57
(g73
g59
NtRp3637
(dp3638
g62
(dp3639
sg71
g3611
sg64
(lp3640
g57
(g78
g59
NtRp3641
(dp3642
g62
(dp3643
g82
g83
ssg71
g3637
sg64
(lp3644
S'Content-Type'
p3645
asbag57
(g78
g59
NtRp3646
(dp3647
g62
(dp3648
g89
g90
ssg71
g3637
sg64
(lp3649
S':'
asbag57
(g78
g59
NtRp3650
(dp3651
g62
(dp3652
sg71
g3637
sg64
(lp3653
g57
(g58
g59
NtRp3654
(dp3655
g62
(dp3656
g70
I4
ssg71
g3650
sg64
(lp3657
S'text/html; charset=utf-8'
p3658
asbasbasbag57
(g73
g59
NtRp3659
(dp3660
g62
(dp3661
sg71
g3611
sg64
(lp3662
g57
(g78
g59
NtRp3663
(dp3664
g62
(dp3665
g82
g83
ssg71
g3659
sg64
(lp3666
S'Expires'
p3667
asbag57
(g78
g59
NtRp3668
(dp3669
g62
(dp3670
g89
g90
ssg71
g3659
sg64
(lp3671
S':'
asbag57
(g78
g59
NtRp3672
(dp3673
g62
(dp3674
sg71
g3659
sg64
(lp3675
g57
(g58
g59
NtRp3676
(dp3677
g62
(dp3678
g70
I4
ssg71
g3672
sg64
(lp3679
S'Wed, 13 Jun 2012 19:01:55 GMT'
p3680
asbasbasbag57
(g73
g59
NtRp3681
(dp3682
g62
(dp3683
sg71
g3611
sg64
(lp3684
g57
(g78
g59
NtRp3685
(dp3686
g62
(dp3687
g82
g83
ssg71
g3681
sg64
(lp3688
S'Pragma'
p3689
asbag57
(g78
g59
NtRp3690
(dp3691
g62
(dp3692
g89
g90
ssg71
g3681
sg64
(lp3693
S':'
asbag57
(g78
g59
NtRp3694
(dp3695
g62
(dp3696
sg71
g3681
sg64
(lp3697
g57
(g58
g59
NtRp3698
(dp3699
g62
(dp3700
g70
I4
ssg71
g3694
sg64
(lp3701
S'no-cache'
p3702
asbasbasbag57
(g73
g59
NtRp3703
(dp3704
g62
(dp3705
sg71
g3611
sg64
(lp3706
g57
(g78
g59
NtRp3707
(dp3708
g62
(dp3709
g82
g83
ssg71
g3703
sg64
(lp3710
S'X-Powered-By'
p3711
asbag57
(g78
g59
NtRp3712
(dp3713
g62
(dp3714
g89
g90
ssg71
g3703
sg64
(lp3715
S':'
asbag57
(g78
g59
NtRp3716
(dp3717
g62
(dp3718
sg71
g3703
sg64
(lp3719
g57
(g58
g59
NtRp3720
(dp3721
g62
(dp3722
g70
I4
ssg71
g3716
sg64
(lp3723
S'web2py'
p3724
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3725
(dp3726
g62
(dp3727
sg71
g3234
sg64
(lp3728
g57
(g78
g59
NtRp3729
(dp3730
g62
(dp3731
g82
g83
ssg71
g3725
sg64
(lp3732
S'menu'
p3733
asbag57
(g78
g59
NtRp3734
(dp3735
g62
(dp3736
g89
g90
ssg71
g3725
sg64
(lp3737
S':'
asbag57
(g78
g59
NtRp3738
(dp3739
g62
(dp3740
sg71
g3725
sg64
(lp3741
g57
(g58
g59
NtRp3742
(dp3743
g62
(dp3744
g70
I5
ssg71
g3738
sg64
(lp3745
g57
(g66
g59
NtRp3746
(dp3747
g62
(dp3748
g70
I4
ssg71
Nsg64
(lp3749
g57
(g73
g59
NtRp3750
(dp3751
g62
(dp3752
sg71
g3746
sg64
(lp3753
g57
(g78
g59
NtRp3754
(dp3755
g62
(dp3756
sg71
g3750
sg64
(lp3757
g57
(g58
g59
NtRp3758
(dp3759
g62
(dp3760
g70
I4
ssg71
g3754
sg64
(lp3761
g57
(g66
g59
NtRp3762
(dp3763
g62
(dp3764
g70
I3
ssg71
Nsg64
(lp3765
g57
(g73
g59
NtRp3766
(dp3767
g62
(dp3768
sg71
g3762
sg64
(lp3769
g57
(g78
g59
NtRp3770
(dp3771
g62
(dp3772
sg71
g3766
sg64
(lp3773
g57
(g58
g59
NtRp3774
(dp3775
g62
(dp3776
g70
I3
ssg71
g3770
sg64
(lp3777
cgluon.languages
lazyT_unpickle
p3778
(S't\x04\x00\x00\x00Home'
tRp3779
asbasbasbag57
(g73
g59
NtRp3780
(dp3781
g62
(dp3782
sg71
g3762
sg64
(lp3783
g57
(g78
g59
NtRp3784
(dp3785
g62
(dp3786
sg71
g3780
sg64
(lp3787
g57
(g58
g59
NtRp3788
(dp3789
g62
(dp3790
g70
I3
ssg71
g3784
sg64
(lp3791
g100
asbasbasbag57
(g73
g59
NtRp3792
(dp3793
g62
(dp3794
sg71
g3762
sg64
(lp3795
g57
(g78
g59
NtRp3796
(dp3797
g62
(dp3798
sg71
g3792
sg64
(lp3799
g57
(g58
g59
NtRp3800
(dp3801
g62
(dp3802
g70
I3
ssg71
g3796
sg64
(lp3803
S'/Phylografter/default/index'
p3804
asbasbasbag57
(g73
g59
NtRp3805
(dp3806
g62
(dp3807
sg71
g3762
sg64
(lp3808
g57
(g78
g59
NtRp3809
(dp3810
g62
(dp3811
sg71
g3805
sg64
(lp3812
g57
(g58
g59
NtRp3813
(dp3814
g62
(dp3815
g70
I3
ssg71
g3809
sg64
(lp3816
g57
(g66
g59
NtRp3817
(dp3818
g62
(dp3819
g70
I2
ssg71
Nsg64
(lp3820
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3821
(dp3822
g62
(dp3823
sg71
g3746
sg64
(lp3824
g57
(g78
g59
NtRp3825
(dp3826
g62
(dp3827
sg71
g3821
sg64
(lp3828
g57
(g58
g59
NtRp3829
(dp3830
g62
(dp3831
g70
I4
ssg71
g3825
sg64
(lp3832
g57
(g66
g59
NtRp3833
(dp3834
g62
(dp3835
g70
I3
ssg71
Nsg64
(lp3836
g57
(g73
g59
NtRp3837
(dp3838
g62
(dp3839
sg71
g3833
sg64
(lp3840
g57
(g78
g59
NtRp3841
(dp3842
g62
(dp3843
sg71
g3837
sg64
(lp3844
g57
(g58
g59
NtRp3845
(dp3846
g62
(dp3847
g70
I3
ssg71
g3841
sg64
(lp3848
g3778
(S't\x04\x00\x00\x00Taxa'
tRp3849
asbasbasbag57
(g73
g59
NtRp3850
(dp3851
g62
(dp3852
sg71
g3833
sg64
(lp3853
g57
(g78
g59
NtRp3854
(dp3855
g62
(dp3856
sg71
g3850
sg64
(lp3857
g57
(g58
g59
NtRp3858
(dp3859
g62
(dp3860
g70
I3
ssg71
g3854
sg64
(lp3861
g100
asbasbasbag57
(g73
g59
NtRp3862
(dp3863
g62
(dp3864
sg71
g3833
sg64
(lp3865
g57
(g78
g59
NtRp3866
(dp3867
g62
(dp3868
sg71
g3862
sg64
(lp3869
g57
(g58
g59
NtRp3870
(dp3871
g62
(dp3872
g70
I3
ssg71
g3866
sg64
(lp3873
S'/Phylografter/taxon/index'
p3874
asbasbasbag57
(g73
g59
NtRp3875
(dp3876
g62
(dp3877
sg71
g3833
sg64
(lp3878
g57
(g78
g59
NtRp3879
(dp3880
g62
(dp3881
sg71
g3875
sg64
(lp3882
g57
(g58
g59
NtRp3883
(dp3884
g62
(dp3885
g70
I3
ssg71
g3879
sg64
(lp3886
g57
(g66
g59
NtRp3887
(dp3888
g62
(dp3889
g70
I2
ssg71
Nsg64
(lp3890
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3891
(dp3892
g62
(dp3893
sg71
g3746
sg64
(lp3894
g57
(g78
g59
NtRp3895
(dp3896
g62
(dp3897
sg71
g3891
sg64
(lp3898
g57
(g58
g59
NtRp3899
(dp3900
g62
(dp3901
g70
I4
ssg71
g3895
sg64
(lp3902
g57
(g66
g59
NtRp3903
(dp3904
g62
(dp3905
g70
I3
ssg71
Nsg64
(lp3906
g57
(g73
g59
NtRp3907
(dp3908
g62
(dp3909
sg71
g3903
sg64
(lp3910
g57
(g78
g59
NtRp3911
(dp3912
g62
(dp3913
sg71
g3907
sg64
(lp3914
g57
(g58
g59
NtRp3915
(dp3916
g62
(dp3917
g70
I3
ssg71
g3911
sg64
(lp3918
g3778
(S't\x07\x00\x00\x00Studies'
tRp3919
asbasbasbag57
(g73
g59
NtRp3920
(dp3921
g62
(dp3922
sg71
g3903
sg64
(lp3923
g57
(g78
g59
NtRp3924
(dp3925
g62
(dp3926
sg71
g3920
sg64
(lp3927
g57
(g58
g59
NtRp3928
(dp3929
g62
(dp3930
g70
I3
ssg71
g3924
sg64
(lp3931
g100
asbasbasbag57
(g73
g59
NtRp3932
(dp3933
g62
(dp3934
sg71
g3903
sg64
(lp3935
g57
(g78
g59
NtRp3936
(dp3937
g62
(dp3938
sg71
g3932
sg64
(lp3939
g57
(g58
g59
NtRp3940
(dp3941
g62
(dp3942
g70
I3
ssg71
g3936
sg64
(lp3943
S'/Phylografter/study/index'
p3944
asbasbasbag57
(g73
g59
NtRp3945
(dp3946
g62
(dp3947
sg71
g3903
sg64
(lp3948
g57
(g78
g59
NtRp3949
(dp3950
g62
(dp3951
sg71
g3945
sg64
(lp3952
g57
(g58
g59
NtRp3953
(dp3954
g62
(dp3955
g70
I3
ssg71
g3949
sg64
(lp3956
g57
(g66
g59
NtRp3957
(dp3958
g62
(dp3959
g70
I2
ssg71
Nsg64
(lp3960
g57
(g73
g59
NtRp3961
(dp3962
g62
(dp3963
sg71
g3957
sg64
(lp3964
g57
(g78
g59
NtRp3965
(dp3966
g62
(dp3967
sg71
g3961
sg64
(lp3968
g57
(g58
g59
NtRp3969
(dp3970
g62
(dp3971
g70
I2
ssg71
g3965
sg64
(lp3972
g57
(g66
g59
NtRp3973
(dp3974
g62
(dp3975
g70
I1
ssg71
Nsg64
(lp3976
g57
(g73
g59
NtRp3977
(dp3978
g62
(dp3979
sg71
g3973
sg64
(lp3980
g57
(g78
g59
NtRp3981
(dp3982
g62
(dp3983
sg71
g3977
sg64
(lp3984
g57
(g58
g59
NtRp3985
(dp3986
g62
(dp3987
g70
I1
ssg71
g3981
sg64
(lp3988
S'New study'
p3989
asbasbasbag57
(g73
g59
NtRp3990
(dp3991
g62
(dp3992
sg71
g3973
sg64
(lp3993
g57
(g78
g59
NtRp3994
(dp3995
g62
(dp3996
sg71
g3990
sg64
(lp3997
g57
(g58
g59
NtRp3998
(dp3999
g62
(dp4000
g70
I1
ssg71
g3994
sg64
(lp4001
I00
asbasbasbag57
(g73
g59
NtRp4002
(dp4003
g62
(dp4004
sg71
g3973
sg64
(lp4005
g57
(g78
g59
NtRp4006
(dp4007
g62
(dp4008
sg71
g4002
sg64
(lp4009
g57
(g58
g59
NtRp4010
(dp4011
g62
(dp4012
g70
I1
ssg71
g4006
sg64
(lp4013
S'/Phylografter/study/create'
p4014
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4015
(dp4016
g62
(dp4017
sg71
g3957
sg64
(lp4018
g57
(g78
g59
NtRp4019
(dp4020
g62
(dp4021
sg71
g4015
sg64
(lp4022
g57
(g58
g59
NtRp4023
(dp4024
g62
(dp4025
g70
I2
ssg71
g4019
sg64
(lp4026
g57
(g66
g59
NtRp4027
(dp4028
g62
(dp4029
g70
I1
ssg71
Nsg64
(lp4030
g57
(g73
g59
NtRp4031
(dp4032
g62
(dp4033
sg71
g4027
sg64
(lp4034
g57
(g78
g59
NtRp4035
(dp4036
g62
(dp4037
sg71
g4031
sg64
(lp4038
g57
(g58
g59
NtRp4039
(dp4040
g62
(dp4041
g70
I1
ssg71
g4035
sg64
(lp4042
S'Import from TreeBASE'
p4043
asbasbasbag57
(g73
g59
NtRp4044
(dp4045
g62
(dp4046
sg71
g4027
sg64
(lp4047
g57
(g78
g59
NtRp4048
(dp4049
g62
(dp4050
sg71
g4044
sg64
(lp4051
g57
(g58
g59
NtRp4052
(dp4053
g62
(dp4054
g70
I1
ssg71
g4048
sg64
(lp4055
I00
asbasbasbag57
(g73
g59
NtRp4056
(dp4057
g62
(dp4058
sg71
g4027
sg64
(lp4059
g57
(g78
g59
NtRp4060
(dp4061
g62
(dp4062
sg71
g4056
sg64
(lp4063
g57
(g58
g59
NtRp4064
(dp4065
g62
(dp4066
g70
I1
ssg71
g4060
sg64
(lp4067
S'/Phylografter/study/tbimport'
p4068
asbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4069
(dp4070
g62
(dp4071
sg71
g3746
sg64
(lp4072
g57
(g78
g59
NtRp4073
(dp4074
g62
(dp4075
sg71
g4069
sg64
(lp4076
g57
(g58
g59
NtRp4077
(dp4078
g62
(dp4079
g70
I4
ssg71
g4073
sg64
(lp4080
g57
(g66
g59
NtRp4081
(dp4082
g62
(dp4083
g70
I3
ssg71
Nsg64
(lp4084
g57
(g73
g59
NtRp4085
(dp4086
g62
(dp4087
sg71
g4081
sg64
(lp4088
g57
(g78
g59
NtRp4089
(dp4090
g62
(dp4091
sg71
g4085
sg64
(lp4092
g57
(g58
g59
NtRp4093
(dp4094
g62
(dp4095
g70
I3
ssg71
g4089
sg64
(lp4096
g3778
(S's\x0c\x00\x00\x00Source Trees'
tRp4097
asbasbasbag57
(g73
g59
NtRp4098
(dp4099
g62
(dp4100
sg71
g4081
sg64
(lp4101
g57
(g78
g59
NtRp4102
(dp4103
g62
(dp4104
sg71
g4098
sg64
(lp4105
g57
(g58
g59
NtRp4106
(dp4107
g62
(dp4108
g70
I3
ssg71
g4102
sg64
(lp4109
g100
asbasbasbag57
(g73
g59
NtRp4110
(dp4111
g62
(dp4112
sg71
g4081
sg64
(lp4113
g57
(g78
g59
NtRp4114
(dp4115
g62
(dp4116
sg71
g4110
sg64
(lp4117
g57
(g58
g59
NtRp4118
(dp4119
g62
(dp4120
g70
I3
ssg71
g4114
sg64
(lp4121
S'/Phylografter/stree/index'
p4122
asbasbasbag57
(g73
g59
NtRp4123
(dp4124
g62
(dp4125
sg71
g4081
sg64
(lp4126
g57
(g78
g59
NtRp4127
(dp4128
g62
(dp4129
sg71
g4123
sg64
(lp4130
g57
(g58
g59
NtRp4131
(dp4132
g62
(dp4133
g70
I3
ssg71
g4127
sg64
(lp4134
g57
(g66
g59
NtRp4135
(dp4136
g62
(dp4137
g70
I2
ssg71
Nsg64
(lp4138
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4139
(dp4140
g62
(dp4141
sg71
g3746
sg64
(lp4142
g57
(g78
g59
NtRp4143
(dp4144
g62
(dp4145
sg71
g4139
sg64
(lp4146
g57
(g58
g59
NtRp4147
(dp4148
g62
(dp4149
g70
I4
ssg71
g4143
sg64
(lp4150
g57
(g66
g59
NtRp4151
(dp4152
g62
(dp4153
g70
I3
ssg71
Nsg64
(lp4154
g57
(g73
g59
NtRp4155
(dp4156
g62
(dp4157
sg71
g4151
sg64
(lp4158
g57
(g78
g59
NtRp4159
(dp4160
g62
(dp4161
sg71
g4155
sg64
(lp4162
g57
(g58
g59
NtRp4163
(dp4164
g62
(dp4165
g70
I3
ssg71
g4159
sg64
(lp4166
g3778
(S's\r\x00\x00\x00Grafted Trees'
tRp4167
asbasbasbag57
(g73
g59
NtRp4168
(dp4169
g62
(dp4170
sg71
g4151
sg64
(lp4171
g57
(g78
g59
NtRp4172
(dp4173
g62
(dp4174
sg71
g4168
sg64
(lp4175
g57
(g58
g59
NtRp4176
(dp4177
g62
(dp4178
g70
I3
ssg71
g4172
sg64
(lp4179
g100
asbasbasbag57
(g73
g59
NtRp4180
(dp4181
g62
(dp4182
sg71
g4151
sg64
(lp4183
g57
(g78
g59
NtRp4184
(dp4185
g62
(dp4186
sg71
g4180
sg64
(lp4187
g57
(g58
g59
NtRp4188
(dp4189
g62
(dp4190
g70
I3
ssg71
g4184
sg64
(lp4191
S'/Phylografter/gtree/index'
p4192
asbasbasbag57
(g73
g59
NtRp4193
(dp4194
g62
(dp4195
sg71
g4151
sg64
(lp4196
g57
(g78
g59
NtRp4197
(dp4198
g62
(dp4199
sg71
g4193
sg64
(lp4200
g57
(g58
g59
NtRp4201
(dp4202
g62
(dp4203
g70
I3
ssg71
g4197
sg64
(lp4204
g57
(g66
g59
NtRp4205
(dp4206
g62
(dp4207
g70
I2
ssg71
Nsg64
(lp4208
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4209
(dp4210
g62
(dp4211
sg71
g3234
sg64
(lp4212
g57
(g78
g59
NtRp4213
(dp4214
g62
(dp4215
g82
g83
ssg71
g4209
sg64
(lp4216
S'meta'
p4217
asbag57
(g78
g59
NtRp4218
(dp4219
g62
(dp4220
g89
g90
ssg71
g4209
sg64
(lp4221
S':'
asbag57
(g78
g59
NtRp4222
(dp4223
g62
(dp4224
sg71
g4209
sg64
(lp4225
g57
(g58
g59
NtRp4226
(dp4227
g62
(dp4228
g70
I5
ssg71
g4222
sg64
(lp4229
g57
(g66
g59
NtRp4230
(dp4231
g62
(dp4232
g70
I4
ssg71
Nsg64
(lp4233
g57
(g73
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4230
sg64
(lp4237
g57
(g78
g59
NtRp4238
(dp4239
g62
(dp4240
g82
g83
ssg71
g4234
sg64
(lp4241
S'author'
p4242
asbag57
(g78
g59
NtRp4243
(dp4244
g62
(dp4245
g89
g90
ssg71
g4234
sg64
(lp4246
S':'
asbag57
(g78
g59
NtRp4247
(dp4248
g62
(dp4249
sg71
g4234
sg64
(lp4250
g57
(g58
g59
NtRp4251
(dp4252
g62
(dp4253
g70
I4
ssg71
g4247
sg64
(lp4254
S'Richard Ree'
p4255
asbasbasbag57
(g73
g59
NtRp4256
(dp4257
g62
(dp4258
sg71
g4230
sg64
(lp4259
g57
(g78
g59
NtRp4260
(dp4261
g62
(dp4262
g82
g83
ssg71
g4256
sg64
(lp4263
S'copyright'
p4264
asbag57
(g78
g59
NtRp4265
(dp4266
g62
(dp4267
g89
g90
ssg71
g4256
sg64
(lp4268
S':'
asbag57
(g78
g59
NtRp4269
(dp4270
g62
(dp4271
sg71
g4256
sg64
(lp4272
g57
(g58
g59
NtRp4273
(dp4274
g62
(dp4275
g70
I4
ssg71
g4269
sg64
(lp4276
S'Copyright 2007-2010'
p4277
asbasbasbag57
(g73
g59
NtRp4278
(dp4279
g62
(dp4280
sg71
g4230
sg64
(lp4281
g57
(g78
g59
NtRp4282
(dp4283
g62
(dp4284
g82
g83
ssg71
g4278
sg64
(lp4285
S'description'
p4286
asbag57
(g78
g59
NtRp4287
(dp4288
g62
(dp4289
g89
g90
ssg71
g4278
sg64
(lp4290
S':'
asbag57
(g78
g59
NtRp4291
(dp4292
g62
(dp4293
sg71
g4278
sg64
(lp4294
g57
(g58
g59
NtRp4295
(dp4296
g62
(dp4297
g70
I4
ssg71
g4291
sg64
(lp4298
S'Phylografter: Angiosperm phylogeny database'
p4299
asbasbasbag57
(g73
g59
NtRp4300
(dp4301
g62
(dp4302
sg71
g4230
sg64
(lp4303
g57
(g78
g59
NtRp4304
(dp4305
g62
(dp4306
g82
g83
ssg71
g4300
sg64
(lp4307
S'generator'
p4308
asbag57
(g78
g59
NtRp4309
(dp4310
g62
(dp4311
g89
g90
ssg71
g4300
sg64
(lp4312
S':'
asbag57
(g78
g59
NtRp4313
(dp4314
g62
(dp4315
sg71
g4300
sg64
(lp4316
g57
(g58
g59
NtRp4317
(dp4318
g62
(dp4319
g70
I4
ssg71
g4313
sg64
(lp4320
S'Web2py Enterprise Framework'
p4321
asbasbasbag57
(g73
g59
NtRp4322
(dp4323
g62
(dp4324
sg71
g4230
sg64
(lp4325
g57
(g78
g59
NtRp4326
(dp4327
g62
(dp4328
g82
g83
ssg71
g4322
sg64
(lp4329
S'keywords'
p4330
asbag57
(g78
g59
NtRp4331
(dp4332
g62
(dp4333
g89
g90
ssg71
g4322
sg64
(lp4334
S':'
asbag57
(g78
g59
NtRp4335
(dp4336
g62
(dp4337
sg71
g4322
sg64
(lp4338
g57
(g58
g59
NtRp4339
(dp4340
g62
(dp4341
g70
I4
ssg71
g4335
sg64
(lp4342
S'flowering plants, phylogeny, web2py, python, framework'
p4343
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4344
(dp4345
g62
(dp4346
sg71
g3234
sg64
(lp4347
g57
(g78
g59
NtRp4348
(dp4349
g62
(dp4350
g82
g83
ssg71
g4344
sg64
(lp4351
S'postprocessing'
p4352
asbag57
(g78
g59
NtRp4353
(dp4354
g62
(dp4355
g89
g90
ssg71
g4344
sg64
(lp4356
S':'
asbag57
(g78
g59
NtRp4357
(dp4358
g62
(dp4359
sg71
g4344
sg64
(lp4360
g57
(g58
g59
NtRp4361
(dp4362
g62
(dp4363
g70
I5
ssg71
g4357
sg64
(lp4364
g57
(g66
g59
NtRp4365
(dp4366
g62
(dp4367
g70
I4
ssg71
Nsg64
(lp4368
sbasbasbasbag57
(g73
g59
NtRp4369
(dp4370
g62
(dp4371
sg71
g3234
sg64
(lp4372
g57
(g78
g59
NtRp4373
(dp4374
g62
(dp4375
g82
g83
ssg71
g4369
sg64
(lp4376
S'session_file'
p4377
asbag57
(g78
g59
NtRp4378
(dp4379
g62
(dp4380
g89
g90
ssg71
g4369
sg64
(lp4381
S':'
asbag57
(g78
g59
NtRp4382
(dp4383
g62
(dp4384
sg71
g4369
sg64
(lp4385
g57
(g58
g59
NtRp4386
(dp4387
g62
(dp4388
g70
I5
ssg71
g4382
sg64
(lp4389
S"<open file 'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-94d59530-2f92-49a5-9554-e3c37d572288', mode 'rb+' at 0x0285A338>"
p4390
asbasbasbag57
(g73
g59
NtRp4391
(dp4392
g62
(dp4393
sg71
g3234
sg64
(lp4394
g57
(g78
g59
NtRp4395
(dp4396
g62
(dp4397
g82
g83
ssg71
g4391
sg64
(lp4398
S'session_filename'
p4399
asbag57
(g78
g59
NtRp4400
(dp4401
g62
(dp4402
g89
g90
ssg71
g4391
sg64
(lp4403
S':'
asbag57
(g78
g59
NtRp4404
(dp4405
g62
(dp4406
sg71
g4391
sg64
(lp4407
g57
(g58
g59
NtRp4408
(dp4409
g62
(dp4410
g70
I5
ssg71
g4404
sg64
(lp4411
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-94d59530-2f92-49a5-9554-e3c37d572288'
p4412
asbasbasbag57
(g73
g59
NtRp4413
(dp4414
g62
(dp4415
sg71
g3234
sg64
(lp4416
g57
(g78
g59
NtRp4417
(dp4418
g62
(dp4419
g82
g83
ssg71
g4413
sg64
(lp4420
S'session_id'
p4421
asbag57
(g78
g59
NtRp4422
(dp4423
g62
(dp4424
g89
g90
ssg71
g4413
sg64
(lp4425
S':'
asbag57
(g78
g59
NtRp4426
(dp4427
g62
(dp4428
sg71
g4413
sg64
(lp4429
g57
(g58
g59
NtRp4430
(dp4431
g62
(dp4432
g70
I5
ssg71
g4426
sg64
(lp4433
S'127.0.0.1-94d59530-2f92-49a5-9554-e3c37d572288'
p4434
asbasbasbag57
(g73
g59
NtRp4435
(dp4436
g62
(dp4437
sg71
g3234
sg64
(lp4438
g57
(g78
g59
NtRp4439
(dp4440
g62
(dp4441
g82
g83
ssg71
g4435
sg64
(lp4442
S'session_id_name'
p4443
asbag57
(g78
g59
NtRp4444
(dp4445
g62
(dp4446
g89
g90
ssg71
g4435
sg64
(lp4447
S':'
asbag57
(g78
g59
NtRp4448
(dp4449
g62
(dp4450
sg71
g4435
sg64
(lp4451
g57
(g58
g59
NtRp4452
(dp4453
g62
(dp4454
g70
I5
ssg71
g4448
sg64
(lp4455
g3291
asbasbasbag57
(g73
g59
NtRp4456
(dp4457
g62
(dp4458
sg71
g3234
sg64
(lp4459
g57
(g78
g59
NtRp4460
(dp4461
g62
(dp4462
g82
g83
ssg71
g4456
sg64
(lp4463
S'session_locked'
p4464
asbag57
(g78
g59
NtRp4465
(dp4466
g62
(dp4467
g89
g90
ssg71
g4456
sg64
(lp4468
S':'
asbag57
(g78
g59
NtRp4469
(dp4470
g62
(dp4471
sg71
g4456
sg64
(lp4472
g57
(g58
g59
NtRp4473
(dp4474
g62
(dp4475
g70
I5
ssg71
g4469
sg64
(lp4476
g1678
asbasbasbag57
(g73
g59
NtRp4477
(dp4478
g62
(dp4479
sg71
g3234
sg64
(lp4480
g57
(g78
g59
NtRp4481
(dp4482
g62
(dp4483
g82
g83
ssg71
g4477
sg64
(lp4484
S'session_new'
p4485
asbag57
(g78
g59
NtRp4486
(dp4487
g62
(dp4488
g89
g90
ssg71
g4477
sg64
(lp4489
S':'
asbag57
(g78
g59
NtRp4490
(dp4491
g62
(dp4492
sg71
g4477
sg64
(lp4493
g57
(g58
g59
NtRp4494
(dp4495
g62
(dp4496
g70
I5
ssg71
g4490
sg64
(lp4497
g100
asbasbasbag57
(g73
g59
NtRp4498
(dp4499
g62
(dp4500
sg71
g3234
sg64
(lp4501
g57
(g78
g59
NtRp4502
(dp4503
g62
(dp4504
g82
g83
ssg71
g4498
sg64
(lp4505
S'status'
p4506
asbag57
(g78
g59
NtRp4507
(dp4508
g62
(dp4509
g89
g90
ssg71
g4498
sg64
(lp4510
S':'
asbag57
(g78
g59
NtRp4511
(dp4512
g62
(dp4513
sg71
g4498
sg64
(lp4514
g57
(g58
g59
NtRp4515
(dp4516
g62
(dp4517
g70
I5
ssg71
g4511
sg64
(lp4518
S'200'
p4519
asbasbasbag57
(g73
g59
NtRp4520
(dp4521
g62
(dp4522
sg71
g3234
sg64
(lp4523
g57
(g78
g59
NtRp4524
(dp4525
g62
(dp4526
g82
g83
ssg71
g4520
sg64
(lp4527
S'subtitle'
p4528
asbag57
(g78
g59
NtRp4529
(dp4530
g62
(dp4531
g89
g90
ssg71
g4520
sg64
(lp4532
S':'
asbag57
(g78
g59
NtRp4533
(dp4534
g62
(dp4535
sg71
g4520
sg64
(lp4536
g57
(g58
g59
NtRp4537
(dp4538
g62
(dp4539
g70
I5
ssg71
g4533
sg64
(lp4540
g3778
(S't\x04\x00\x00\x00home'
tRp4541
asbasbasbag57
(g73
g59
NtRp4542
(dp4543
g62
(dp4544
sg71
g3234
sg64
(lp4545
g57
(g78
g59
NtRp4546
(dp4547
g62
(dp4548
g82
g83
ssg71
g4542
sg64
(lp4549
S'title'
p4550
asbag57
(g78
g59
NtRp4551
(dp4552
g62
(dp4553
g89
g90
ssg71
g4542
sg64
(lp4554
S':'
asbag57
(g78
g59
NtRp4555
(dp4556
g62
(dp4557
sg71
g4542
sg64
(lp4558
g57
(g58
g59
NtRp4559
(dp4560
g62
(dp4561
g70
I5
ssg71
g4555
sg64
(lp4562
g122
asbasbasbag57
(g73
g59
NtRp4563
(dp4564
g62
(dp4565
sg71
g3234
sg64
(lp4566
g57
(g78
g59
NtRp4567
(dp4568
g62
(dp4569
g82
g83
ssg71
g4563
sg64
(lp4570
g2342
asbag57
(g78
g59
NtRp4571
(dp4572
g62
(dp4573
g89
g90
ssg71
g4563
sg64
(lp4574
S':'
asbag57
(g78
g59
NtRp4575
(dp4576
g62
(dp4577
sg71
g4563
sg64
(lp4578
g57
(g58
g59
NtRp4579
(dp4580
g62
(dp4581
g70
I5
ssg71
g4575
sg64
(lp4582
g2355
asbasbasbag57
(g73
g59
NtRp4583
(dp4584
g62
(dp4585
sg71
g3234
sg64
(lp4586
g57
(g78
g59
NtRp4587
(dp4588
g62
(dp4589
g82
g83
ssg71
g4583
sg64
(lp4590
S'view'
p4591
asbag57
(g78
g59
NtRp4592
(dp4593
g62
(dp4594
g89
g90
ssg71
g4583
sg64
(lp4595
S':'
asbag57
(g78
g59
NtRp4596
(dp4597
g62
(dp4598
sg71
g4583
sg64
(lp4599
g57
(g58
g59
NtRp4600
(dp4601
g62
(dp4602
g70
I5
ssg71
g4596
sg64
(lp4603
S'study/index.html'
p4604
asbasbasbasbasbsS'locals'
p4605
(dp4606
S'fromlist'
p4607
S'[]'
p4608
sS'e'
S"ImportError('No module named lxml',)"
p4609
sS'name'
p4610
S"'applications.Phylografter.modules.ivy'"
p4611
sg70
S'-1'
p4612
sS'self'
p4613
S'<gluon.custom_import._Web2pyDateTrackerImporter object>'
p4614
sS'globals'
p4615
g45
sS'call_begin_end'
p4616
g100
sg4605
g45
sssS'traceback'
p4617
S'Traceback (most recent call last):\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/study.py", line 6, in <module>\n    ivy = local_import(\'ivy\')\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\compileapp.py", line 405, in <lambda>\n    local_import_aux(name,reload,app)\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\compileapp.py", line 324, in local_import_aux\n    module = __import__(name)\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\custom_import.py", line 293, in __call__\n    fromlist, level)\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\custom_import.py", line 132, in __call__\n    raise e  # Don\'t hide something that went wrong\nImportError: No module named lxml\n'
p4618
s.