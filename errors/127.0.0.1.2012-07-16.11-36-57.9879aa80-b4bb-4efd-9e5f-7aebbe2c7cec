(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'name'"
p3
sS'layer'
p4
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'
p5
sS'code'
p6
S'# coding: utf-8\n## tree = local_import("tree", reload=True)\n## build = local_import("build", reload=True)\n## link = local_import("link")\nimport sys\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules\')\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules/ivy\')\nimport tree\nimport build\nimport link\nimport ivy\nimport treeUtil\n## ivy = local_import("ivy")\n\nfrom gluon.storage import Storage\n\nresponse.subtitle = "Source trees"\n\ndef index():\n    t = db.stree\n\n    class Virtual(object):\n        @virtualsettings(label=\'Study\')\n        def study_url(self):\n            study = t[self.stree.id].study\n            u = URL(c="study",f="view",args=[study.id])\n            s = study.citation\n            N = 50\n            if len(s)>N: s = s[:N-3]+" ..."\n            return A(s, _href=u, _title=study.citation)\n\n        @virtualsettings(label=\'Tree\')\n        def tree_url(self):\n            stree = t[self.stree.id]\n            u = URL(c="stree",f="svgView",args=[self.stree.id])\n            return A(stree.type, _href=u)\n\n        @virtualsettings(label=\'Focal Clade\')\n        def clade(self):\n            study = t[self.stree.id].study\n            return db.study[study].focal_clade.name\n\n        @virtualsettings(label=\'OTUs\')\n        def ntax(self):\n            q = ((db.snode.tree==self.stree.id)&\n                 (db.snode.isleaf==True))\n            return db(q).count()\n\n    powerTable = plugins.powerTable\n    powerTable.datasource = t\n    powerTable.virtualfields = Virtual()\n    powerTable.dtfeatures["sScrollY"] = "100%"\n    powerTable.dtfeatures["sScrollX"] = "100%"\n    #powerTable.virtualfields = Virtual()\n    powerTable.headers = "labels"\n    powerTable.showkeycolumn = False\n    powerTable.dtfeatures["bJQueryUI"] = request.vars.get("jqueryui",True)\n    ## powerTable.uitheme = request.vars.get("theme","cupertino")\n    powerTable.uitheme = request.vars.get("theme","smoothness")\n    powerTable.dtfeatures["iDisplayLength"] = 25\n    powerTable.dtfeatures["aaSorting"] = [[6,\'desc\']]\n    powerTable.dtfeatures["sPaginationType"] = request.vars.get(\n        "pager","full_numbers"\n        ) # two_button scrolling\n    powerTable.columns = ["stree.id",\n                          "virtual.clade",\n                          "virtual.study_url",\n                          "virtual.tree_url",\n                          "virtual.ntax",\n                          ## "stree.contributor",\n                          "stree.uploaded"]\n    powerTable.hiddencolumns = ["stree.type"]\n\n    ## details = dict(detailscallback=URL(c="stree",f="details"))\n    powerTable.extra = dict(autoresize=True)\n   \n    return dict(table=powerTable.create())\n\ndef details():\n    return DIV()\n\ndef delete():\n    i = int(request.args(0) or 0)\n    rec = db.stree(i)\n    assert rec\n    db(db.snode.tree==i).delete()\n    rec.delete_record()\n\ndef _lookup_taxa(nodes):\n    def f(x):\n        try: float(x.label or "x"); return False\n        except: return True\n    v = [ (n.label or "").replace("_", " ") for n in filter(f, nodes) ]\n    t = db.taxon\n    rows = db(t.name.belongs(v)).select(t.name, t.id)\n    return dict([ (x.name, x.id) for x in rows ])\n\ndef _study_otus(study):\n    q = ((db.otu.study==db.study.id)&(db.study.id==study))\n    return db(q).select(db.otu.ALL)\n\ndef _insert_stree(study, data):\n    """\n    given form submission data, insert a source tree\n    """\n    root = ivy.tree.read(data.newick)\n    assert root, data.newick\n    ivy.tree.index(root)\n    nodes = list(root)\n    lab2tax = _lookup_taxa(nodes)\n    lab2otu = dict([ (x.label, x) for x in _study_otus(study) ])\n    stree = db.stree.insert(**data)\n    db.stree[stree].update_record(study=study)\n    i2n = {}\n    for n in nodes:\n        label = (n.label or "").replace("_", " ")\n        taxid = lab2tax.get(label)\n        otu = None\n        if n.isleaf:\n            otu = lab2otu.get(label)\n            if otu and otu.taxon: taxid = otu.taxon\n            if not otu:\n                otu = db.otu.insert(study=study, label=label, taxon=taxid)\n\n        i = db.snode.insert(label=n.label, isleaf=n.isleaf, otu=otu,\n                            next=n.next, back=n.back, depth=n.depth,\n                            length=n.length, tree=stree, taxon=taxid,\n                            pruned=False)\n        n.id = i\n        i2n[i] = n\n    ##     n.rec = Storage(taxon=taxid)\n\n    ## node2anc, node2desc = link.suggest(db, root)\n    ## for n, s in node2anc.items():\n    ##     if s:\n    ##         taxid = sorted(s)[-1][1]\n    ##         db.snode[n.id].update_record(taxon=taxid)\n\n    t = db.snode\n    if data.clade_labels_represent == "bootstrap values":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        if n2sup:\n            m = max(n2sup.values())\n            if 1 <= m <= 101:\n                for n, sup in n2sup.items(): n2sup[n] = sup/100.\n            for n, sup in n2sup.items():\n                t[n.id].update_record(bootstrap_support=sup, label=None)\n\n    elif data.clade_labels_represent == "posterior support":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        for n, sup in n2sup.items():\n            t[n.id].update_record(posterior_support=sup, label=None)\n                \n    for n in nodes:\n        if n.parent:\n            t[n.id].update_record(parent=n.parent.id)\n        n.label = str(n.id)\n        n.length = None\n    db.stree[stree].update_record(newick_idstr=root.write())\n    return stree\n\n#@auth.requires_membership(\'contributor\')\n@auth.requires_login()\ndef create():\n    study = db.study(request.args(0)) or redirect(URL("index"))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    \n    fields = ["study", "contributor", "newick",\n              "author_contributed",\n              "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    form = SQLFORM(db.stree, fields=fields)\n    form.vars.study=int(study)\n\n    name = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    form.vars.contributor = name\n    ## form.vars.newick = "(a,(b,((c,d),(e,f))));"\n    ## form.vars.comment = "test test"\n    ## base = "/home/rree/Dropbox/phylografter/private/Jansen-2007-PNAS/"\n    ## form.vars.newick = file(base+"Jansen_2007.newick").read()\n    ## form.vars.comment = "RAxML bootstrap tree; re-analysis of published data"\n    ## form.vars.type = "RAxML 7.2.6 bootstrap"\n    \n    treestr = ""\n    if form.accepts(request.vars, session, dbio=False):\n        response.flash ="accepted"\n        session.contributor = form.vars.contributor\n        i = _insert_stree(study, form.vars)\n        redirect(URL("v", args=[i]))\n\n    return dict(form=form)\n    \ndef edit():\n    rec = db.stree(request.args(0))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[v])\n        return A(_study_rep(db.study(v)), _href=u)\n    db.stree.study.widget = w\n    response.subtitle = "Edit source tree %s" % rec.id\n    fields = ["study", "contributor", "newick", "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    readonly = not auth.has_membership(role="contributor")\n    form = SQLFORM(db.stree, int(rec), fields=fields, showid=False,\n                   deletable=False, submit_button="Update record",\n                   readonly=readonly)\n    form.vars.study = rec.id\n    if form.accepts(request.vars, session):\n        response.flash = "record updated"\n    return dict(form=form)\n\ndef view():\n    return dict()\n\ndef sunburst():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef d3():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\n\ndef svgView():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef editOTUs():\n    response.title = \'Edit OTUs\'\n    return dict()\n\ndef getNodeInfo():\n    i = int(request.vars.nodeId)\n    node = db.snode[i]\n    color = "black"\n    label = node.label or "[%s]" % node.id\n    if node.taxon:\n        label = node.taxon.name\n        color = "green"\n    return {\'nodeId\': node.id, \'label\': label, \'labelcolor\': color}\n\ndef v():\n    rec = db.stree(request.args(0) or 0)\n    study = db.study(rec.study)\n    u = URL(c="study",f="view",args=[study.id])\n    study = A(_study_rep(study), _href=u, _target="_blank")\n    wscale = float(request.vars.wscale or 0.9)\n    wider = wscale+0.1; narrower = max(0.1, wscale-0.1)\n    wider = A("wider", _href=URL(args=request.args,\n                                 vars=dict(wscale="%0.1f" % wider)))\n    narrower = A("narrower", _href=URL(args=request.args,\n                                       vars=dict(wscale="%0.1f" % narrower)))\n    \n    treeurl = URL(c=\'stree\',f=\'treediv\',args=request.args,vars=request.vars)\n    return dict(treeurl=treeurl, wider=wider, narrower=narrower, study=study)\n\ndef load_html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n    return dict(tree=div)\n\ndef treediv():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    wscale = float(request.vars.wscale or 0.9)\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f,\n                                          wscale=wscale)\n    return div.xml()\n\ndef html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n\n    modal = PluginMModal(id="mymodal", title="Edit node properties", content="")\n    mid = modal.id; cid = "c"+mid\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return "hbranch_clicked(%s, \'%s\', \'%s\', \'%s\');" % (nid, u, mid, cid)\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n\n    return dict(tree=div, root=root, modal=modal, w=w, h=h)\n\n\ndef modalTreeObj():\n    return dict( tree = build.stree( db, request.args[0] ) )\n\n\ndef suggest():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    \n@auth.requires_membership(\'contributor\')\ndef import_cached_nexml():\n    key = "uploaded_nexml_%s" % auth.user.id\n    contributor = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    ## nexml = cache.ram(key, lambda:None, time_expire=10000)\n    nexml = cache.ram(key, lambda:None, time_expire=10000)\n    if not nexml:\n        session.flash = "Please upload the Nexml file again"\n        redirect(URL(\'study\',\'tbimport\'))\n    cache.ram(key, lambda:nexml, time_expire=10000)\n    get = lambda x: nexml.meta.get(x) or None\n    treebase_id = int(get(\'tb:identifier.study\'))\n    study = db(db.study.treebase_id==treebase_id).select().first()\n    if not study:\n        session.flash = \'Study record needed!\'\n        redirect(URL(\'study\',\'tbimport2\'))\n    d = dict([ (x.attrib.id, x) for x in nexml.trees ])\n    t = d.get(request.args(0))\n    if not t:\n        session.flash = \'Cannot find tree in cache\'\n        redirect(URL(\'study\',\'tbimport2\'))\n\n    ivy.tree.index(t.root)\n\n    for n in t.root.leaves():\n        if not n.otu.otu:\n            session.flash = \'Leaf node %s lacks OTU record\' % (n.label or n.id)\n            redirect(URL(\'study\',\'tbimport2\'))\n\n    ## for leaf in t.root.leaves():\n    ##     print leaf.__dict__\n    ## for k, v in nexml.otus.items():\n    ##     print v\n\n    #print t.root.write()\n    ## print t.attrib\n    \n    sdata = dict(study=study.id,\n                 contributor=contributor,\n                 newick=t.root.write().replace(" ", "_"),\n                 author_contributed=True,\n                 tb_tree_id=t.attrib.id,\n                 type=t.attrib.label)\n\n    for k,v in sdata.items():\n        db.stree[k].default=v\n\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    db.stree.uploaded.readable=False\n    form = SQLFORM(db.stree)\n    if form.accepts(request.vars, session):\n\n        bootstraps = {}\n        if form.vars.clade_labels_represent == "bootstrap values":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "bootstrap values":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.length = None\n\n        if bootstraps:\n            m = max(bootstraps.values())\n            if 1 <= m <= 101:\n                for n, sup in bootstraps.items():\n                    bootstraps[n] = sup/100.\n\n        posteriors = {}\n        if form.vars.clade_labels_represent == "posterior support":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: posteriors[n] = float(n.label)\n                except ValueError: pass\n            for n in posteriors:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "posterior support":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                posteriors[n] = n.length\n            for n in posteriors:\n                n.length = None\n\n        for d in filter(None, (bootstraps, posteriors)):\n            m = max(d.values())\n            if 1 <= m <= 101:\n                for n, sup in d.items():\n                    d[n] = sup/100.\n\n        i2n = {}\n        for n in t.root.iternodes():\n            taxid = None\n            label = n.otu.otu.label if n.isleaf and n.otu.otu else n.label\n            if n.isleaf and n.otu.otu and n.otu.otu.taxon:\n                taxid = n.otu.otu.taxon\n            else:\n                taxon = db(db.taxon.name==label).select().first()\n                if taxon: taxid=taxon.id\n\n            i = db.snode.insert(label=label,\n                                isleaf=n.isleaf,\n                                otu=n.otu.otu.id if n.isleaf and n.otu else None,\n                                next=n.next, back=n.back, depth=n.depth,\n                                length=n.length,\n                                bootstrap_support=bootstraps.get(n),\n                                posterior_support=posteriors.get(n),\n                                tree=form.vars.id,\n                                taxon=taxid,\n                                pruned=False)\n            n.id = i\n            i2n[i] = n\n\n        for n in t.root.iternodes():\n            if n.parent:\n                db.snode[n.id].update_record(parent=n.parent.id)\n            n.label = str(n.id)\n            n.length = None\n        db.stree[form.vars.id].update_record(newick_idstr=t.root.write())\n\n        session.flash = \'tree %s inserted\' % t.attrib.id\n        redirect(URL(\'study\',\'tbimport_trees\'))\n\n    return dict(study=study, tree=t, form=form)\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'NoneType\' object has no attribute \'name\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'NoneType' object has no attribute 'name'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'Phylografter'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
sbasbasbasbag57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g67
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
g82
g83
ssg71
g147
sg64
(lp154
S'body'
p155
asbag57
(g78
g59
NtRp156
(dp157
g62
(dp158
g89
g90
ssg71
g147
sg64
(lp159
S':'
asbag57
(g78
g59
NtRp160
(dp161
g62
(dp162
sg71
g147
sg64
(lp163
g57
(g58
g59
NtRp164
(dp165
g62
(dp166
g70
I5
ssg71
g160
sg64
(lp167
S'<cStringIO.StringO object at 0x05818860>'
p168
asbasbasbag57
(g73
g59
NtRp169
(dp170
g62
(dp171
sg71
g67
sg64
(lp172
g57
(g78
g59
NtRp173
(dp174
g62
(dp175
g82
g83
ssg71
g169
sg64
(lp176
S'client'
p177
asbag57
(g78
g59
NtRp178
(dp179
g62
(dp180
g89
g90
ssg71
g169
sg64
(lp181
S':'
asbag57
(g78
g59
NtRp182
(dp183
g62
(dp184
sg71
g169
sg64
(lp185
g57
(g58
g59
NtRp186
(dp187
g62
(dp188
g70
I5
ssg71
g182
sg64
(lp189
S'127.0.0.1'
p190
asbasbasbag57
(g73
g59
NtRp191
(dp192
g62
(dp193
sg71
g67
sg64
(lp194
g57
(g78
g59
NtRp195
(dp196
g62
(dp197
g82
g83
ssg71
g191
sg64
(lp198
S'controller'
p199
asbag57
(g78
g59
NtRp200
(dp201
g62
(dp202
g89
g90
ssg71
g191
sg64
(lp203
S':'
asbag57
(g78
g59
NtRp204
(dp205
g62
(dp206
sg71
g191
sg64
(lp207
g57
(g58
g59
NtRp208
(dp209
g62
(dp210
g70
I5
ssg71
g204
sg64
(lp211
S'stree'
p212
asbasbasbag57
(g73
g59
NtRp213
(dp214
g62
(dp215
sg71
g67
sg64
(lp216
g57
(g78
g59
NtRp217
(dp218
g62
(dp219
g82
g83
ssg71
g213
sg64
(lp220
S'cookies'
p221
asbag57
(g78
g59
NtRp222
(dp223
g62
(dp224
g89
g90
ssg71
g213
sg64
(lp225
S':'
asbag57
(g78
g59
NtRp226
(dp227
g62
(dp228
sg71
g213
sg64
(lp229
g57
(g58
g59
NtRp230
(dp231
g62
(dp232
g70
I5
ssg71
g226
sg64
(lp233
g57
(g66
g59
NtRp234
(dp235
g62
(dp236
g70
I4
ssg71
Nsg64
(lp237
g57
(g73
g59
NtRp238
(dp239
g62
(dp240
sg71
g234
sg64
(lp241
g57
(g78
g59
NtRp242
(dp243
g62
(dp244
g82
g83
ssg71
g238
sg64
(lp245
S'session_id_admin'
p246
asbag57
(g78
g59
NtRp247
(dp248
g62
(dp249
g89
g90
ssg71
g238
sg64
(lp250
S':'
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
sg71
g238
sg64
(lp254
g57
(g58
g59
NtRp255
(dp256
g62
(dp257
g70
I4
ssg71
g251
sg64
(lp258
g57
(g66
g59
NtRp259
(dp260
g62
(dp261
g70
I3
ssg71
Nsg64
(lp262
g57
(g73
g59
NtRp263
(dp264
g62
(dp265
sg71
g259
sg64
(lp266
g57
(g78
g59
NtRp267
(dp268
g62
(dp269
g82
g83
ssg71
g263
sg64
(lp270
S'comment'
p271
asbag57
(g78
g59
NtRp272
(dp273
g62
(dp274
g89
g90
ssg71
g263
sg64
(lp275
S':'
asbag57
(g78
g59
NtRp276
(dp277
g62
(dp278
sg71
g263
sg64
(lp279
g57
(g58
g59
NtRp280
(dp281
g62
(dp282
g70
I3
ssg71
g276
sg64
(lp283
S''
asbasbasbag57
(g73
g59
NtRp284
(dp285
g62
(dp286
sg71
g259
sg64
(lp287
g57
(g78
g59
NtRp288
(dp289
g62
(dp290
g82
g83
ssg71
g284
sg64
(lp291
S'domain'
p292
asbag57
(g78
g59
NtRp293
(dp294
g62
(dp295
g89
g90
ssg71
g284
sg64
(lp296
S':'
asbag57
(g78
g59
NtRp297
(dp298
g62
(dp299
sg71
g284
sg64
(lp300
g57
(g58
g59
NtRp301
(dp302
g62
(dp303
g70
I3
ssg71
g297
sg64
(lp304
S''
asbasbasbag57
(g73
g59
NtRp305
(dp306
g62
(dp307
sg71
g259
sg64
(lp308
g57
(g78
g59
NtRp309
(dp310
g62
(dp311
g82
g83
ssg71
g305
sg64
(lp312
S'expires'
p313
asbag57
(g78
g59
NtRp314
(dp315
g62
(dp316
g89
g90
ssg71
g305
sg64
(lp317
S':'
asbag57
(g78
g59
NtRp318
(dp319
g62
(dp320
sg71
g305
sg64
(lp321
g57
(g58
g59
NtRp322
(dp323
g62
(dp324
g70
I3
ssg71
g318
sg64
(lp325
S''
asbasbasbag57
(g73
g59
NtRp326
(dp327
g62
(dp328
sg71
g259
sg64
(lp329
g57
(g78
g59
NtRp330
(dp331
g62
(dp332
g82
g83
ssg71
g326
sg64
(lp333
S'httponly'
p334
asbag57
(g78
g59
NtRp335
(dp336
g62
(dp337
g89
g90
ssg71
g326
sg64
(lp338
S':'
asbag57
(g78
g59
NtRp339
(dp340
g62
(dp341
sg71
g326
sg64
(lp342
g57
(g58
g59
NtRp343
(dp344
g62
(dp345
g70
I3
ssg71
g339
sg64
(lp346
S''
asbasbasbag57
(g73
g59
NtRp347
(dp348
g62
(dp349
sg71
g259
sg64
(lp350
g57
(g78
g59
NtRp351
(dp352
g62
(dp353
g82
g83
ssg71
g347
sg64
(lp354
S'max-age'
p355
asbag57
(g78
g59
NtRp356
(dp357
g62
(dp358
g89
g90
ssg71
g347
sg64
(lp359
S':'
asbag57
(g78
g59
NtRp360
(dp361
g62
(dp362
sg71
g347
sg64
(lp363
g57
(g58
g59
NtRp364
(dp365
g62
(dp366
g70
I3
ssg71
g360
sg64
(lp367
S''
asbasbasbag57
(g73
g59
NtRp368
(dp369
g62
(dp370
sg71
g259
sg64
(lp371
g57
(g78
g59
NtRp372
(dp373
g62
(dp374
g82
g83
ssg71
g368
sg64
(lp375
S'path'
p376
asbag57
(g78
g59
NtRp377
(dp378
g62
(dp379
g89
g90
ssg71
g368
sg64
(lp380
S':'
asbag57
(g78
g59
NtRp381
(dp382
g62
(dp383
sg71
g368
sg64
(lp384
g57
(g58
g59
NtRp385
(dp386
g62
(dp387
g70
I3
ssg71
g381
sg64
(lp388
S''
asbasbasbag57
(g73
g59
NtRp389
(dp390
g62
(dp391
sg71
g259
sg64
(lp392
g57
(g78
g59
NtRp393
(dp394
g62
(dp395
g82
g83
ssg71
g389
sg64
(lp396
S'secure'
p397
asbag57
(g78
g59
NtRp398
(dp399
g62
(dp400
g89
g90
ssg71
g389
sg64
(lp401
S':'
asbag57
(g78
g59
NtRp402
(dp403
g62
(dp404
sg71
g389
sg64
(lp405
g57
(g58
g59
NtRp406
(dp407
g62
(dp408
g70
I3
ssg71
g402
sg64
(lp409
S''
asbasbasbag57
(g73
g59
NtRp410
(dp411
g62
(dp412
sg71
g259
sg64
(lp413
g57
(g78
g59
NtRp414
(dp415
g62
(dp416
g82
g83
ssg71
g410
sg64
(lp417
S'version'
p418
asbag57
(g78
g59
NtRp419
(dp420
g62
(dp421
g89
g90
ssg71
g410
sg64
(lp422
S':'
asbag57
(g78
g59
NtRp423
(dp424
g62
(dp425
sg71
g410
sg64
(lp426
g57
(g58
g59
NtRp427
(dp428
g62
(dp429
g70
I3
ssg71
g423
sg64
(lp430
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp431
(dp432
g62
(dp433
sg71
g234
sg64
(lp434
g57
(g78
g59
NtRp435
(dp436
g62
(dp437
g82
g83
ssg71
g431
sg64
(lp438
S'session_id_phylografter'
p439
asbag57
(g78
g59
NtRp440
(dp441
g62
(dp442
g89
g90
ssg71
g431
sg64
(lp443
S':'
asbag57
(g78
g59
NtRp444
(dp445
g62
(dp446
sg71
g431
sg64
(lp447
g57
(g58
g59
NtRp448
(dp449
g62
(dp450
g70
I4
ssg71
g444
sg64
(lp451
g57
(g66
g59
NtRp452
(dp453
g62
(dp454
g70
I3
ssg71
Nsg64
(lp455
g57
(g73
g59
NtRp456
(dp457
g62
(dp458
sg71
g452
sg64
(lp459
g57
(g78
g59
NtRp460
(dp461
g62
(dp462
g82
g83
ssg71
g456
sg64
(lp463
g271
asbag57
(g78
g59
NtRp464
(dp465
g62
(dp466
g89
g90
ssg71
g456
sg64
(lp467
S':'
asbag57
(g78
g59
NtRp468
(dp469
g62
(dp470
sg71
g456
sg64
(lp471
g57
(g58
g59
NtRp472
(dp473
g62
(dp474
g70
I3
ssg71
g468
sg64
(lp475
S''
asbasbasbag57
(g73
g59
NtRp476
(dp477
g62
(dp478
sg71
g452
sg64
(lp479
g57
(g78
g59
NtRp480
(dp481
g62
(dp482
g82
g83
ssg71
g476
sg64
(lp483
g292
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g476
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g476
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g452
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
g313
asbag57
(g78
g59
NtRp504
(dp505
g62
(dp506
g89
g90
ssg71
g496
sg64
(lp507
S':'
asbag57
(g78
g59
NtRp508
(dp509
g62
(dp510
sg71
g496
sg64
(lp511
g57
(g58
g59
NtRp512
(dp513
g62
(dp514
g70
I3
ssg71
g508
sg64
(lp515
S''
asbasbasbag57
(g73
g59
NtRp516
(dp517
g62
(dp518
sg71
g452
sg64
(lp519
g57
(g78
g59
NtRp520
(dp521
g62
(dp522
g82
g83
ssg71
g516
sg64
(lp523
g334
asbag57
(g78
g59
NtRp524
(dp525
g62
(dp526
g89
g90
ssg71
g516
sg64
(lp527
S':'
asbag57
(g78
g59
NtRp528
(dp529
g62
(dp530
sg71
g516
sg64
(lp531
g57
(g58
g59
NtRp532
(dp533
g62
(dp534
g70
I3
ssg71
g528
sg64
(lp535
S''
asbasbasbag57
(g73
g59
NtRp536
(dp537
g62
(dp538
sg71
g452
sg64
(lp539
g57
(g78
g59
NtRp540
(dp541
g62
(dp542
g82
g83
ssg71
g536
sg64
(lp543
g355
asbag57
(g78
g59
NtRp544
(dp545
g62
(dp546
g89
g90
ssg71
g536
sg64
(lp547
S':'
asbag57
(g78
g59
NtRp548
(dp549
g62
(dp550
sg71
g536
sg64
(lp551
g57
(g58
g59
NtRp552
(dp553
g62
(dp554
g70
I3
ssg71
g548
sg64
(lp555
S''
asbasbasbag57
(g73
g59
NtRp556
(dp557
g62
(dp558
sg71
g452
sg64
(lp559
g57
(g78
g59
NtRp560
(dp561
g62
(dp562
g82
g83
ssg71
g556
sg64
(lp563
g376
asbag57
(g78
g59
NtRp564
(dp565
g62
(dp566
g89
g90
ssg71
g556
sg64
(lp567
S':'
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
sg71
g556
sg64
(lp571
g57
(g58
g59
NtRp572
(dp573
g62
(dp574
g70
I3
ssg71
g568
sg64
(lp575
S''
asbasbasbag57
(g73
g59
NtRp576
(dp577
g62
(dp578
sg71
g452
sg64
(lp579
g57
(g78
g59
NtRp580
(dp581
g62
(dp582
g82
g83
ssg71
g576
sg64
(lp583
g397
asbag57
(g78
g59
NtRp584
(dp585
g62
(dp586
g89
g90
ssg71
g576
sg64
(lp587
S':'
asbag57
(g78
g59
NtRp588
(dp589
g62
(dp590
sg71
g576
sg64
(lp591
g57
(g58
g59
NtRp592
(dp593
g62
(dp594
g70
I3
ssg71
g588
sg64
(lp595
S''
asbasbasbag57
(g73
g59
NtRp596
(dp597
g62
(dp598
sg71
g452
sg64
(lp599
g57
(g78
g59
NtRp600
(dp601
g62
(dp602
g82
g83
ssg71
g596
sg64
(lp603
g418
asbag57
(g78
g59
NtRp604
(dp605
g62
(dp606
g89
g90
ssg71
g596
sg64
(lp607
S':'
asbag57
(g78
g59
NtRp608
(dp609
g62
(dp610
sg71
g596
sg64
(lp611
g57
(g58
g59
NtRp612
(dp613
g62
(dp614
g70
I3
ssg71
g608
sg64
(lp615
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp616
(dp617
g62
(dp618
sg71
g234
sg64
(lp619
g57
(g78
g59
NtRp620
(dp621
g62
(dp622
g82
g83
ssg71
g616
sg64
(lp623
S'session_id_welcome'
p624
asbag57
(g78
g59
NtRp625
(dp626
g62
(dp627
g89
g90
ssg71
g616
sg64
(lp628
S':'
asbag57
(g78
g59
NtRp629
(dp630
g62
(dp631
sg71
g616
sg64
(lp632
g57
(g58
g59
NtRp633
(dp634
g62
(dp635
g70
I4
ssg71
g629
sg64
(lp636
g57
(g66
g59
NtRp637
(dp638
g62
(dp639
g70
I3
ssg71
Nsg64
(lp640
g57
(g73
g59
NtRp641
(dp642
g62
(dp643
sg71
g637
sg64
(lp644
g57
(g78
g59
NtRp645
(dp646
g62
(dp647
g82
g83
ssg71
g641
sg64
(lp648
g271
asbag57
(g78
g59
NtRp649
(dp650
g62
(dp651
g89
g90
ssg71
g641
sg64
(lp652
S':'
asbag57
(g78
g59
NtRp653
(dp654
g62
(dp655
sg71
g641
sg64
(lp656
g57
(g58
g59
NtRp657
(dp658
g62
(dp659
g70
I3
ssg71
g653
sg64
(lp660
S''
asbasbasbag57
(g73
g59
NtRp661
(dp662
g62
(dp663
sg71
g637
sg64
(lp664
g57
(g78
g59
NtRp665
(dp666
g62
(dp667
g82
g83
ssg71
g661
sg64
(lp668
g292
asbag57
(g78
g59
NtRp669
(dp670
g62
(dp671
g89
g90
ssg71
g661
sg64
(lp672
S':'
asbag57
(g78
g59
NtRp673
(dp674
g62
(dp675
sg71
g661
sg64
(lp676
g57
(g58
g59
NtRp677
(dp678
g62
(dp679
g70
I3
ssg71
g673
sg64
(lp680
S''
asbasbasbag57
(g73
g59
NtRp681
(dp682
g62
(dp683
sg71
g637
sg64
(lp684
g57
(g78
g59
NtRp685
(dp686
g62
(dp687
g82
g83
ssg71
g681
sg64
(lp688
g313
asbag57
(g78
g59
NtRp689
(dp690
g62
(dp691
g89
g90
ssg71
g681
sg64
(lp692
S':'
asbag57
(g78
g59
NtRp693
(dp694
g62
(dp695
sg71
g681
sg64
(lp696
g57
(g58
g59
NtRp697
(dp698
g62
(dp699
g70
I3
ssg71
g693
sg64
(lp700
S''
asbasbasbag57
(g73
g59
NtRp701
(dp702
g62
(dp703
sg71
g637
sg64
(lp704
g57
(g78
g59
NtRp705
(dp706
g62
(dp707
g82
g83
ssg71
g701
sg64
(lp708
g334
asbag57
(g78
g59
NtRp709
(dp710
g62
(dp711
g89
g90
ssg71
g701
sg64
(lp712
S':'
asbag57
(g78
g59
NtRp713
(dp714
g62
(dp715
sg71
g701
sg64
(lp716
g57
(g58
g59
NtRp717
(dp718
g62
(dp719
g70
I3
ssg71
g713
sg64
(lp720
S''
asbasbasbag57
(g73
g59
NtRp721
(dp722
g62
(dp723
sg71
g637
sg64
(lp724
g57
(g78
g59
NtRp725
(dp726
g62
(dp727
g82
g83
ssg71
g721
sg64
(lp728
g355
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
g89
g90
ssg71
g721
sg64
(lp732
S':'
asbag57
(g78
g59
NtRp733
(dp734
g62
(dp735
sg71
g721
sg64
(lp736
g57
(g58
g59
NtRp737
(dp738
g62
(dp739
g70
I3
ssg71
g733
sg64
(lp740
S''
asbasbasbag57
(g73
g59
NtRp741
(dp742
g62
(dp743
sg71
g637
sg64
(lp744
g57
(g78
g59
NtRp745
(dp746
g62
(dp747
g82
g83
ssg71
g741
sg64
(lp748
g376
asbag57
(g78
g59
NtRp749
(dp750
g62
(dp751
g89
g90
ssg71
g741
sg64
(lp752
S':'
asbag57
(g78
g59
NtRp753
(dp754
g62
(dp755
sg71
g741
sg64
(lp756
g57
(g58
g59
NtRp757
(dp758
g62
(dp759
g70
I3
ssg71
g753
sg64
(lp760
S''
asbasbasbag57
(g73
g59
NtRp761
(dp762
g62
(dp763
sg71
g637
sg64
(lp764
g57
(g78
g59
NtRp765
(dp766
g62
(dp767
g82
g83
ssg71
g761
sg64
(lp768
g397
asbag57
(g78
g59
NtRp769
(dp770
g62
(dp771
g89
g90
ssg71
g761
sg64
(lp772
S':'
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
sg71
g761
sg64
(lp776
g57
(g58
g59
NtRp777
(dp778
g62
(dp779
g70
I3
ssg71
g773
sg64
(lp780
S''
asbasbasbag57
(g73
g59
NtRp781
(dp782
g62
(dp783
sg71
g637
sg64
(lp784
g57
(g78
g59
NtRp785
(dp786
g62
(dp787
g82
g83
ssg71
g781
sg64
(lp788
g418
asbag57
(g78
g59
NtRp789
(dp790
g62
(dp791
g89
g90
ssg71
g781
sg64
(lp792
S':'
asbag57
(g78
g59
NtRp793
(dp794
g62
(dp795
sg71
g781
sg64
(lp796
g57
(g58
g59
NtRp797
(dp798
g62
(dp799
g70
I3
ssg71
g793
sg64
(lp800
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp801
(dp802
g62
(dp803
sg71
g67
sg64
(lp804
g57
(g78
g59
NtRp805
(dp806
g62
(dp807
g82
g83
ssg71
g801
sg64
(lp808
S'env'
p809
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
g89
g90
ssg71
g801
sg64
(lp813
S':'
asbag57
(g78
g59
NtRp814
(dp815
g62
(dp816
sg71
g801
sg64
(lp817
g57
(g58
g59
NtRp818
(dp819
g62
(dp820
g70
I5
ssg71
g814
sg64
(lp821
g57
(g66
g59
NtRp822
(dp823
g62
(dp824
g70
I4
ssg71
Nsg64
(lp825
g57
(g73
g59
NtRp826
(dp827
g62
(dp828
sg71
g822
sg64
(lp829
g57
(g78
g59
NtRp830
(dp831
g62
(dp832
g82
g83
ssg71
g826
sg64
(lp833
S'app_folders'
p834
asbag57
(g78
g59
NtRp835
(dp836
g62
(dp837
g89
g90
ssg71
g826
sg64
(lp838
S':'
asbag57
(g78
g59
NtRp839
(dp840
g62
(dp841
sg71
g826
sg64
(lp842
g57
(g58
g59
NtRp843
(dp844
g62
(dp845
g70
I4
ssg71
g839
sg64
(lp846
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p847
asbasbasbag57
(g73
g59
NtRp848
(dp849
g62
(dp850
sg71
g822
sg64
(lp851
g57
(g78
g59
NtRp852
(dp853
g62
(dp854
g82
g83
ssg71
g848
sg64
(lp855
S'applications_parent'
p856
asbag57
(g78
g59
NtRp857
(dp858
g62
(dp859
g89
g90
ssg71
g848
sg64
(lp860
S':'
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
sg71
g848
sg64
(lp864
g57
(g58
g59
NtRp865
(dp866
g62
(dp867
g70
I4
ssg71
g861
sg64
(lp868
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p869
asbasbasbag57
(g73
g59
NtRp870
(dp871
g62
(dp872
sg71
g822
sg64
(lp873
g57
(g78
g59
NtRp874
(dp875
g62
(dp876
g82
g83
ssg71
g870
sg64
(lp877
S'cmd_args'
p878
asbag57
(g78
g59
NtRp879
(dp880
g62
(dp881
g89
g90
ssg71
g870
sg64
(lp882
S':'
asbag57
(g78
g59
NtRp883
(dp884
g62
(dp885
sg71
g870
sg64
(lp886
g57
(g58
g59
NtRp887
(dp888
g62
(dp889
g70
I4
ssg71
g883
sg64
(lp890
g57
(g66
g59
NtRp891
(dp892
g62
(dp893
g70
I3
ssg71
Nsg64
(lp894
sbasbasbasbag57
(g73
g59
NtRp895
(dp896
g62
(dp897
sg71
g822
sg64
(lp898
g57
(g78
g59
NtRp899
(dp900
g62
(dp901
g82
g83
ssg71
g895
sg64
(lp902
S'cmd_options'
p903
asbag57
(g78
g59
NtRp904
(dp905
g62
(dp906
g89
g90
ssg71
g895
sg64
(lp907
S':'
asbag57
(g78
g59
NtRp908
(dp909
g62
(dp910
sg71
g895
sg64
(lp911
g57
(g58
g59
NtRp912
(dp913
g62
(dp914
g70
I4
ssg71
g908
sg64
(lp915
S"<Values at 0x174ff08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p916
asbasbasbag57
(g73
g59
NtRp917
(dp918
g62
(dp919
sg71
g822
sg64
(lp920
g57
(g78
g59
NtRp921
(dp922
g62
(dp923
g82
g83
ssg71
g917
sg64
(lp924
S'db_sessions'
p925
asbag57
(g78
g59
NtRp926
(dp927
g62
(dp928
g89
g90
ssg71
g917
sg64
(lp929
S':'
asbag57
(g78
g59
NtRp930
(dp931
g62
(dp932
sg71
g917
sg64
(lp933
g57
(g58
g59
NtRp934
(dp935
g62
(dp936
g70
I4
ssg71
g930
sg64
(lp937
S'set([])'
p938
asbasbasbag57
(g73
g59
NtRp939
(dp940
g62
(dp941
sg71
g822
sg64
(lp942
g57
(g78
g59
NtRp943
(dp944
g62
(dp945
g82
g83
ssg71
g939
sg64
(lp946
S'debugging'
p947
asbag57
(g78
g59
NtRp948
(dp949
g62
(dp950
g89
g90
ssg71
g939
sg64
(lp951
S':'
asbag57
(g78
g59
NtRp952
(dp953
g62
(dp954
sg71
g939
sg64
(lp955
g57
(g58
g59
NtRp956
(dp957
g62
(dp958
g70
I4
ssg71
g952
sg64
(lp959
g100
asbasbasbag57
(g73
g59
NtRp960
(dp961
g62
(dp962
sg71
g822
sg64
(lp963
g57
(g78
g59
NtRp964
(dp965
g62
(dp966
g82
g83
ssg71
g960
sg64
(lp967
S'gluon_parent'
p968
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
g89
g90
ssg71
g960
sg64
(lp972
S':'
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
sg71
g960
sg64
(lp976
g57
(g58
g59
NtRp977
(dp978
g62
(dp979
g70
I4
ssg71
g973
sg64
(lp980
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p981
asbasbasbag57
(g73
g59
NtRp982
(dp983
g62
(dp984
sg71
g822
sg64
(lp985
g57
(g78
g59
NtRp986
(dp987
g62
(dp988
g82
g83
ssg71
g982
sg64
(lp989
S'http_accept'
p990
asbag57
(g78
g59
NtRp991
(dp992
g62
(dp993
g89
g90
ssg71
g982
sg64
(lp994
S':'
asbag57
(g78
g59
NtRp995
(dp996
g62
(dp997
sg71
g982
sg64
(lp998
g57
(g58
g59
NtRp999
(dp1000
g62
(dp1001
g70
I4
ssg71
g995
sg64
(lp1002
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1003
asbasbasbag57
(g73
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g822
sg64
(lp1007
g57
(g78
g59
NtRp1008
(dp1009
g62
(dp1010
g82
g83
ssg71
g1004
sg64
(lp1011
S'http_accept_encoding'
p1012
asbag57
(g78
g59
NtRp1013
(dp1014
g62
(dp1015
g89
g90
ssg71
g1004
sg64
(lp1016
S':'
asbag57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
sg71
g1004
sg64
(lp1020
g57
(g58
g59
NtRp1021
(dp1022
g62
(dp1023
g70
I4
ssg71
g1017
sg64
(lp1024
S'gzip, deflate'
p1025
asbasbasbag57
(g73
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g822
sg64
(lp1029
g57
(g78
g59
NtRp1030
(dp1031
g62
(dp1032
g82
g83
ssg71
g1026
sg64
(lp1033
S'http_accept_language'
p1034
asbag57
(g78
g59
NtRp1035
(dp1036
g62
(dp1037
g89
g90
ssg71
g1026
sg64
(lp1038
S':'
asbag57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
sg71
g1026
sg64
(lp1042
g57
(g58
g59
NtRp1043
(dp1044
g62
(dp1045
g70
I4
ssg71
g1039
sg64
(lp1046
S'en-us,en;q=0.5'
p1047
asbasbasbag57
(g73
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g822
sg64
(lp1051
g57
(g78
g59
NtRp1052
(dp1053
g62
(dp1054
g82
g83
ssg71
g1048
sg64
(lp1055
S'http_connection'
p1056
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
g89
g90
ssg71
g1048
sg64
(lp1060
S':'
asbag57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
sg71
g1048
sg64
(lp1064
g57
(g58
g59
NtRp1065
(dp1066
g62
(dp1067
g70
I4
ssg71
g1061
sg64
(lp1068
S'keep-alive'
p1069
asbasbasbag57
(g73
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g822
sg64
(lp1073
g57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g82
g83
ssg71
g1070
sg64
(lp1077
S'http_cookie'
p1078
asbag57
(g78
g59
NtRp1079
(dp1080
g62
(dp1081
g89
g90
ssg71
g1070
sg64
(lp1082
S':'
asbag57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
sg71
g1070
sg64
(lp1086
g57
(g58
g59
NtRp1087
(dp1088
g62
(dp1089
g70
I4
ssg71
g1083
sg64
(lp1090
S'session_id_welcome=127.0.0.1-03e8ba98-09de-4e57-a983-2a9c7940a543; session_id_admin=127.0.0.1-d1e053c4-55fb-4d35-aef7-6cc9b063bde3; session_id_phylografter=127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556'
p1091
asbasbasbag57
(g73
g59
NtRp1092
(dp1093
g62
(dp1094
sg71
g822
sg64
(lp1095
g57
(g78
g59
NtRp1096
(dp1097
g62
(dp1098
g82
g83
ssg71
g1092
sg64
(lp1099
S'http_host'
p1100
asbag57
(g78
g59
NtRp1101
(dp1102
g62
(dp1103
g89
g90
ssg71
g1092
sg64
(lp1104
S':'
asbag57
(g78
g59
NtRp1105
(dp1106
g62
(dp1107
sg71
g1092
sg64
(lp1108
g57
(g58
g59
NtRp1109
(dp1110
g62
(dp1111
g70
I4
ssg71
g1105
sg64
(lp1112
S'127.0.0.1:8000'
p1113
asbasbasbag57
(g73
g59
NtRp1114
(dp1115
g62
(dp1116
sg71
g822
sg64
(lp1117
g57
(g78
g59
NtRp1118
(dp1119
g62
(dp1120
g82
g83
ssg71
g1114
sg64
(lp1121
S'http_referer'
p1122
asbag57
(g78
g59
NtRp1123
(dp1124
g62
(dp1125
g89
g90
ssg71
g1114
sg64
(lp1126
S':'
asbag57
(g78
g59
NtRp1127
(dp1128
g62
(dp1129
sg71
g1114
sg64
(lp1130
g57
(g58
g59
NtRp1131
(dp1132
g62
(dp1133
g70
I4
ssg71
g1127
sg64
(lp1134
S'http://127.0.0.1:8000/Phylografter/default/index'
p1135
asbasbasbag57
(g73
g59
NtRp1136
(dp1137
g62
(dp1138
sg71
g822
sg64
(lp1139
g57
(g78
g59
NtRp1140
(dp1141
g62
(dp1142
g82
g83
ssg71
g1136
sg64
(lp1143
S'http_user_agent'
p1144
asbag57
(g78
g59
NtRp1145
(dp1146
g62
(dp1147
g89
g90
ssg71
g1136
sg64
(lp1148
S':'
asbag57
(g78
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1136
sg64
(lp1152
g57
(g58
g59
NtRp1153
(dp1154
g62
(dp1155
g70
I4
ssg71
g1149
sg64
(lp1156
S'Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1'
p1157
asbasbasbag57
(g73
g59
NtRp1158
(dp1159
g62
(dp1160
sg71
g822
sg64
(lp1161
g57
(g78
g59
NtRp1162
(dp1163
g62
(dp1164
g82
g83
ssg71
g1158
sg64
(lp1165
S'is_jython'
p1166
asbag57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
g89
g90
ssg71
g1158
sg64
(lp1170
S':'
asbag57
(g78
g59
NtRp1171
(dp1172
g62
(dp1173
sg71
g1158
sg64
(lp1174
g57
(g58
g59
NtRp1175
(dp1176
g62
(dp1177
g70
I4
ssg71
g1171
sg64
(lp1178
g100
asbasbasbag57
(g73
g59
NtRp1179
(dp1180
g62
(dp1181
sg71
g822
sg64
(lp1182
g57
(g78
g59
NtRp1183
(dp1184
g62
(dp1185
g82
g83
ssg71
g1179
sg64
(lp1186
S'is_pypy'
p1187
asbag57
(g78
g59
NtRp1188
(dp1189
g62
(dp1190
g89
g90
ssg71
g1179
sg64
(lp1191
S':'
asbag57
(g78
g59
NtRp1192
(dp1193
g62
(dp1194
sg71
g1179
sg64
(lp1195
g57
(g58
g59
NtRp1196
(dp1197
g62
(dp1198
g70
I4
ssg71
g1192
sg64
(lp1199
g100
asbasbasbag57
(g73
g59
NtRp1200
(dp1201
g62
(dp1202
sg71
g822
sg64
(lp1203
g57
(g78
g59
NtRp1204
(dp1205
g62
(dp1206
g82
g83
ssg71
g1200
sg64
(lp1207
S'path_info'
p1208
asbag57
(g78
g59
NtRp1209
(dp1210
g62
(dp1211
g89
g90
ssg71
g1200
sg64
(lp1212
S':'
asbag57
(g78
g59
NtRp1213
(dp1214
g62
(dp1215
sg71
g1200
sg64
(lp1216
g57
(g58
g59
NtRp1217
(dp1218
g62
(dp1219
g70
I4
ssg71
g1213
sg64
(lp1220
S'/Phylografter/stree/index'
p1221
asbasbasbag57
(g73
g59
NtRp1222
(dp1223
g62
(dp1224
sg71
g822
sg64
(lp1225
g57
(g78
g59
NtRp1226
(dp1227
g62
(dp1228
g82
g83
ssg71
g1222
sg64
(lp1229
S'query_string'
p1230
asbag57
(g78
g59
NtRp1231
(dp1232
g62
(dp1233
g89
g90
ssg71
g1222
sg64
(lp1234
S':'
asbag57
(g78
g59
NtRp1235
(dp1236
g62
(dp1237
sg71
g1222
sg64
(lp1238
g57
(g58
g59
NtRp1239
(dp1240
g62
(dp1241
g70
I4
ssg71
g1235
sg64
(lp1242
S''
asbasbasbag57
(g73
g59
NtRp1243
(dp1244
g62
(dp1245
sg71
g822
sg64
(lp1246
g57
(g78
g59
NtRp1247
(dp1248
g62
(dp1249
g82
g83
ssg71
g1243
sg64
(lp1250
S'remote_addr'
p1251
asbag57
(g78
g59
NtRp1252
(dp1253
g62
(dp1254
g89
g90
ssg71
g1243
sg64
(lp1255
S':'
asbag57
(g78
g59
NtRp1256
(dp1257
g62
(dp1258
sg71
g1243
sg64
(lp1259
g57
(g58
g59
NtRp1260
(dp1261
g62
(dp1262
g70
I4
ssg71
g1256
sg64
(lp1263
g190
asbasbasbag57
(g73
g59
NtRp1264
(dp1265
g62
(dp1266
sg71
g822
sg64
(lp1267
g57
(g78
g59
NtRp1268
(dp1269
g62
(dp1270
g82
g83
ssg71
g1264
sg64
(lp1271
S'remote_port'
p1272
asbag57
(g78
g59
NtRp1273
(dp1274
g62
(dp1275
g89
g90
ssg71
g1264
sg64
(lp1276
S':'
asbag57
(g78
g59
NtRp1277
(dp1278
g62
(dp1279
sg71
g1264
sg64
(lp1280
g57
(g58
g59
NtRp1281
(dp1282
g62
(dp1283
g70
I4
ssg71
g1277
sg64
(lp1284
S'3373'
p1285
asbasbasbag57
(g73
g59
NtRp1286
(dp1287
g62
(dp1288
sg71
g822
sg64
(lp1289
g57
(g78
g59
NtRp1290
(dp1291
g62
(dp1292
g82
g83
ssg71
g1286
sg64
(lp1293
S'request_method'
p1294
asbag57
(g78
g59
NtRp1295
(dp1296
g62
(dp1297
g89
g90
ssg71
g1286
sg64
(lp1298
S':'
asbag57
(g78
g59
NtRp1299
(dp1300
g62
(dp1301
sg71
g1286
sg64
(lp1302
g57
(g58
g59
NtRp1303
(dp1304
g62
(dp1305
g70
I4
ssg71
g1299
sg64
(lp1306
S'GET'
p1307
asbasbasbag57
(g73
g59
NtRp1308
(dp1309
g62
(dp1310
sg71
g822
sg64
(lp1311
g57
(g78
g59
NtRp1312
(dp1313
g62
(dp1314
g82
g83
ssg71
g1308
sg64
(lp1315
S'script_name'
p1316
asbag57
(g78
g59
NtRp1317
(dp1318
g62
(dp1319
g89
g90
ssg71
g1308
sg64
(lp1320
S':'
asbag57
(g78
g59
NtRp1321
(dp1322
g62
(dp1323
sg71
g1308
sg64
(lp1324
g57
(g58
g59
NtRp1325
(dp1326
g62
(dp1327
g70
I4
ssg71
g1321
sg64
(lp1328
S''
asbasbasbag57
(g73
g59
NtRp1329
(dp1330
g62
(dp1331
sg71
g822
sg64
(lp1332
g57
(g78
g59
NtRp1333
(dp1334
g62
(dp1335
g82
g83
ssg71
g1329
sg64
(lp1336
S'server_name'
p1337
asbag57
(g78
g59
NtRp1338
(dp1339
g62
(dp1340
g89
g90
ssg71
g1329
sg64
(lp1341
S':'
asbag57
(g78
g59
NtRp1342
(dp1343
g62
(dp1344
sg71
g1329
sg64
(lp1345
g57
(g58
g59
NtRp1346
(dp1347
g62
(dp1348
g70
I4
ssg71
g1342
sg64
(lp1349
S'fm-biosync-int1'
p1350
asbasbasbag57
(g73
g59
NtRp1351
(dp1352
g62
(dp1353
sg71
g822
sg64
(lp1354
g57
(g78
g59
NtRp1355
(dp1356
g62
(dp1357
g82
g83
ssg71
g1351
sg64
(lp1358
S'server_port'
p1359
asbag57
(g78
g59
NtRp1360
(dp1361
g62
(dp1362
g89
g90
ssg71
g1351
sg64
(lp1363
S':'
asbag57
(g78
g59
NtRp1364
(dp1365
g62
(dp1366
sg71
g1351
sg64
(lp1367
g57
(g58
g59
NtRp1368
(dp1369
g62
(dp1370
g70
I4
ssg71
g1364
sg64
(lp1371
S'8000'
p1372
asbasbasbag57
(g73
g59
NtRp1373
(dp1374
g62
(dp1375
sg71
g822
sg64
(lp1376
g57
(g78
g59
NtRp1377
(dp1378
g62
(dp1379
g82
g83
ssg71
g1373
sg64
(lp1380
S'server_protocol'
p1381
asbag57
(g78
g59
NtRp1382
(dp1383
g62
(dp1384
g89
g90
ssg71
g1373
sg64
(lp1385
S':'
asbag57
(g78
g59
NtRp1386
(dp1387
g62
(dp1388
sg71
g1373
sg64
(lp1389
g57
(g58
g59
NtRp1390
(dp1391
g62
(dp1392
g70
I4
ssg71
g1386
sg64
(lp1393
S'HTTP/1.1'
p1394
asbasbasbag57
(g73
g59
NtRp1395
(dp1396
g62
(dp1397
sg71
g822
sg64
(lp1398
g57
(g78
g59
NtRp1399
(dp1400
g62
(dp1401
g82
g83
ssg71
g1395
sg64
(lp1402
S'server_software'
p1403
asbag57
(g78
g59
NtRp1404
(dp1405
g62
(dp1406
g89
g90
ssg71
g1395
sg64
(lp1407
S':'
asbag57
(g78
g59
NtRp1408
(dp1409
g62
(dp1410
sg71
g1395
sg64
(lp1411
g57
(g58
g59
NtRp1412
(dp1413
g62
(dp1414
g70
I4
ssg71
g1408
sg64
(lp1415
S'Rocket 1.2.4'
p1416
asbasbasbag57
(g73
g59
NtRp1417
(dp1418
g62
(dp1419
sg71
g822
sg64
(lp1420
g57
(g78
g59
NtRp1421
(dp1422
g62
(dp1423
g82
g83
ssg71
g1417
sg64
(lp1424
S'web2py_crontype'
p1425
asbag57
(g78
g59
NtRp1426
(dp1427
g62
(dp1428
g89
g90
ssg71
g1417
sg64
(lp1429
S':'
asbag57
(g78
g59
NtRp1430
(dp1431
g62
(dp1432
sg71
g1417
sg64
(lp1433
g57
(g58
g59
NtRp1434
(dp1435
g62
(dp1436
g70
I4
ssg71
g1430
sg64
(lp1437
S'hard'
p1438
asbasbasbag57
(g73
g59
NtRp1439
(dp1440
g62
(dp1441
sg71
g822
sg64
(lp1442
g57
(g78
g59
NtRp1443
(dp1444
g62
(dp1445
g82
g83
ssg71
g1439
sg64
(lp1446
S'web2py_path'
p1447
asbag57
(g78
g59
NtRp1448
(dp1449
g62
(dp1450
g89
g90
ssg71
g1439
sg64
(lp1451
S':'
asbag57
(g78
g59
NtRp1452
(dp1453
g62
(dp1454
sg71
g1439
sg64
(lp1455
g57
(g58
g59
NtRp1456
(dp1457
g62
(dp1458
g70
I4
ssg71
g1452
sg64
(lp1459
g869
asbasbasbag57
(g73
g59
NtRp1460
(dp1461
g62
(dp1462
sg71
g822
sg64
(lp1463
g57
(g78
g59
NtRp1464
(dp1465
g62
(dp1466
g82
g83
ssg71
g1460
sg64
(lp1467
S'web2py_version'
p1468
asbag57
(g78
g59
NtRp1469
(dp1470
g62
(dp1471
g89
g90
ssg71
g1460
sg64
(lp1472
S':'
asbag57
(g78
g59
NtRp1473
(dp1474
g62
(dp1475
sg71
g1460
sg64
(lp1476
g57
(g58
g59
NtRp1477
(dp1478
g62
(dp1479
g70
I4
ssg71
g1473
sg64
(lp1480
g57
(g66
g59
NtRp1481
(dp1482
g62
(dp1483
g70
I3
ssg71
Nsg64
(lp1484
g57
(g73
g59
NtRp1485
(dp1486
g62
(dp1487
sg71
g1481
sg64
(lp1488
g57
(g78
g59
NtRp1489
(dp1490
g62
(dp1491
sg71
g1485
sg64
(lp1492
g57
(g58
g59
NtRp1493
(dp1494
g62
(dp1495
g70
I3
ssg71
g1489
sg64
(lp1496
S'1'
asbasbasbag57
(g73
g59
NtRp1497
(dp1498
g62
(dp1499
sg71
g1481
sg64
(lp1500
g57
(g78
g59
NtRp1501
(dp1502
g62
(dp1503
sg71
g1497
sg64
(lp1504
g57
(g58
g59
NtRp1505
(dp1506
g62
(dp1507
g70
I3
ssg71
g1501
sg64
(lp1508
S'99'
p1509
asbasbasbag57
(g73
g59
NtRp1510
(dp1511
g62
(dp1512
sg71
g1481
sg64
(lp1513
g57
(g78
g59
NtRp1514
(dp1515
g62
(dp1516
sg71
g1510
sg64
(lp1517
g57
(g58
g59
NtRp1518
(dp1519
g62
(dp1520
g70
I3
ssg71
g1514
sg64
(lp1521
S'7'
asbasbasbag57
(g73
g59
NtRp1522
(dp1523
g62
(dp1524
sg71
g1481
sg64
(lp1525
g57
(g78
g59
NtRp1526
(dp1527
g62
(dp1528
sg71
g1522
sg64
(lp1529
g57
(g58
g59
NtRp1530
(dp1531
g62
(dp1532
g70
I3
ssg71
g1526
sg64
(lp1533
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1534
asbasbasbag57
(g73
g59
NtRp1535
(dp1536
g62
(dp1537
sg71
g1481
sg64
(lp1538
g57
(g78
g59
NtRp1539
(dp1540
g62
(dp1541
sg71
g1535
sg64
(lp1542
g57
(g58
g59
NtRp1543
(dp1544
g62
(dp1545
g70
I3
ssg71
g1539
sg64
(lp1546
S'stable'
p1547
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1548
(dp1549
g62
(dp1550
sg71
g822
sg64
(lp1551
g57
(g78
g59
NtRp1552
(dp1553
g62
(dp1554
g82
g83
ssg71
g1548
sg64
(lp1555
S'wsgi_errors'
p1556
asbag57
(g78
g59
NtRp1557
(dp1558
g62
(dp1559
g89
g90
ssg71
g1548
sg64
(lp1560
S':'
asbag57
(g78
g59
NtRp1561
(dp1562
g62
(dp1563
sg71
g1548
sg64
(lp1564
g57
(g58
g59
NtRp1565
(dp1566
g62
(dp1567
g70
I4
ssg71
g1561
sg64
(lp1568
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p1569
asbasbasbag57
(g73
g59
NtRp1570
(dp1571
g62
(dp1572
sg71
g822
sg64
(lp1573
g57
(g78
g59
NtRp1574
(dp1575
g62
(dp1576
g82
g83
ssg71
g1570
sg64
(lp1577
S'wsgi_file_wrapper'
p1578
asbag57
(g78
g59
NtRp1579
(dp1580
g62
(dp1581
g89
g90
ssg71
g1570
sg64
(lp1582
S':'
asbag57
(g78
g59
NtRp1583
(dp1584
g62
(dp1585
sg71
g1570
sg64
(lp1586
g57
(g58
g59
NtRp1587
(dp1588
g62
(dp1589
g70
I4
ssg71
g1583
sg64
(lp1590
S'<class wsgiref.util.FileWrapper at 0x01649DF8>'
p1591
asbasbasbag57
(g73
g59
NtRp1592
(dp1593
g62
(dp1594
sg71
g822
sg64
(lp1595
g57
(g78
g59
NtRp1596
(dp1597
g62
(dp1598
g82
g83
ssg71
g1592
sg64
(lp1599
S'wsgi_input'
p1600
asbag57
(g78
g59
NtRp1601
(dp1602
g62
(dp1603
g89
g90
ssg71
g1592
sg64
(lp1604
S':'
asbag57
(g78
g59
NtRp1605
(dp1606
g62
(dp1607
sg71
g1592
sg64
(lp1608
g57
(g58
g59
NtRp1609
(dp1610
g62
(dp1611
g70
I4
ssg71
g1605
sg64
(lp1612
S'<socket._fileobject object at 0x05808CB0>'
p1613
asbasbasbag57
(g73
g59
NtRp1614
(dp1615
g62
(dp1616
sg71
g822
sg64
(lp1617
g57
(g78
g59
NtRp1618
(dp1619
g62
(dp1620
g82
g83
ssg71
g1614
sg64
(lp1621
S'wsgi_multiprocess'
p1622
asbag57
(g78
g59
NtRp1623
(dp1624
g62
(dp1625
g89
g90
ssg71
g1614
sg64
(lp1626
S':'
asbag57
(g78
g59
NtRp1627
(dp1628
g62
(dp1629
sg71
g1614
sg64
(lp1630
g57
(g58
g59
NtRp1631
(dp1632
g62
(dp1633
g70
I4
ssg71
g1627
sg64
(lp1634
g100
asbasbasbag57
(g73
g59
NtRp1635
(dp1636
g62
(dp1637
sg71
g822
sg64
(lp1638
g57
(g78
g59
NtRp1639
(dp1640
g62
(dp1641
g82
g83
ssg71
g1635
sg64
(lp1642
S'wsgi_multithread'
p1643
asbag57
(g78
g59
NtRp1644
(dp1645
g62
(dp1646
g89
g90
ssg71
g1635
sg64
(lp1647
S':'
asbag57
(g78
g59
NtRp1648
(dp1649
g62
(dp1650
sg71
g1635
sg64
(lp1651
g57
(g58
g59
NtRp1652
(dp1653
g62
(dp1654
g70
I4
ssg71
g1648
sg64
(lp1655
S'True'
p1656
asbasbasbag57
(g73
g59
NtRp1657
(dp1658
g62
(dp1659
sg71
g822
sg64
(lp1660
g57
(g78
g59
NtRp1661
(dp1662
g62
(dp1663
g82
g83
ssg71
g1657
sg64
(lp1664
S'wsgi_run_once'
p1665
asbag57
(g78
g59
NtRp1666
(dp1667
g62
(dp1668
g89
g90
ssg71
g1657
sg64
(lp1669
S':'
asbag57
(g78
g59
NtRp1670
(dp1671
g62
(dp1672
sg71
g1657
sg64
(lp1673
g57
(g58
g59
NtRp1674
(dp1675
g62
(dp1676
g70
I4
ssg71
g1670
sg64
(lp1677
g100
asbasbasbag57
(g73
g59
NtRp1678
(dp1679
g62
(dp1680
sg71
g822
sg64
(lp1681
g57
(g78
g59
NtRp1682
(dp1683
g62
(dp1684
g82
g83
ssg71
g1678
sg64
(lp1685
S'wsgi_url_scheme'
p1686
asbag57
(g78
g59
NtRp1687
(dp1688
g62
(dp1689
g89
g90
ssg71
g1678
sg64
(lp1690
S':'
asbag57
(g78
g59
NtRp1691
(dp1692
g62
(dp1693
sg71
g1678
sg64
(lp1694
g57
(g58
g59
NtRp1695
(dp1696
g62
(dp1697
g70
I4
ssg71
g1691
sg64
(lp1698
S'http'
p1699
asbasbasbag57
(g73
g59
NtRp1700
(dp1701
g62
(dp1702
sg71
g822
sg64
(lp1703
g57
(g78
g59
NtRp1704
(dp1705
g62
(dp1706
g82
g83
ssg71
g1700
sg64
(lp1707
S'wsgi_version'
p1708
asbag57
(g78
g59
NtRp1709
(dp1710
g62
(dp1711
g89
g90
ssg71
g1700
sg64
(lp1712
S':'
asbag57
(g78
g59
NtRp1713
(dp1714
g62
(dp1715
sg71
g1700
sg64
(lp1716
g57
(g58
g59
NtRp1717
(dp1718
g62
(dp1719
g70
I4
ssg71
g1713
sg64
(lp1720
g57
(g66
g59
NtRp1721
(dp1722
g62
(dp1723
g70
I3
ssg71
Nsg64
(lp1724
g57
(g73
g59
NtRp1725
(dp1726
g62
(dp1727
sg71
g1721
sg64
(lp1728
g57
(g78
g59
NtRp1729
(dp1730
g62
(dp1731
sg71
g1725
sg64
(lp1732
g57
(g58
g59
NtRp1733
(dp1734
g62
(dp1735
g70
I3
ssg71
g1729
sg64
(lp1736
S'1'
asbasbasbag57
(g73
g59
NtRp1737
(dp1738
g62
(dp1739
sg71
g1721
sg64
(lp1740
g57
(g78
g59
NtRp1741
(dp1742
g62
(dp1743
sg71
g1737
sg64
(lp1744
g57
(g58
g59
NtRp1745
(dp1746
g62
(dp1747
g70
I3
ssg71
g1741
sg64
(lp1748
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1749
(dp1750
g62
(dp1751
sg71
g67
sg64
(lp1752
g57
(g78
g59
NtRp1753
(dp1754
g62
(dp1755
g82
g83
ssg71
g1749
sg64
(lp1756
S'extension'
p1757
asbag57
(g78
g59
NtRp1758
(dp1759
g62
(dp1760
g89
g90
ssg71
g1749
sg64
(lp1761
S':'
asbag57
(g78
g59
NtRp1762
(dp1763
g62
(dp1764
sg71
g1749
sg64
(lp1765
g57
(g58
g59
NtRp1766
(dp1767
g62
(dp1768
g70
I5
ssg71
g1762
sg64
(lp1769
S'html'
p1770
asbasbasbag57
(g73
g59
NtRp1771
(dp1772
g62
(dp1773
sg71
g67
sg64
(lp1774
g57
(g78
g59
NtRp1775
(dp1776
g62
(dp1777
g82
g83
ssg71
g1771
sg64
(lp1778
S'folder'
p1779
asbag57
(g78
g59
NtRp1780
(dp1781
g62
(dp1782
g89
g90
ssg71
g1771
sg64
(lp1783
S':'
asbag57
(g78
g59
NtRp1784
(dp1785
g62
(dp1786
sg71
g1771
sg64
(lp1787
g57
(g58
g59
NtRp1788
(dp1789
g62
(dp1790
g70
I5
ssg71
g1784
sg64
(lp1791
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\'
p1792
asbasbasbag57
(g73
g59
NtRp1793
(dp1794
g62
(dp1795
sg71
g67
sg64
(lp1796
g57
(g78
g59
NtRp1797
(dp1798
g62
(dp1799
g82
g83
ssg71
g1793
sg64
(lp1800
S'function'
p1801
asbag57
(g78
g59
NtRp1802
(dp1803
g62
(dp1804
g89
g90
ssg71
g1793
sg64
(lp1805
S':'
asbag57
(g78
g59
NtRp1806
(dp1807
g62
(dp1808
sg71
g1793
sg64
(lp1809
g57
(g58
g59
NtRp1810
(dp1811
g62
(dp1812
g70
I5
ssg71
g1806
sg64
(lp1813
S'index'
p1814
asbasbasbag57
(g73
g59
NtRp1815
(dp1816
g62
(dp1817
sg71
g67
sg64
(lp1818
g57
(g78
g59
NtRp1819
(dp1820
g62
(dp1821
g82
g83
ssg71
g1815
sg64
(lp1822
S'get_vars'
p1823
asbag57
(g78
g59
NtRp1824
(dp1825
g62
(dp1826
g89
g90
ssg71
g1815
sg64
(lp1827
S':'
asbag57
(g78
g59
NtRp1828
(dp1829
g62
(dp1830
sg71
g1815
sg64
(lp1831
g57
(g58
g59
NtRp1832
(dp1833
g62
(dp1834
g70
I5
ssg71
g1828
sg64
(lp1835
g57
(g66
g59
NtRp1836
(dp1837
g62
(dp1838
g70
I4
ssg71
Nsg64
(lp1839
sbasbasbasbag57
(g73
g59
NtRp1840
(dp1841
g62
(dp1842
sg71
g67
sg64
(lp1843
g57
(g78
g59
NtRp1844
(dp1845
g62
(dp1846
g82
g83
ssg71
g1840
sg64
(lp1847
S'global_settings'
p1848
asbag57
(g78
g59
NtRp1849
(dp1850
g62
(dp1851
g89
g90
ssg71
g1840
sg64
(lp1852
S':'
asbag57
(g78
g59
NtRp1853
(dp1854
g62
(dp1855
sg71
g1840
sg64
(lp1856
g57
(g58
g59
NtRp1857
(dp1858
g62
(dp1859
g70
I5
ssg71
g1853
sg64
(lp1860
g57
(g66
g59
NtRp1861
(dp1862
g62
(dp1863
g70
I4
ssg71
Nsg64
(lp1864
g57
(g73
g59
NtRp1865
(dp1866
g62
(dp1867
sg71
g1861
sg64
(lp1868
g57
(g78
g59
NtRp1869
(dp1870
g62
(dp1871
g82
g83
ssg71
g1865
sg64
(lp1872
g834
asbag57
(g78
g59
NtRp1873
(dp1874
g62
(dp1875
g89
g90
ssg71
g1865
sg64
(lp1876
S':'
asbag57
(g78
g59
NtRp1877
(dp1878
g62
(dp1879
sg71
g1865
sg64
(lp1880
g57
(g58
g59
NtRp1881
(dp1882
g62
(dp1883
g70
I4
ssg71
g1877
sg64
(lp1884
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p1885
asbasbasbag57
(g73
g59
NtRp1886
(dp1887
g62
(dp1888
sg71
g1861
sg64
(lp1889
g57
(g78
g59
NtRp1890
(dp1891
g62
(dp1892
g82
g83
ssg71
g1886
sg64
(lp1893
g856
asbag57
(g78
g59
NtRp1894
(dp1895
g62
(dp1896
g89
g90
ssg71
g1886
sg64
(lp1897
S':'
asbag57
(g78
g59
NtRp1898
(dp1899
g62
(dp1900
sg71
g1886
sg64
(lp1901
g57
(g58
g59
NtRp1902
(dp1903
g62
(dp1904
g70
I4
ssg71
g1898
sg64
(lp1905
g869
asbasbasbag57
(g73
g59
NtRp1906
(dp1907
g62
(dp1908
sg71
g1861
sg64
(lp1909
g57
(g78
g59
NtRp1910
(dp1911
g62
(dp1912
g82
g83
ssg71
g1906
sg64
(lp1913
g878
asbag57
(g78
g59
NtRp1914
(dp1915
g62
(dp1916
g89
g90
ssg71
g1906
sg64
(lp1917
S':'
asbag57
(g78
g59
NtRp1918
(dp1919
g62
(dp1920
sg71
g1906
sg64
(lp1921
g57
(g58
g59
NtRp1922
(dp1923
g62
(dp1924
g70
I4
ssg71
g1918
sg64
(lp1925
g57
(g66
g59
NtRp1926
(dp1927
g62
(dp1928
g70
I3
ssg71
Nsg64
(lp1929
sbasbasbasbag57
(g73
g59
NtRp1930
(dp1931
g62
(dp1932
sg71
g1861
sg64
(lp1933
g57
(g78
g59
NtRp1934
(dp1935
g62
(dp1936
g82
g83
ssg71
g1930
sg64
(lp1937
g903
asbag57
(g78
g59
NtRp1938
(dp1939
g62
(dp1940
g89
g90
ssg71
g1930
sg64
(lp1941
S':'
asbag57
(g78
g59
NtRp1942
(dp1943
g62
(dp1944
sg71
g1930
sg64
(lp1945
g57
(g58
g59
NtRp1946
(dp1947
g62
(dp1948
g70
I4
ssg71
g1942
sg64
(lp1949
S"<Values at 0x174ff08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1950
asbasbasbag57
(g73
g59
NtRp1951
(dp1952
g62
(dp1953
sg71
g1861
sg64
(lp1954
g57
(g78
g59
NtRp1955
(dp1956
g62
(dp1957
g82
g83
ssg71
g1951
sg64
(lp1958
g925
asbag57
(g78
g59
NtRp1959
(dp1960
g62
(dp1961
g89
g90
ssg71
g1951
sg64
(lp1962
S':'
asbag57
(g78
g59
NtRp1963
(dp1964
g62
(dp1965
sg71
g1951
sg64
(lp1966
g57
(g58
g59
NtRp1967
(dp1968
g62
(dp1969
g70
I4
ssg71
g1963
sg64
(lp1970
S'set([])'
p1971
asbasbasbag57
(g73
g59
NtRp1972
(dp1973
g62
(dp1974
sg71
g1861
sg64
(lp1975
g57
(g78
g59
NtRp1976
(dp1977
g62
(dp1978
g82
g83
ssg71
g1972
sg64
(lp1979
g947
asbag57
(g78
g59
NtRp1980
(dp1981
g62
(dp1982
g89
g90
ssg71
g1972
sg64
(lp1983
S':'
asbag57
(g78
g59
NtRp1984
(dp1985
g62
(dp1986
sg71
g1972
sg64
(lp1987
g57
(g58
g59
NtRp1988
(dp1989
g62
(dp1990
g70
I4
ssg71
g1984
sg64
(lp1991
g100
asbasbasbag57
(g73
g59
NtRp1992
(dp1993
g62
(dp1994
sg71
g1861
sg64
(lp1995
g57
(g78
g59
NtRp1996
(dp1997
g62
(dp1998
g82
g83
ssg71
g1992
sg64
(lp1999
g968
asbag57
(g78
g59
NtRp2000
(dp2001
g62
(dp2002
g89
g90
ssg71
g1992
sg64
(lp2003
S':'
asbag57
(g78
g59
NtRp2004
(dp2005
g62
(dp2006
sg71
g1992
sg64
(lp2007
g57
(g58
g59
NtRp2008
(dp2009
g62
(dp2010
g70
I4
ssg71
g2004
sg64
(lp2011
g981
asbasbasbag57
(g73
g59
NtRp2012
(dp2013
g62
(dp2014
sg71
g1861
sg64
(lp2015
g57
(g78
g59
NtRp2016
(dp2017
g62
(dp2018
g82
g83
ssg71
g2012
sg64
(lp2019
g1166
asbag57
(g78
g59
NtRp2020
(dp2021
g62
(dp2022
g89
g90
ssg71
g2012
sg64
(lp2023
S':'
asbag57
(g78
g59
NtRp2024
(dp2025
g62
(dp2026
sg71
g2012
sg64
(lp2027
g57
(g58
g59
NtRp2028
(dp2029
g62
(dp2030
g70
I4
ssg71
g2024
sg64
(lp2031
g100
asbasbasbag57
(g73
g59
NtRp2032
(dp2033
g62
(dp2034
sg71
g1861
sg64
(lp2035
g57
(g78
g59
NtRp2036
(dp2037
g62
(dp2038
g82
g83
ssg71
g2032
sg64
(lp2039
g1187
asbag57
(g78
g59
NtRp2040
(dp2041
g62
(dp2042
g89
g90
ssg71
g2032
sg64
(lp2043
S':'
asbag57
(g78
g59
NtRp2044
(dp2045
g62
(dp2046
sg71
g2032
sg64
(lp2047
g57
(g58
g59
NtRp2048
(dp2049
g62
(dp2050
g70
I4
ssg71
g2044
sg64
(lp2051
g100
asbasbasbag57
(g73
g59
NtRp2052
(dp2053
g62
(dp2054
sg71
g1861
sg64
(lp2055
g57
(g78
g59
NtRp2056
(dp2057
g62
(dp2058
g82
g83
ssg71
g2052
sg64
(lp2059
g1425
asbag57
(g78
g59
NtRp2060
(dp2061
g62
(dp2062
g89
g90
ssg71
g2052
sg64
(lp2063
S':'
asbag57
(g78
g59
NtRp2064
(dp2065
g62
(dp2066
sg71
g2052
sg64
(lp2067
g57
(g58
g59
NtRp2068
(dp2069
g62
(dp2070
g70
I4
ssg71
g2064
sg64
(lp2071
g1438
asbasbasbag57
(g73
g59
NtRp2072
(dp2073
g62
(dp2074
sg71
g1861
sg64
(lp2075
g57
(g78
g59
NtRp2076
(dp2077
g62
(dp2078
g82
g83
ssg71
g2072
sg64
(lp2079
g1468
asbag57
(g78
g59
NtRp2080
(dp2081
g62
(dp2082
g89
g90
ssg71
g2072
sg64
(lp2083
S':'
asbag57
(g78
g59
NtRp2084
(dp2085
g62
(dp2086
sg71
g2072
sg64
(lp2087
g57
(g58
g59
NtRp2088
(dp2089
g62
(dp2090
g70
I4
ssg71
g2084
sg64
(lp2091
g57
(g66
g59
NtRp2092
(dp2093
g62
(dp2094
g70
I3
ssg71
Nsg64
(lp2095
g57
(g73
g59
NtRp2096
(dp2097
g62
(dp2098
sg71
g2092
sg64
(lp2099
g57
(g78
g59
NtRp2100
(dp2101
g62
(dp2102
sg71
g2096
sg64
(lp2103
g57
(g58
g59
NtRp2104
(dp2105
g62
(dp2106
g70
I3
ssg71
g2100
sg64
(lp2107
S'1'
asbasbasbag57
(g73
g59
NtRp2108
(dp2109
g62
(dp2110
sg71
g2092
sg64
(lp2111
g57
(g78
g59
NtRp2112
(dp2113
g62
(dp2114
sg71
g2108
sg64
(lp2115
g57
(g58
g59
NtRp2116
(dp2117
g62
(dp2118
g70
I3
ssg71
g2112
sg64
(lp2119
S'99'
p2120
asbasbasbag57
(g73
g59
NtRp2121
(dp2122
g62
(dp2123
sg71
g2092
sg64
(lp2124
g57
(g78
g59
NtRp2125
(dp2126
g62
(dp2127
sg71
g2121
sg64
(lp2128
g57
(g58
g59
NtRp2129
(dp2130
g62
(dp2131
g70
I3
ssg71
g2125
sg64
(lp2132
S'7'
asbasbasbag57
(g73
g59
NtRp2133
(dp2134
g62
(dp2135
sg71
g2092
sg64
(lp2136
g57
(g78
g59
NtRp2137
(dp2138
g62
(dp2139
sg71
g2133
sg64
(lp2140
g57
(g58
g59
NtRp2141
(dp2142
g62
(dp2143
g70
I3
ssg71
g2137
sg64
(lp2144
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2145
asbasbasbag57
(g73
g59
NtRp2146
(dp2147
g62
(dp2148
sg71
g2092
sg64
(lp2149
g57
(g78
g59
NtRp2150
(dp2151
g62
(dp2152
sg71
g2146
sg64
(lp2153
g57
(g58
g59
NtRp2154
(dp2155
g62
(dp2156
g70
I3
ssg71
g2150
sg64
(lp2157
g1547
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2158
(dp2159
g62
(dp2160
sg71
g67
sg64
(lp2161
g57
(g78
g59
NtRp2162
(dp2163
g62
(dp2164
g82
g83
ssg71
g2158
sg64
(lp2165
S'is_https'
p2166
asbag57
(g78
g59
NtRp2167
(dp2168
g62
(dp2169
g89
g90
ssg71
g2158
sg64
(lp2170
S':'
asbag57
(g78
g59
NtRp2171
(dp2172
g62
(dp2173
sg71
g2158
sg64
(lp2174
g57
(g58
g59
NtRp2175
(dp2176
g62
(dp2177
g70
I5
ssg71
g2171
sg64
(lp2178
g100
asbasbasbag57
(g73
g59
NtRp2179
(dp2180
g62
(dp2181
sg71
g67
sg64
(lp2182
g57
(g78
g59
NtRp2183
(dp2184
g62
(dp2185
g82
g83
ssg71
g2179
sg64
(lp2186
S'is_local'
p2187
asbag57
(g78
g59
NtRp2188
(dp2189
g62
(dp2190
g89
g90
ssg71
g2179
sg64
(lp2191
S':'
asbag57
(g78
g59
NtRp2192
(dp2193
g62
(dp2194
sg71
g2179
sg64
(lp2195
g57
(g58
g59
NtRp2196
(dp2197
g62
(dp2198
g70
I5
ssg71
g2192
sg64
(lp2199
g1656
asbasbasbag57
(g73
g59
NtRp2200
(dp2201
g62
(dp2202
sg71
g67
sg64
(lp2203
g57
(g78
g59
NtRp2204
(dp2205
g62
(dp2206
g82
g83
ssg71
g2200
sg64
(lp2207
S'is_restful'
p2208
asbag57
(g78
g59
NtRp2209
(dp2210
g62
(dp2211
g89
g90
ssg71
g2200
sg64
(lp2212
S':'
asbag57
(g78
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g2200
sg64
(lp2216
g57
(g58
g59
NtRp2217
(dp2218
g62
(dp2219
g70
I5
ssg71
g2213
sg64
(lp2220
g100
asbasbasbag57
(g73
g59
NtRp2221
(dp2222
g62
(dp2223
sg71
g67
sg64
(lp2224
g57
(g78
g59
NtRp2225
(dp2226
g62
(dp2227
g82
g83
ssg71
g2221
sg64
(lp2228
S'now'
p2229
asbag57
(g78
g59
NtRp2230
(dp2231
g62
(dp2232
g89
g90
ssg71
g2221
sg64
(lp2233
S':'
asbag57
(g78
g59
NtRp2234
(dp2235
g62
(dp2236
sg71
g2221
sg64
(lp2237
g57
(g58
g59
NtRp2238
(dp2239
g62
(dp2240
g70
I5
ssg71
g2234
sg64
(lp2241
S'datetime.datetime(2012, 7, 16, 11, 36, 57, 453000)'
p2242
asbasbasbag57
(g73
g59
NtRp2243
(dp2244
g62
(dp2245
sg71
g67
sg64
(lp2246
g57
(g78
g59
NtRp2247
(dp2248
g62
(dp2249
g82
g83
ssg71
g2243
sg64
(lp2250
S'post_vars'
p2251
asbag57
(g78
g59
NtRp2252
(dp2253
g62
(dp2254
g89
g90
ssg71
g2243
sg64
(lp2255
S':'
asbag57
(g78
g59
NtRp2256
(dp2257
g62
(dp2258
sg71
g2243
sg64
(lp2259
g57
(g58
g59
NtRp2260
(dp2261
g62
(dp2262
g70
I5
ssg71
g2256
sg64
(lp2263
g57
(g66
g59
NtRp2264
(dp2265
g62
(dp2266
g70
I4
ssg71
Nsg64
(lp2267
sbasbasbasbag57
(g73
g59
NtRp2268
(dp2269
g62
(dp2270
sg71
g67
sg64
(lp2271
g57
(g78
g59
NtRp2272
(dp2273
g62
(dp2274
g82
g83
ssg71
g2268
sg64
(lp2275
S'url'
p2276
asbag57
(g78
g59
NtRp2277
(dp2278
g62
(dp2279
g89
g90
ssg71
g2268
sg64
(lp2280
S':'
asbag57
(g78
g59
NtRp2281
(dp2282
g62
(dp2283
sg71
g2268
sg64
(lp2284
g57
(g58
g59
NtRp2285
(dp2286
g62
(dp2287
g70
I5
ssg71
g2281
sg64
(lp2288
S'/Phylografter/stree/index'
p2289
asbasbasbag57
(g73
g59
NtRp2290
(dp2291
g62
(dp2292
sg71
g67
sg64
(lp2293
g57
(g78
g59
NtRp2294
(dp2295
g62
(dp2296
g82
g83
ssg71
g2290
sg64
(lp2297
S'utcnow'
p2298
asbag57
(g78
g59
NtRp2299
(dp2300
g62
(dp2301
g89
g90
ssg71
g2290
sg64
(lp2302
S':'
asbag57
(g78
g59
NtRp2303
(dp2304
g62
(dp2305
sg71
g2290
sg64
(lp2306
g57
(g58
g59
NtRp2307
(dp2308
g62
(dp2309
g70
I5
ssg71
g2303
sg64
(lp2310
S'datetime.datetime(2012, 7, 16, 16, 36, 57, 453000)'
p2311
asbasbasbag57
(g73
g59
NtRp2312
(dp2313
g62
(dp2314
sg71
g67
sg64
(lp2315
g57
(g78
g59
NtRp2316
(dp2317
g62
(dp2318
g82
g83
ssg71
g2312
sg64
(lp2319
S'uuid'
p2320
asbag57
(g78
g59
NtRp2321
(dp2322
g62
(dp2323
g89
g90
ssg71
g2312
sg64
(lp2324
S':'
asbag57
(g78
g59
NtRp2325
(dp2326
g62
(dp2327
sg71
g2312
sg64
(lp2328
g57
(g58
g59
NtRp2329
(dp2330
g62
(dp2331
g70
I5
ssg71
g2325
sg64
(lp2332
S'Phylografter/127.0.0.1.2012-07-16.11-36-57.9879aa80-b4bb-4efd-9e5f-7aebbe2c7cec'
p2333
asbasbasbag57
(g73
g59
NtRp2334
(dp2335
g62
(dp2336
sg71
g67
sg64
(lp2337
g57
(g78
g59
NtRp2338
(dp2339
g62
(dp2340
g82
g83
ssg71
g2334
sg64
(lp2341
S'vars'
p2342
asbag57
(g78
g59
NtRp2343
(dp2344
g62
(dp2345
g89
g90
ssg71
g2334
sg64
(lp2346
S':'
asbag57
(g78
g59
NtRp2347
(dp2348
g62
(dp2349
sg71
g2334
sg64
(lp2350
g57
(g58
g59
NtRp2351
(dp2352
g62
(dp2353
g70
I5
ssg71
g2347
sg64
(lp2354
g57
(g66
g59
NtRp2355
(dp2356
g62
(dp2357
g70
I4
ssg71
Nsg64
(lp2358
sbasbasbasbag57
(g73
g59
NtRp2359
(dp2360
g62
(dp2361
sg71
g67
sg64
(lp2362
g57
(g78
g59
NtRp2363
(dp2364
g62
(dp2365
g82
g83
ssg71
g2359
sg64
(lp2366
S'wsgi'
p2367
asbag57
(g78
g59
NtRp2368
(dp2369
g62
(dp2370
g89
g90
ssg71
g2359
sg64
(lp2371
S':'
asbag57
(g78
g59
NtRp2372
(dp2373
g62
(dp2374
sg71
g2359
sg64
(lp2375
g57
(g58
g59
NtRp2376
(dp2377
g62
(dp2378
g70
I5
ssg71
g2372
sg64
(lp2379
g57
(g66
g59
NtRp2380
(dp2381
g62
(dp2382
g70
I4
ssg71
Nsg64
(lp2383
g57
(g73
g59
NtRp2384
(dp2385
g62
(dp2386
sg71
g2380
sg64
(lp2387
g57
(g78
g59
NtRp2388
(dp2389
g62
(dp2390
g82
g83
ssg71
g2384
sg64
(lp2391
S'environ'
p2392
asbag57
(g78
g59
NtRp2393
(dp2394
g62
(dp2395
g89
g90
ssg71
g2384
sg64
(lp2396
S':'
asbag57
(g78
g59
NtRp2397
(dp2398
g62
(dp2399
sg71
g2384
sg64
(lp2400
g57
(g58
g59
NtRp2401
(dp2402
g62
(dp2403
g70
I4
ssg71
g2397
sg64
(lp2404
g57
(g66
g59
NtRp2405
(dp2406
g62
(dp2407
g70
I3
ssg71
Nsg64
(lp2408
g57
(g73
g59
NtRp2409
(dp2410
g62
(dp2411
sg71
g2405
sg64
(lp2412
g57
(g78
g59
NtRp2413
(dp2414
g62
(dp2415
g82
g83
ssg71
g2409
sg64
(lp2416
S'HTTP_ACCEPT'
p2417
asbag57
(g78
g59
NtRp2418
(dp2419
g62
(dp2420
g89
g90
ssg71
g2409
sg64
(lp2421
S':'
asbag57
(g78
g59
NtRp2422
(dp2423
g62
(dp2424
sg71
g2409
sg64
(lp2425
g57
(g58
g59
NtRp2426
(dp2427
g62
(dp2428
g70
I3
ssg71
g2422
sg64
(lp2429
g1003
asbasbasbag57
(g73
g59
NtRp2430
(dp2431
g62
(dp2432
sg71
g2405
sg64
(lp2433
g57
(g78
g59
NtRp2434
(dp2435
g62
(dp2436
g82
g83
ssg71
g2430
sg64
(lp2437
S'HTTP_ACCEPT_ENCODING'
p2438
asbag57
(g78
g59
NtRp2439
(dp2440
g62
(dp2441
g89
g90
ssg71
g2430
sg64
(lp2442
S':'
asbag57
(g78
g59
NtRp2443
(dp2444
g62
(dp2445
sg71
g2430
sg64
(lp2446
g57
(g58
g59
NtRp2447
(dp2448
g62
(dp2449
g70
I3
ssg71
g2443
sg64
(lp2450
g1025
asbasbasbag57
(g73
g59
NtRp2451
(dp2452
g62
(dp2453
sg71
g2405
sg64
(lp2454
g57
(g78
g59
NtRp2455
(dp2456
g62
(dp2457
g82
g83
ssg71
g2451
sg64
(lp2458
S'HTTP_ACCEPT_LANGUAGE'
p2459
asbag57
(g78
g59
NtRp2460
(dp2461
g62
(dp2462
g89
g90
ssg71
g2451
sg64
(lp2463
S':'
asbag57
(g78
g59
NtRp2464
(dp2465
g62
(dp2466
sg71
g2451
sg64
(lp2467
g57
(g58
g59
NtRp2468
(dp2469
g62
(dp2470
g70
I3
ssg71
g2464
sg64
(lp2471
g1047
asbasbasbag57
(g73
g59
NtRp2472
(dp2473
g62
(dp2474
sg71
g2405
sg64
(lp2475
g57
(g78
g59
NtRp2476
(dp2477
g62
(dp2478
g82
g83
ssg71
g2472
sg64
(lp2479
S'HTTP_CONNECTION'
p2480
asbag57
(g78
g59
NtRp2481
(dp2482
g62
(dp2483
g89
g90
ssg71
g2472
sg64
(lp2484
S':'
asbag57
(g78
g59
NtRp2485
(dp2486
g62
(dp2487
sg71
g2472
sg64
(lp2488
g57
(g58
g59
NtRp2489
(dp2490
g62
(dp2491
g70
I3
ssg71
g2485
sg64
(lp2492
g1069
asbasbasbag57
(g73
g59
NtRp2493
(dp2494
g62
(dp2495
sg71
g2405
sg64
(lp2496
g57
(g78
g59
NtRp2497
(dp2498
g62
(dp2499
g82
g83
ssg71
g2493
sg64
(lp2500
S'HTTP_COOKIE'
p2501
asbag57
(g78
g59
NtRp2502
(dp2503
g62
(dp2504
g89
g90
ssg71
g2493
sg64
(lp2505
S':'
asbag57
(g78
g59
NtRp2506
(dp2507
g62
(dp2508
sg71
g2493
sg64
(lp2509
g57
(g58
g59
NtRp2510
(dp2511
g62
(dp2512
g70
I3
ssg71
g2506
sg64
(lp2513
g1091
asbasbasbag57
(g73
g59
NtRp2514
(dp2515
g62
(dp2516
sg71
g2405
sg64
(lp2517
g57
(g78
g59
NtRp2518
(dp2519
g62
(dp2520
g82
g83
ssg71
g2514
sg64
(lp2521
S'HTTP_HOST'
p2522
asbag57
(g78
g59
NtRp2523
(dp2524
g62
(dp2525
g89
g90
ssg71
g2514
sg64
(lp2526
S':'
asbag57
(g78
g59
NtRp2527
(dp2528
g62
(dp2529
sg71
g2514
sg64
(lp2530
g57
(g58
g59
NtRp2531
(dp2532
g62
(dp2533
g70
I3
ssg71
g2527
sg64
(lp2534
g1113
asbasbasbag57
(g73
g59
NtRp2535
(dp2536
g62
(dp2537
sg71
g2405
sg64
(lp2538
g57
(g78
g59
NtRp2539
(dp2540
g62
(dp2541
g82
g83
ssg71
g2535
sg64
(lp2542
S'HTTP_REFERER'
p2543
asbag57
(g78
g59
NtRp2544
(dp2545
g62
(dp2546
g89
g90
ssg71
g2535
sg64
(lp2547
S':'
asbag57
(g78
g59
NtRp2548
(dp2549
g62
(dp2550
sg71
g2535
sg64
(lp2551
g57
(g58
g59
NtRp2552
(dp2553
g62
(dp2554
g70
I3
ssg71
g2548
sg64
(lp2555
g1135
asbasbasbag57
(g73
g59
NtRp2556
(dp2557
g62
(dp2558
sg71
g2405
sg64
(lp2559
g57
(g78
g59
NtRp2560
(dp2561
g62
(dp2562
g82
g83
ssg71
g2556
sg64
(lp2563
S'HTTP_USER_AGENT'
p2564
asbag57
(g78
g59
NtRp2565
(dp2566
g62
(dp2567
g89
g90
ssg71
g2556
sg64
(lp2568
S':'
asbag57
(g78
g59
NtRp2569
(dp2570
g62
(dp2571
sg71
g2556
sg64
(lp2572
g57
(g58
g59
NtRp2573
(dp2574
g62
(dp2575
g70
I3
ssg71
g2569
sg64
(lp2576
g1157
asbasbasbag57
(g73
g59
NtRp2577
(dp2578
g62
(dp2579
sg71
g2405
sg64
(lp2580
g57
(g78
g59
NtRp2581
(dp2582
g62
(dp2583
g82
g83
ssg71
g2577
sg64
(lp2584
S'PATH_INFO'
p2585
asbag57
(g78
g59
NtRp2586
(dp2587
g62
(dp2588
g89
g90
ssg71
g2577
sg64
(lp2589
S':'
asbag57
(g78
g59
NtRp2590
(dp2591
g62
(dp2592
sg71
g2577
sg64
(lp2593
g57
(g58
g59
NtRp2594
(dp2595
g62
(dp2596
g70
I3
ssg71
g2590
sg64
(lp2597
g1221
asbasbasbag57
(g73
g59
NtRp2598
(dp2599
g62
(dp2600
sg71
g2405
sg64
(lp2601
g57
(g78
g59
NtRp2602
(dp2603
g62
(dp2604
g82
g83
ssg71
g2598
sg64
(lp2605
S'QUERY_STRING'
p2606
asbag57
(g78
g59
NtRp2607
(dp2608
g62
(dp2609
g89
g90
ssg71
g2598
sg64
(lp2610
S':'
asbag57
(g78
g59
NtRp2611
(dp2612
g62
(dp2613
sg71
g2598
sg64
(lp2614
g57
(g58
g59
NtRp2615
(dp2616
g62
(dp2617
g70
I3
ssg71
g2611
sg64
(lp2618
S''
asbasbasbag57
(g73
g59
NtRp2619
(dp2620
g62
(dp2621
sg71
g2405
sg64
(lp2622
g57
(g78
g59
NtRp2623
(dp2624
g62
(dp2625
g82
g83
ssg71
g2619
sg64
(lp2626
S'REMOTE_ADDR'
p2627
asbag57
(g78
g59
NtRp2628
(dp2629
g62
(dp2630
g89
g90
ssg71
g2619
sg64
(lp2631
S':'
asbag57
(g78
g59
NtRp2632
(dp2633
g62
(dp2634
sg71
g2619
sg64
(lp2635
g57
(g58
g59
NtRp2636
(dp2637
g62
(dp2638
g70
I3
ssg71
g2632
sg64
(lp2639
g190
asbasbasbag57
(g73
g59
NtRp2640
(dp2641
g62
(dp2642
sg71
g2405
sg64
(lp2643
g57
(g78
g59
NtRp2644
(dp2645
g62
(dp2646
g82
g83
ssg71
g2640
sg64
(lp2647
S'REMOTE_PORT'
p2648
asbag57
(g78
g59
NtRp2649
(dp2650
g62
(dp2651
g89
g90
ssg71
g2640
sg64
(lp2652
S':'
asbag57
(g78
g59
NtRp2653
(dp2654
g62
(dp2655
sg71
g2640
sg64
(lp2656
g57
(g58
g59
NtRp2657
(dp2658
g62
(dp2659
g70
I3
ssg71
g2653
sg64
(lp2660
g1285
asbasbasbag57
(g73
g59
NtRp2661
(dp2662
g62
(dp2663
sg71
g2405
sg64
(lp2664
g57
(g78
g59
NtRp2665
(dp2666
g62
(dp2667
g82
g83
ssg71
g2661
sg64
(lp2668
S'REQUEST_METHOD'
p2669
asbag57
(g78
g59
NtRp2670
(dp2671
g62
(dp2672
g89
g90
ssg71
g2661
sg64
(lp2673
S':'
asbag57
(g78
g59
NtRp2674
(dp2675
g62
(dp2676
sg71
g2661
sg64
(lp2677
g57
(g58
g59
NtRp2678
(dp2679
g62
(dp2680
g70
I3
ssg71
g2674
sg64
(lp2681
g1307
asbasbasbag57
(g73
g59
NtRp2682
(dp2683
g62
(dp2684
sg71
g2405
sg64
(lp2685
g57
(g78
g59
NtRp2686
(dp2687
g62
(dp2688
g82
g83
ssg71
g2682
sg64
(lp2689
S'SCRIPT_NAME'
p2690
asbag57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
g89
g90
ssg71
g2682
sg64
(lp2694
S':'
asbag57
(g78
g59
NtRp2695
(dp2696
g62
(dp2697
sg71
g2682
sg64
(lp2698
g57
(g58
g59
NtRp2699
(dp2700
g62
(dp2701
g70
I3
ssg71
g2695
sg64
(lp2702
S''
asbasbasbag57
(g73
g59
NtRp2703
(dp2704
g62
(dp2705
sg71
g2405
sg64
(lp2706
g57
(g78
g59
NtRp2707
(dp2708
g62
(dp2709
g82
g83
ssg71
g2703
sg64
(lp2710
S'SERVER_NAME'
p2711
asbag57
(g78
g59
NtRp2712
(dp2713
g62
(dp2714
g89
g90
ssg71
g2703
sg64
(lp2715
S':'
asbag57
(g78
g59
NtRp2716
(dp2717
g62
(dp2718
sg71
g2703
sg64
(lp2719
g57
(g58
g59
NtRp2720
(dp2721
g62
(dp2722
g70
I3
ssg71
g2716
sg64
(lp2723
g1350
asbasbasbag57
(g73
g59
NtRp2724
(dp2725
g62
(dp2726
sg71
g2405
sg64
(lp2727
g57
(g78
g59
NtRp2728
(dp2729
g62
(dp2730
g82
g83
ssg71
g2724
sg64
(lp2731
S'SERVER_PORT'
p2732
asbag57
(g78
g59
NtRp2733
(dp2734
g62
(dp2735
g89
g90
ssg71
g2724
sg64
(lp2736
S':'
asbag57
(g78
g59
NtRp2737
(dp2738
g62
(dp2739
sg71
g2724
sg64
(lp2740
g57
(g58
g59
NtRp2741
(dp2742
g62
(dp2743
g70
I3
ssg71
g2737
sg64
(lp2744
g1372
asbasbasbag57
(g73
g59
NtRp2745
(dp2746
g62
(dp2747
sg71
g2405
sg64
(lp2748
g57
(g78
g59
NtRp2749
(dp2750
g62
(dp2751
g82
g83
ssg71
g2745
sg64
(lp2752
S'SERVER_PROTOCOL'
p2753
asbag57
(g78
g59
NtRp2754
(dp2755
g62
(dp2756
g89
g90
ssg71
g2745
sg64
(lp2757
S':'
asbag57
(g78
g59
NtRp2758
(dp2759
g62
(dp2760
sg71
g2745
sg64
(lp2761
g57
(g58
g59
NtRp2762
(dp2763
g62
(dp2764
g70
I3
ssg71
g2758
sg64
(lp2765
g1394
asbasbasbag57
(g73
g59
NtRp2766
(dp2767
g62
(dp2768
sg71
g2405
sg64
(lp2769
g57
(g78
g59
NtRp2770
(dp2771
g62
(dp2772
g82
g83
ssg71
g2766
sg64
(lp2773
S'SERVER_SOFTWARE'
p2774
asbag57
(g78
g59
NtRp2775
(dp2776
g62
(dp2777
g89
g90
ssg71
g2766
sg64
(lp2778
S':'
asbag57
(g78
g59
NtRp2779
(dp2780
g62
(dp2781
sg71
g2766
sg64
(lp2782
g57
(g58
g59
NtRp2783
(dp2784
g62
(dp2785
g70
I3
ssg71
g2779
sg64
(lp2786
g1416
asbasbasbag57
(g73
g59
NtRp2787
(dp2788
g62
(dp2789
sg71
g2405
sg64
(lp2790
g57
(g78
g59
NtRp2791
(dp2792
g62
(dp2793
g82
g83
ssg71
g2787
sg64
(lp2794
S'wsgi.errors'
p2795
asbag57
(g78
g59
NtRp2796
(dp2797
g62
(dp2798
g89
g90
ssg71
g2787
sg64
(lp2799
S':'
asbag57
(g78
g59
NtRp2800
(dp2801
g62
(dp2802
sg71
g2787
sg64
(lp2803
g57
(g58
g59
NtRp2804
(dp2805
g62
(dp2806
g70
I3
ssg71
g2800
sg64
(lp2807
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p2808
asbasbasbag57
(g73
g59
NtRp2809
(dp2810
g62
(dp2811
sg71
g2405
sg64
(lp2812
g57
(g78
g59
NtRp2813
(dp2814
g62
(dp2815
g82
g83
ssg71
g2809
sg64
(lp2816
S'wsgi.file_wrapper'
p2817
asbag57
(g78
g59
NtRp2818
(dp2819
g62
(dp2820
g89
g90
ssg71
g2809
sg64
(lp2821
S':'
asbag57
(g78
g59
NtRp2822
(dp2823
g62
(dp2824
sg71
g2809
sg64
(lp2825
g57
(g58
g59
NtRp2826
(dp2827
g62
(dp2828
g70
I3
ssg71
g2822
sg64
(lp2829
S'<class wsgiref.util.FileWrapper at 0x01649DF8>'
p2830
asbasbasbag57
(g73
g59
NtRp2831
(dp2832
g62
(dp2833
sg71
g2405
sg64
(lp2834
g57
(g78
g59
NtRp2835
(dp2836
g62
(dp2837
g82
g83
ssg71
g2831
sg64
(lp2838
S'wsgi.input'
p2839
asbag57
(g78
g59
NtRp2840
(dp2841
g62
(dp2842
g89
g90
ssg71
g2831
sg64
(lp2843
S':'
asbag57
(g78
g59
NtRp2844
(dp2845
g62
(dp2846
sg71
g2831
sg64
(lp2847
g57
(g58
g59
NtRp2848
(dp2849
g62
(dp2850
g70
I3
ssg71
g2844
sg64
(lp2851
S'<cStringIO.StringO object at 0x05818860>'
p2852
asbasbasbag57
(g73
g59
NtRp2853
(dp2854
g62
(dp2855
sg71
g2405
sg64
(lp2856
g57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
g82
g83
ssg71
g2853
sg64
(lp2860
S'wsgi.multiprocess'
p2861
asbag57
(g78
g59
NtRp2862
(dp2863
g62
(dp2864
g89
g90
ssg71
g2853
sg64
(lp2865
S':'
asbag57
(g78
g59
NtRp2866
(dp2867
g62
(dp2868
sg71
g2853
sg64
(lp2869
g57
(g58
g59
NtRp2870
(dp2871
g62
(dp2872
g70
I3
ssg71
g2866
sg64
(lp2873
g100
asbasbasbag57
(g73
g59
NtRp2874
(dp2875
g62
(dp2876
sg71
g2405
sg64
(lp2877
g57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
g82
g83
ssg71
g2874
sg64
(lp2881
S'wsgi.multithread'
p2882
asbag57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
g89
g90
ssg71
g2874
sg64
(lp2886
S':'
asbag57
(g78
g59
NtRp2887
(dp2888
g62
(dp2889
sg71
g2874
sg64
(lp2890
g57
(g58
g59
NtRp2891
(dp2892
g62
(dp2893
g70
I3
ssg71
g2887
sg64
(lp2894
g1656
asbasbasbag57
(g73
g59
NtRp2895
(dp2896
g62
(dp2897
sg71
g2405
sg64
(lp2898
g57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
g82
g83
ssg71
g2895
sg64
(lp2902
S'wsgi.run_once'
p2903
asbag57
(g78
g59
NtRp2904
(dp2905
g62
(dp2906
g89
g90
ssg71
g2895
sg64
(lp2907
S':'
asbag57
(g78
g59
NtRp2908
(dp2909
g62
(dp2910
sg71
g2895
sg64
(lp2911
g57
(g58
g59
NtRp2912
(dp2913
g62
(dp2914
g70
I3
ssg71
g2908
sg64
(lp2915
g100
asbasbasbag57
(g73
g59
NtRp2916
(dp2917
g62
(dp2918
sg71
g2405
sg64
(lp2919
g57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
g82
g83
ssg71
g2916
sg64
(lp2923
S'wsgi.url_scheme'
p2924
asbag57
(g78
g59
NtRp2925
(dp2926
g62
(dp2927
g89
g90
ssg71
g2916
sg64
(lp2928
S':'
asbag57
(g78
g59
NtRp2929
(dp2930
g62
(dp2931
sg71
g2916
sg64
(lp2932
g57
(g58
g59
NtRp2933
(dp2934
g62
(dp2935
g70
I3
ssg71
g2929
sg64
(lp2936
g1699
asbasbasbag57
(g73
g59
NtRp2937
(dp2938
g62
(dp2939
sg71
g2405
sg64
(lp2940
g57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
g82
g83
ssg71
g2937
sg64
(lp2944
S'wsgi.version'
p2945
asbag57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
g89
g90
ssg71
g2937
sg64
(lp2949
S':'
asbag57
(g78
g59
NtRp2950
(dp2951
g62
(dp2952
sg71
g2937
sg64
(lp2953
g57
(g58
g59
NtRp2954
(dp2955
g62
(dp2956
g70
I3
ssg71
g2950
sg64
(lp2957
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2958
(lp2959
(dp2960
S'file'
p2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py'
p2962
sS'dump'
p2963
(dp2964
S'environment'
p2965
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p2966
sS'ccode'
p2967
S'<code object <module> at 057CEE30, file "C:\\Docu...tions\\Phylografter\\controllers/stree.py", line 5>'
p2968
ssS'lnum'
p2969
I205
sS'lines'
p2970
(dp2971
I200
S'    try:'
p2972
sI201
S'        if type(code) == types.CodeType:'
p2973
sI202
S'            ccode = code'
p2974
sI203
S'        else:'
p2975
sI204
S'            ccode = compile2(code,layer)'
p2976
sI205
S'        exec ccode in environment'
p2977
sI206
S'    except HTTP:'
p2978
sI207
S'        raise'
p2979
sI208
S'    except RestrictedError:'
p2980
sI209
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p2981
ssS'call'
p2982
S'(code=\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, ...}, layer=r\'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py\')'
p2983
sS'func'
p2984
S'restricted'
p2985
sa(dp2986
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers\\stree.py'
p2987
sg2963
(dp2988
sg2969
I479
sg2970
(dp2989
I468
S'            if n.parent:'
p2990
sI469
S'                db.snode[n.id].update_record(parent=n.parent.id)'
p2991
sI470
S'            n.label = str(n.id)'
p2992
sI471
S'            n.length = None'
p2993
sI472
S'        db.stree[form.vars.id].update_record(newick_idstr=t.root.write())'
p2994
sI473
S''
sI474
S"        session.flash = 'tree %s inserted' % t.attrib.id"
p2995
sI475
S"        redirect(URL('study','tbimport_trees'))"
p2996
sI476
S''
sI477
S'    return dict(study=study, tree=t, form=form)'
p2997
ssg2982
S'()'
p2998
sg2984
S'<module>'
p2999
sa(dp3000
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\globals.py'
p3001
sg2963
(dp3002
S'self'
p3003
S'undefined'
p3004
sS'f'
S'<function index>'
p3005
ssg2969
I173
sg2970
(dp3006
I168
S'        self.menu = []             # used by the default view layout'
p3007
sI169
S'        self.files = []            # used by web2py_ajax.html'
p3008
sI170
S'        self.generic_patterns = [] # patterns to allow generic views'
p3009
sI171
S"        self.delimiters = ('{{','}}')"
p3010
sI172
S'        self._vars = None'
p3011
sI173
S'        self._caller = lambda f: f()'
p3012
sI174
S'        self._view_environment = None'
p3013
sI175
S'        self._custom_commit = None'
p3014
sI176
S'        self._custom_rollback = None'
p3015
sI177
S''
ssg2982
S'(f=<function index>)'
p3016
sg2984
S'<lambda>'
p3017
sa(dp3018
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers\\stree.py'
p3019
sg2963
(dp3020
S'table'
p3021
g3004
sS'powerTable'
p3022
S"<Storage {'virtualfields': <__restricted__.Virtu...'virtual.ntax', 'stree.uploaded', 'stree.type']}>"
p3023
sS'powerTable.create'
p3024
S'<function plugin_powertable>'
p3025
sS'builtindict'
p3026
S"<type 'dict'>"
p3027
ssg2969
I77
sg2970
(dp3028
I72
S'    powerTable.hiddencolumns = ["stree.type"]'
p3029
sI73
S''
sI74
S'    ## details = dict(detailscallback=URL(c="stree",f="details"))'
p3030
sI75
S'    powerTable.extra = dict(autoresize=True)'
p3031
sI76
S''
sI77
S'    return dict(table=powerTable.create())'
p3032
sI78
S''
sI79
S'def details():'
p3033
sI80
S'    return DIV()'
p3034
sI81
S''
ssg2982
S'()'
p3035
sg2984
S'index'
p3036
sa(dp3037
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py'
p3038
sg2963
(dp3039
S'global PowerTable'
p3040
S"<class '__restricted__.PowerTable'>"
p3041
ssg2969
I816
sg2970
(dp3042
I811
S'                                        ifunctions=str(ifunctions),'
p3043
sI812
S'                                        searchcolumnjs=str(searchcolumnjs)'
p3044
sI813
S'                                        )'
p3045
sI814
S'                        ),'
p3046
sI815
S'                    CSS,'
p3047
sI816
S'                    PowerTable(),'
p3048
sI817
S'                    )'
p3049
sI818
S''
sI819
S''
sI820
S'plugins.powerTable.create = plugin_powertable'
p3050
ssg2982
S'()'
p3051
sg2984
S'plugin_powertable'
p3052
sa(dp3053
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py'
p3054
sg2963
(dp3055
S'sqlrows.setvirtualfields'
p3056
S'<bound method Rows.setvirtualfields of <gluon.dal.Rows object>>'
p3057
sS'virtualfields'
p3058
S'<__restricted__.Virtual object>'
p3059
sS'sqlrows'
p3060
S'<gluon.dal.Rows object>'
p3061
sS'virtual'
p3062
g3004
ssg2969
I149
sg2970
(dp3063
I144
S"                        virtuallabels['virtual.%s' % vf] = getattr(virtualfields,vf).label"
p3064
sI145
S'                    except AttributeError:'
p3065
sI146
S'                        pass'
p3066
sI147
S''
sI148
S'            #appending virtual fields to the rows'
p3067
sI149
S'            sqlrows.setvirtualfields(virtual=virtualfields)'
p3068
sI150
S''
sI151
S'        #keycolumn is required, if not set, it will be the first column'
p3069
sI152
S'        if not keycolumn: keycolumn = sqlrows.colnames[0]'
p3070
sI153
S"        keycolumntbl = keycolumn.split('.')[0]"
p3071
ssg2982
S'(self=<__restricted__.PowerTable object>)'
p3072
sg2984
g50
sa(dp3073
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\dal.py'
p3074
sg2963
(dp3075
S'box'
p3076
S'<Row {}>'
p3077
sS'attribute'
p3078
S"'clade'"
p3079
sS'method'
p3080
S'<bound method Virtual.clade of <__restricted__.Virtual object>>'
p3081
ssg2969
I7728
sg2970
(dp3082
I7723
S'                            box[attribute]=VirtualCommand(method,row)'
p3083
sI7724
S'                        elif type(method)==types.MethodType:'
p3084
sI7725
S'                            if not updated:'
p3085
sI7726
S'                                virtualfields.__dict__.update(row)'
p3086
sI7727
S'                                updated = True'
p3087
sI7728
S'                            box[attribute]=method()'
p3088
sI7729
S'        return self'
p3089
sI7730
S''
sI7731
S'    def __and__(self,other):'
p3090
sI7732
S"        if self.colnames!=other.colnames: raise Exception, 'Cannot & incompatible Rows objects'"
p3091
ssg2982
S"(self=<gluon.dal.Rows object>, **keyed_virtualfields={'virtual': <__restricted__.Virtual object>})"
p3092
sg2984
S'setvirtualfields'
p3093
sa(dp3094
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers\\stree.py'
p3095
sg2963
(dp3096
S'global db'
p3097
S"<DAL {'auth_event': <Table {'origin': <gluon.dal...'_id': <gluon.dal.Field object at 0x057BC2F0>}>}>"
p3098
sS'study'
p3099
S'238'
p3100
sS'db.study'
p3101
S"<Table {'comment': <gluon.dal.Field object at 0x..., '_id': <gluon.dal.Field object at 0x0579FB10>}>"
p3102
sS'].focal_clade.name'
p3103
g3004
sS'].focal_clade'
p3104
S'None'
p3105
ssg2969
I41
sg2970
(dp3106
I36
S'            return A(stree.type, _href=u)'
p3107
sI37
S''
sI38
S"        @virtualsettings(label='Focal Clade')"
p3108
sI39
S'        def clade(self):'
p3109
sI40
S'            study = t[self.stree.id].study'
p3110
sI41
S'            return db.study[study].focal_clade.name'
p3111
sI42
S''
sI43
S"        @virtualsettings(label='OTUs')"
p3112
sI44
S'        def ntax(self):'
p3113
sI45
S'            q = ((db.snode.tree==self.stree.id)&'
p3114
ssg2982
S'(self=<__restricted__.Virtual object>)'
p3115
sg2984
S'clade'
p3116
sasS'pyver'
p3117
S'Python 2.7.3: C:\\Python27\\python.exe'
p3118
sS'session'
p3119
g57
(g58
g59
NtRp3120
(dp3121
g62
(dp3122
sg64
(lp3123
g57
(g66
g59
NtRp3124
(dp3125
g62
(dp3126
g70
I5
ssg71
Nsg64
(lp3127
g57
(g73
g59
NtRp3128
(dp3129
g62
(dp3130
sg71
g3124
sg64
(lp3131
g57
(g78
g59
NtRp3132
(dp3133
g62
(dp3134
g82
g83
ssg71
g3128
sg64
(lp3135
S'scrollbarWidth'
p3136
asbag57
(g78
g59
NtRp3137
(dp3138
g62
(dp3139
g89
g90
ssg71
g3128
sg64
(lp3140
S':'
asbag57
(g78
g59
NtRp3141
(dp3142
g62
(dp3143
sg71
g3128
sg64
(lp3144
g57
(g58
g59
NtRp3145
(dp3146
g62
(dp3147
g70
I5
ssg71
g3141
sg64
(lp3148
S'17'
p3149
asbasbasbag57
(g73
g59
NtRp3150
(dp3151
g62
(dp3152
sg71
g3124
sg64
(lp3153
g57
(g78
g59
NtRp3154
(dp3155
g62
(dp3156
g82
g83
ssg71
g3150
sg64
(lp3157
S'textWidthMetric'
p3158
asbag57
(g78
g59
NtRp3159
(dp3160
g62
(dp3161
g89
g90
ssg71
g3150
sg64
(lp3162
S':'
asbag57
(g78
g59
NtRp3163
(dp3164
g62
(dp3165
sg71
g3150
sg64
(lp3166
g57
(g58
g59
NtRp3167
(dp3168
g62
(dp3169
g70
I5
ssg71
g3163
sg64
(lp3170
S'10.25'
p3171
asbasbasbag57
(g73
g59
NtRp3172
(dp3173
g62
(dp3174
sg71
g3124
sg64
(lp3175
g57
(g78
g59
NtRp3176
(dp3177
g62
(dp3178
g82
g83
ssg71
g3172
sg64
(lp3179
S'windowHeight'
p3180
asbag57
(g78
g59
NtRp3181
(dp3182
g62
(dp3183
g89
g90
ssg71
g3172
sg64
(lp3184
S':'
asbag57
(g78
g59
NtRp3185
(dp3186
g62
(dp3187
sg71
g3172
sg64
(lp3188
g57
(g58
g59
NtRp3189
(dp3190
g62
(dp3191
g70
I5
ssg71
g3185
sg64
(lp3192
S'957'
p3193
asbasbasbag57
(g73
g59
NtRp3194
(dp3195
g62
(dp3196
sg71
g3124
sg64
(lp3197
g57
(g78
g59
NtRp3198
(dp3199
g62
(dp3200
g82
g83
ssg71
g3194
sg64
(lp3201
S'windowWidth'
p3202
asbag57
(g78
g59
NtRp3203
(dp3204
g62
(dp3205
g89
g90
ssg71
g3194
sg64
(lp3206
S':'
asbag57
(g78
g59
NtRp3207
(dp3208
g62
(dp3209
sg71
g3194
sg64
(lp3210
g57
(g58
g59
NtRp3211
(dp3212
g62
(dp3213
g70
I5
ssg71
g3207
sg64
(lp3214
S'1680'
p3215
asbasbasbasbasbsS'etype'
p3216
S"<type 'exceptions.AttributeError'>"
p3217
sS'date'
p3218
S'Mon Jul 16 11:37:20 2012'
p3219
sS'response'
p3220
g57
(g58
g59
NtRp3221
(dp3222
g62
(dp3223
sg64
(lp3224
g57
(g66
g59
NtRp3225
(dp3226
g62
(dp3227
g70
I5
ssg71
Nsg64
(lp3228
g57
(g73
g59
NtRp3229
(dp3230
g62
(dp3231
sg71
g3225
sg64
(lp3232
g57
(g78
g59
NtRp3233
(dp3234
g62
(dp3235
g82
g83
ssg71
g3229
sg64
(lp3236
g155
asbag57
(g78
g59
NtRp3237
(dp3238
g62
(dp3239
g89
g90
ssg71
g3229
sg64
(lp3240
S':'
asbag57
(g78
g59
NtRp3241
(dp3242
g62
(dp3243
sg71
g3229
sg64
(lp3244
g57
(g58
g59
NtRp3245
(dp3246
g62
(dp3247
g70
I5
ssg71
g3241
sg64
(lp3248
S'<cStringIO.StringO object at 0x057BB3A0>'
p3249
asbasbasbag57
(g73
g59
NtRp3250
(dp3251
g62
(dp3252
sg71
g3225
sg64
(lp3253
g57
(g78
g59
NtRp3254
(dp3255
g62
(dp3256
g82
g83
ssg71
g3250
sg64
(lp3257
g221
asbag57
(g78
g59
NtRp3258
(dp3259
g62
(dp3260
g89
g90
ssg71
g3250
sg64
(lp3261
S':'
asbag57
(g78
g59
NtRp3262
(dp3263
g62
(dp3264
sg71
g3250
sg64
(lp3265
g57
(g58
g59
NtRp3266
(dp3267
g62
(dp3268
g70
I5
ssg71
g3262
sg64
(lp3269
g57
(g66
g59
NtRp3270
(dp3271
g62
(dp3272
g70
I4
ssg71
Nsg64
(lp3273
g57
(g73
g59
NtRp3274
(dp3275
g62
(dp3276
sg71
g3270
sg64
(lp3277
g57
(g78
g59
NtRp3278
(dp3279
g62
(dp3280
g82
g83
ssg71
g3274
sg64
(lp3281
S'session_id_phylografter'
p3282
asbag57
(g78
g59
NtRp3283
(dp3284
g62
(dp3285
g89
g90
ssg71
g3274
sg64
(lp3286
S':'
asbag57
(g78
g59
NtRp3287
(dp3288
g62
(dp3289
sg71
g3274
sg64
(lp3290
g57
(g58
g59
NtRp3291
(dp3292
g62
(dp3293
g70
I4
ssg71
g3287
sg64
(lp3294
g57
(g66
g59
NtRp3295
(dp3296
g62
(dp3297
g70
I3
ssg71
Nsg64
(lp3298
g57
(g73
g59
NtRp3299
(dp3300
g62
(dp3301
sg71
g3295
sg64
(lp3302
g57
(g78
g59
NtRp3303
(dp3304
g62
(dp3305
g82
g83
ssg71
g3299
sg64
(lp3306
g271
asbag57
(g78
g59
NtRp3307
(dp3308
g62
(dp3309
g89
g90
ssg71
g3299
sg64
(lp3310
S':'
asbag57
(g78
g59
NtRp3311
(dp3312
g62
(dp3313
sg71
g3299
sg64
(lp3314
g57
(g58
g59
NtRp3315
(dp3316
g62
(dp3317
g70
I3
ssg71
g3311
sg64
(lp3318
S''
asbasbasbag57
(g73
g59
NtRp3319
(dp3320
g62
(dp3321
sg71
g3295
sg64
(lp3322
g57
(g78
g59
NtRp3323
(dp3324
g62
(dp3325
g82
g83
ssg71
g3319
sg64
(lp3326
g292
asbag57
(g78
g59
NtRp3327
(dp3328
g62
(dp3329
g89
g90
ssg71
g3319
sg64
(lp3330
S':'
asbag57
(g78
g59
NtRp3331
(dp3332
g62
(dp3333
sg71
g3319
sg64
(lp3334
g57
(g58
g59
NtRp3335
(dp3336
g62
(dp3337
g70
I3
ssg71
g3331
sg64
(lp3338
S''
asbasbasbag57
(g73
g59
NtRp3339
(dp3340
g62
(dp3341
sg71
g3295
sg64
(lp3342
g57
(g78
g59
NtRp3343
(dp3344
g62
(dp3345
g82
g83
ssg71
g3339
sg64
(lp3346
g313
asbag57
(g78
g59
NtRp3347
(dp3348
g62
(dp3349
g89
g90
ssg71
g3339
sg64
(lp3350
S':'
asbag57
(g78
g59
NtRp3351
(dp3352
g62
(dp3353
sg71
g3339
sg64
(lp3354
g57
(g58
g59
NtRp3355
(dp3356
g62
(dp3357
g70
I3
ssg71
g3351
sg64
(lp3358
S''
asbasbasbag57
(g73
g59
NtRp3359
(dp3360
g62
(dp3361
sg71
g3295
sg64
(lp3362
g57
(g78
g59
NtRp3363
(dp3364
g62
(dp3365
g82
g83
ssg71
g3359
sg64
(lp3366
g334
asbag57
(g78
g59
NtRp3367
(dp3368
g62
(dp3369
g89
g90
ssg71
g3359
sg64
(lp3370
S':'
asbag57
(g78
g59
NtRp3371
(dp3372
g62
(dp3373
sg71
g3359
sg64
(lp3374
g57
(g58
g59
NtRp3375
(dp3376
g62
(dp3377
g70
I3
ssg71
g3371
sg64
(lp3378
S''
asbasbasbag57
(g73
g59
NtRp3379
(dp3380
g62
(dp3381
sg71
g3295
sg64
(lp3382
g57
(g78
g59
NtRp3383
(dp3384
g62
(dp3385
g82
g83
ssg71
g3379
sg64
(lp3386
g355
asbag57
(g78
g59
NtRp3387
(dp3388
g62
(dp3389
g89
g90
ssg71
g3379
sg64
(lp3390
S':'
asbag57
(g78
g59
NtRp3391
(dp3392
g62
(dp3393
sg71
g3379
sg64
(lp3394
g57
(g58
g59
NtRp3395
(dp3396
g62
(dp3397
g70
I3
ssg71
g3391
sg64
(lp3398
S''
asbasbasbag57
(g73
g59
NtRp3399
(dp3400
g62
(dp3401
sg71
g3295
sg64
(lp3402
g57
(g78
g59
NtRp3403
(dp3404
g62
(dp3405
g82
g83
ssg71
g3399
sg64
(lp3406
g376
asbag57
(g78
g59
NtRp3407
(dp3408
g62
(dp3409
g89
g90
ssg71
g3399
sg64
(lp3410
S':'
asbag57
(g78
g59
NtRp3411
(dp3412
g62
(dp3413
sg71
g3399
sg64
(lp3414
g57
(g58
g59
NtRp3415
(dp3416
g62
(dp3417
g70
I3
ssg71
g3411
sg64
(lp3418
S'/'
asbasbasbag57
(g73
g59
NtRp3419
(dp3420
g62
(dp3421
sg71
g3295
sg64
(lp3422
g57
(g78
g59
NtRp3423
(dp3424
g62
(dp3425
g82
g83
ssg71
g3419
sg64
(lp3426
g397
asbag57
(g78
g59
NtRp3427
(dp3428
g62
(dp3429
g89
g90
ssg71
g3419
sg64
(lp3430
S':'
asbag57
(g78
g59
NtRp3431
(dp3432
g62
(dp3433
sg71
g3419
sg64
(lp3434
g57
(g58
g59
NtRp3435
(dp3436
g62
(dp3437
g70
I3
ssg71
g3431
sg64
(lp3438
S''
asbasbasbag57
(g73
g59
NtRp3439
(dp3440
g62
(dp3441
sg71
g3295
sg64
(lp3442
g57
(g78
g59
NtRp3443
(dp3444
g62
(dp3445
g82
g83
ssg71
g3439
sg64
(lp3446
g418
asbag57
(g78
g59
NtRp3447
(dp3448
g62
(dp3449
g89
g90
ssg71
g3439
sg64
(lp3450
S':'
asbag57
(g78
g59
NtRp3451
(dp3452
g62
(dp3453
sg71
g3439
sg64
(lp3454
g57
(g58
g59
NtRp3455
(dp3456
g62
(dp3457
g70
I3
ssg71
g3451
sg64
(lp3458
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3459
(dp3460
g62
(dp3461
sg71
g3225
sg64
(lp3462
g57
(g78
g59
NtRp3463
(dp3464
g62
(dp3465
g82
g83
ssg71
g3459
sg64
(lp3466
S'delimiters'
p3467
asbag57
(g78
g59
NtRp3468
(dp3469
g62
(dp3470
g89
g90
ssg71
g3459
sg64
(lp3471
S':'
asbag57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
sg71
g3459
sg64
(lp3475
g57
(g58
g59
NtRp3476
(dp3477
g62
(dp3478
g70
I5
ssg71
g3472
sg64
(lp3479
g57
(g66
g59
NtRp3480
(dp3481
g62
(dp3482
g70
I4
ssg71
Nsg64
(lp3483
g57
(g73
g59
NtRp3484
(dp3485
g62
(dp3486
sg71
g3480
sg64
(lp3487
g57
(g78
g59
NtRp3488
(dp3489
g62
(dp3490
sg71
g3484
sg64
(lp3491
g57
(g58
g59
NtRp3492
(dp3493
g62
(dp3494
g70
I4
ssg71
g3488
sg64
(lp3495
S'{{'
p3496
asbasbasbag57
(g73
g59
NtRp3497
(dp3498
g62
(dp3499
sg71
g3480
sg64
(lp3500
g57
(g78
g59
NtRp3501
(dp3502
g62
(dp3503
sg71
g3497
sg64
(lp3504
g57
(g58
g59
NtRp3505
(dp3506
g62
(dp3507
g70
I4
ssg71
g3501
sg64
(lp3508
S'}}'
p3509
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3510
(dp3511
g62
(dp3512
sg71
g3225
sg64
(lp3513
g57
(g78
g59
NtRp3514
(dp3515
g62
(dp3516
g82
g83
ssg71
g3510
sg64
(lp3517
S'files'
p3518
asbag57
(g78
g59
NtRp3519
(dp3520
g62
(dp3521
g89
g90
ssg71
g3510
sg64
(lp3522
S':'
asbag57
(g78
g59
NtRp3523
(dp3524
g62
(dp3525
sg71
g3510
sg64
(lp3526
g57
(g58
g59
NtRp3527
(dp3528
g62
(dp3529
g70
I5
ssg71
g3523
sg64
(lp3530
g57
(g66
g59
NtRp3531
(dp3532
g62
(dp3533
g70
I4
ssg71
Nsg64
(lp3534
g57
(g73
g59
NtRp3535
(dp3536
g62
(dp3537
sg71
g3531
sg64
(lp3538
g57
(g78
g59
NtRp3539
(dp3540
g62
(dp3541
sg71
g3535
sg64
(lp3542
g57
(g58
g59
NtRp3543
(dp3544
g62
(dp3545
g70
I4
ssg71
g3539
sg64
(lp3546
S'/Phylografter/static/plugin_powertable/jquery.dataTables.min.js'
p3547
asbasbasbag57
(g73
g59
NtRp3548
(dp3549
g62
(dp3550
sg71
g3531
sg64
(lp3551
g57
(g78
g59
NtRp3552
(dp3553
g62
(dp3554
sg71
g3548
sg64
(lp3555
g57
(g58
g59
NtRp3556
(dp3557
g62
(dp3558
g70
I4
ssg71
g3552
sg64
(lp3559
S'/Phylografter/static/plugin_powertable/jquery.dataTables.css'
p3560
asbasbasbag57
(g73
g59
NtRp3561
(dp3562
g62
(dp3563
sg71
g3531
sg64
(lp3564
g57
(g78
g59
NtRp3565
(dp3566
g62
(dp3567
sg71
g3561
sg64
(lp3568
g57
(g58
g59
NtRp3569
(dp3570
g62
(dp3571
g70
I4
ssg71
g3565
sg64
(lp3572
S'/Phylografter/static/plugin_powertable/ui/css/smoothness/jquery-ui-1.8.5.custom.css'
p3573
asbasbasbag57
(g73
g59
NtRp3574
(dp3575
g62
(dp3576
sg71
g3531
sg64
(lp3577
g57
(g78
g59
NtRp3578
(dp3579
g62
(dp3580
sg71
g3574
sg64
(lp3581
g57
(g58
g59
NtRp3582
(dp3583
g62
(dp3584
g70
I4
ssg71
g3578
sg64
(lp3585
S'/Phylografter/static/plugin_powertable/ui/js/jquery-ui-1.8.5.custom.min.js'
p3586
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3587
(dp3588
g62
(dp3589
sg71
g3225
sg64
(lp3590
g57
(g78
g59
NtRp3591
(dp3592
g62
(dp3593
g82
g83
ssg71
g3587
sg64
(lp3594
S'flash'
p3595
asbag57
(g78
g59
NtRp3596
(dp3597
g62
(dp3598
g89
g90
ssg71
g3587
sg64
(lp3599
S':'
asbag57
(g78
g59
NtRp3600
(dp3601
g62
(dp3602
sg71
g3587
sg64
(lp3603
g57
(g58
g59
NtRp3604
(dp3605
g62
(dp3606
g70
I5
ssg71
g3600
sg64
(lp3607
S''
asbasbasbag57
(g73
g59
NtRp3608
(dp3609
g62
(dp3610
sg71
g3225
sg64
(lp3611
g57
(g78
g59
NtRp3612
(dp3613
g62
(dp3614
g82
g83
ssg71
g3608
sg64
(lp3615
S'generic_patterns'
p3616
asbag57
(g78
g59
NtRp3617
(dp3618
g62
(dp3619
g89
g90
ssg71
g3608
sg64
(lp3620
S':'
asbag57
(g78
g59
NtRp3621
(dp3622
g62
(dp3623
sg71
g3608
sg64
(lp3624
g57
(g58
g59
NtRp3625
(dp3626
g62
(dp3627
g70
I5
ssg71
g3621
sg64
(lp3628
g57
(g66
g59
NtRp3629
(dp3630
g62
(dp3631
g70
I4
ssg71
Nsg64
(lp3632
sbasbasbasbag57
(g73
g59
NtRp3633
(dp3634
g62
(dp3635
sg71
g3225
sg64
(lp3636
g57
(g78
g59
NtRp3637
(dp3638
g62
(dp3639
g82
g83
ssg71
g3633
sg64
(lp3640
S'headers'
p3641
asbag57
(g78
g59
NtRp3642
(dp3643
g62
(dp3644
g89
g90
ssg71
g3633
sg64
(lp3645
S':'
asbag57
(g78
g59
NtRp3646
(dp3647
g62
(dp3648
sg71
g3633
sg64
(lp3649
g57
(g58
g59
NtRp3650
(dp3651
g62
(dp3652
g70
I5
ssg71
g3646
sg64
(lp3653
g57
(g66
g59
NtRp3654
(dp3655
g62
(dp3656
g70
I4
ssg71
Nsg64
(lp3657
g57
(g73
g59
NtRp3658
(dp3659
g62
(dp3660
sg71
g3654
sg64
(lp3661
g57
(g78
g59
NtRp3662
(dp3663
g62
(dp3664
g82
g83
ssg71
g3658
sg64
(lp3665
S'Cache-Control'
p3666
asbag57
(g78
g59
NtRp3667
(dp3668
g62
(dp3669
g89
g90
ssg71
g3658
sg64
(lp3670
S':'
asbag57
(g78
g59
NtRp3671
(dp3672
g62
(dp3673
sg71
g3658
sg64
(lp3674
g57
(g58
g59
NtRp3675
(dp3676
g62
(dp3677
g70
I4
ssg71
g3671
sg64
(lp3678
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3679
asbasbasbag57
(g73
g59
NtRp3680
(dp3681
g62
(dp3682
sg71
g3654
sg64
(lp3683
g57
(g78
g59
NtRp3684
(dp3685
g62
(dp3686
g82
g83
ssg71
g3680
sg64
(lp3687
S'Content-Type'
p3688
asbag57
(g78
g59
NtRp3689
(dp3690
g62
(dp3691
g89
g90
ssg71
g3680
sg64
(lp3692
S':'
asbag57
(g78
g59
NtRp3693
(dp3694
g62
(dp3695
sg71
g3680
sg64
(lp3696
g57
(g58
g59
NtRp3697
(dp3698
g62
(dp3699
g70
I4
ssg71
g3693
sg64
(lp3700
S'text/html; charset=utf-8'
p3701
asbasbasbag57
(g73
g59
NtRp3702
(dp3703
g62
(dp3704
sg71
g3654
sg64
(lp3705
g57
(g78
g59
NtRp3706
(dp3707
g62
(dp3708
g82
g83
ssg71
g3702
sg64
(lp3709
S'Expires'
p3710
asbag57
(g78
g59
NtRp3711
(dp3712
g62
(dp3713
g89
g90
ssg71
g3702
sg64
(lp3714
S':'
asbag57
(g78
g59
NtRp3715
(dp3716
g62
(dp3717
sg71
g3702
sg64
(lp3718
g57
(g58
g59
NtRp3719
(dp3720
g62
(dp3721
g70
I4
ssg71
g3715
sg64
(lp3722
S'Mon, 16 Jul 2012 16:36:57 GMT'
p3723
asbasbasbag57
(g73
g59
NtRp3724
(dp3725
g62
(dp3726
sg71
g3654
sg64
(lp3727
g57
(g78
g59
NtRp3728
(dp3729
g62
(dp3730
g82
g83
ssg71
g3724
sg64
(lp3731
S'Pragma'
p3732
asbag57
(g78
g59
NtRp3733
(dp3734
g62
(dp3735
g89
g90
ssg71
g3724
sg64
(lp3736
S':'
asbag57
(g78
g59
NtRp3737
(dp3738
g62
(dp3739
sg71
g3724
sg64
(lp3740
g57
(g58
g59
NtRp3741
(dp3742
g62
(dp3743
g70
I4
ssg71
g3737
sg64
(lp3744
S'no-cache'
p3745
asbasbasbag57
(g73
g59
NtRp3746
(dp3747
g62
(dp3748
sg71
g3654
sg64
(lp3749
g57
(g78
g59
NtRp3750
(dp3751
g62
(dp3752
g82
g83
ssg71
g3746
sg64
(lp3753
S'X-Powered-By'
p3754
asbag57
(g78
g59
NtRp3755
(dp3756
g62
(dp3757
g89
g90
ssg71
g3746
sg64
(lp3758
S':'
asbag57
(g78
g59
NtRp3759
(dp3760
g62
(dp3761
sg71
g3746
sg64
(lp3762
g57
(g58
g59
NtRp3763
(dp3764
g62
(dp3765
g70
I4
ssg71
g3759
sg64
(lp3766
S'web2py'
p3767
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3768
(dp3769
g62
(dp3770
sg71
g3225
sg64
(lp3771
g57
(g78
g59
NtRp3772
(dp3773
g62
(dp3774
g82
g83
ssg71
g3768
sg64
(lp3775
S'menu'
p3776
asbag57
(g78
g59
NtRp3777
(dp3778
g62
(dp3779
g89
g90
ssg71
g3768
sg64
(lp3780
S':'
asbag57
(g78
g59
NtRp3781
(dp3782
g62
(dp3783
sg71
g3768
sg64
(lp3784
g57
(g58
g59
NtRp3785
(dp3786
g62
(dp3787
g70
I5
ssg71
g3781
sg64
(lp3788
g57
(g66
g59
NtRp3789
(dp3790
g62
(dp3791
g70
I4
ssg71
Nsg64
(lp3792
g57
(g73
g59
NtRp3793
(dp3794
g62
(dp3795
sg71
g3789
sg64
(lp3796
g57
(g78
g59
NtRp3797
(dp3798
g62
(dp3799
sg71
g3793
sg64
(lp3800
g57
(g58
g59
NtRp3801
(dp3802
g62
(dp3803
g70
I4
ssg71
g3797
sg64
(lp3804
g57
(g66
g59
NtRp3805
(dp3806
g62
(dp3807
g70
I3
ssg71
Nsg64
(lp3808
g57
(g73
g59
NtRp3809
(dp3810
g62
(dp3811
sg71
g3805
sg64
(lp3812
g57
(g78
g59
NtRp3813
(dp3814
g62
(dp3815
sg71
g3809
sg64
(lp3816
g57
(g58
g59
NtRp3817
(dp3818
g62
(dp3819
g70
I3
ssg71
g3813
sg64
(lp3820
cgluon.languages
lazyT_unpickle
p3821
(S't\x04\x00\x00\x00Home'
tRp3822
asbasbasbag57
(g73
g59
NtRp3823
(dp3824
g62
(dp3825
sg71
g3805
sg64
(lp3826
g57
(g78
g59
NtRp3827
(dp3828
g62
(dp3829
sg71
g3823
sg64
(lp3830
g57
(g58
g59
NtRp3831
(dp3832
g62
(dp3833
g70
I3
ssg71
g3827
sg64
(lp3834
g100
asbasbasbag57
(g73
g59
NtRp3835
(dp3836
g62
(dp3837
sg71
g3805
sg64
(lp3838
g57
(g78
g59
NtRp3839
(dp3840
g62
(dp3841
sg71
g3835
sg64
(lp3842
g57
(g58
g59
NtRp3843
(dp3844
g62
(dp3845
g70
I3
ssg71
g3839
sg64
(lp3846
S'/Phylografter/default/index'
p3847
asbasbasbag57
(g73
g59
NtRp3848
(dp3849
g62
(dp3850
sg71
g3805
sg64
(lp3851
g57
(g78
g59
NtRp3852
(dp3853
g62
(dp3854
sg71
g3848
sg64
(lp3855
g57
(g58
g59
NtRp3856
(dp3857
g62
(dp3858
g70
I3
ssg71
g3852
sg64
(lp3859
g57
(g66
g59
NtRp3860
(dp3861
g62
(dp3862
g70
I2
ssg71
Nsg64
(lp3863
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3864
(dp3865
g62
(dp3866
sg71
g3789
sg64
(lp3867
g57
(g78
g59
NtRp3868
(dp3869
g62
(dp3870
sg71
g3864
sg64
(lp3871
g57
(g58
g59
NtRp3872
(dp3873
g62
(dp3874
g70
I4
ssg71
g3868
sg64
(lp3875
g57
(g66
g59
NtRp3876
(dp3877
g62
(dp3878
g70
I3
ssg71
Nsg64
(lp3879
g57
(g73
g59
NtRp3880
(dp3881
g62
(dp3882
sg71
g3876
sg64
(lp3883
g57
(g78
g59
NtRp3884
(dp3885
g62
(dp3886
sg71
g3880
sg64
(lp3887
g57
(g58
g59
NtRp3888
(dp3889
g62
(dp3890
g70
I3
ssg71
g3884
sg64
(lp3891
g3821
(S't\x04\x00\x00\x00Taxa'
tRp3892
asbasbasbag57
(g73
g59
NtRp3893
(dp3894
g62
(dp3895
sg71
g3876
sg64
(lp3896
g57
(g78
g59
NtRp3897
(dp3898
g62
(dp3899
sg71
g3893
sg64
(lp3900
g57
(g58
g59
NtRp3901
(dp3902
g62
(dp3903
g70
I3
ssg71
g3897
sg64
(lp3904
g100
asbasbasbag57
(g73
g59
NtRp3905
(dp3906
g62
(dp3907
sg71
g3876
sg64
(lp3908
g57
(g78
g59
NtRp3909
(dp3910
g62
(dp3911
sg71
g3905
sg64
(lp3912
g57
(g58
g59
NtRp3913
(dp3914
g62
(dp3915
g70
I3
ssg71
g3909
sg64
(lp3916
S'/Phylografter/taxon/index'
p3917
asbasbasbag57
(g73
g59
NtRp3918
(dp3919
g62
(dp3920
sg71
g3876
sg64
(lp3921
g57
(g78
g59
NtRp3922
(dp3923
g62
(dp3924
sg71
g3918
sg64
(lp3925
g57
(g58
g59
NtRp3926
(dp3927
g62
(dp3928
g70
I3
ssg71
g3922
sg64
(lp3929
g57
(g66
g59
NtRp3930
(dp3931
g62
(dp3932
g70
I2
ssg71
Nsg64
(lp3933
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3934
(dp3935
g62
(dp3936
sg71
g3789
sg64
(lp3937
g57
(g78
g59
NtRp3938
(dp3939
g62
(dp3940
sg71
g3934
sg64
(lp3941
g57
(g58
g59
NtRp3942
(dp3943
g62
(dp3944
g70
I4
ssg71
g3938
sg64
(lp3945
g57
(g66
g59
NtRp3946
(dp3947
g62
(dp3948
g70
I3
ssg71
Nsg64
(lp3949
g57
(g73
g59
NtRp3950
(dp3951
g62
(dp3952
sg71
g3946
sg64
(lp3953
g57
(g78
g59
NtRp3954
(dp3955
g62
(dp3956
sg71
g3950
sg64
(lp3957
g57
(g58
g59
NtRp3958
(dp3959
g62
(dp3960
g70
I3
ssg71
g3954
sg64
(lp3961
g3821
(S't\x07\x00\x00\x00Studies'
tRp3962
asbasbasbag57
(g73
g59
NtRp3963
(dp3964
g62
(dp3965
sg71
g3946
sg64
(lp3966
g57
(g78
g59
NtRp3967
(dp3968
g62
(dp3969
sg71
g3963
sg64
(lp3970
g57
(g58
g59
NtRp3971
(dp3972
g62
(dp3973
g70
I3
ssg71
g3967
sg64
(lp3974
g100
asbasbasbag57
(g73
g59
NtRp3975
(dp3976
g62
(dp3977
sg71
g3946
sg64
(lp3978
g57
(g78
g59
NtRp3979
(dp3980
g62
(dp3981
sg71
g3975
sg64
(lp3982
g57
(g58
g59
NtRp3983
(dp3984
g62
(dp3985
g70
I3
ssg71
g3979
sg64
(lp3986
S'/Phylografter/study/index'
p3987
asbasbasbag57
(g73
g59
NtRp3988
(dp3989
g62
(dp3990
sg71
g3946
sg64
(lp3991
g57
(g78
g59
NtRp3992
(dp3993
g62
(dp3994
sg71
g3988
sg64
(lp3995
g57
(g58
g59
NtRp3996
(dp3997
g62
(dp3998
g70
I3
ssg71
g3992
sg64
(lp3999
g57
(g66
g59
NtRp4000
(dp4001
g62
(dp4002
g70
I2
ssg71
Nsg64
(lp4003
g57
(g73
g59
NtRp4004
(dp4005
g62
(dp4006
sg71
g4000
sg64
(lp4007
g57
(g78
g59
NtRp4008
(dp4009
g62
(dp4010
sg71
g4004
sg64
(lp4011
g57
(g58
g59
NtRp4012
(dp4013
g62
(dp4014
g70
I2
ssg71
g4008
sg64
(lp4015
g57
(g66
g59
NtRp4016
(dp4017
g62
(dp4018
g70
I1
ssg71
Nsg64
(lp4019
g57
(g73
g59
NtRp4020
(dp4021
g62
(dp4022
sg71
g4016
sg64
(lp4023
g57
(g78
g59
NtRp4024
(dp4025
g62
(dp4026
sg71
g4020
sg64
(lp4027
g57
(g58
g59
NtRp4028
(dp4029
g62
(dp4030
g70
I1
ssg71
g4024
sg64
(lp4031
S'New study'
p4032
asbasbasbag57
(g73
g59
NtRp4033
(dp4034
g62
(dp4035
sg71
g4016
sg64
(lp4036
g57
(g78
g59
NtRp4037
(dp4038
g62
(dp4039
sg71
g4033
sg64
(lp4040
g57
(g58
g59
NtRp4041
(dp4042
g62
(dp4043
g70
I1
ssg71
g4037
sg64
(lp4044
I00
asbasbasbag57
(g73
g59
NtRp4045
(dp4046
g62
(dp4047
sg71
g4016
sg64
(lp4048
g57
(g78
g59
NtRp4049
(dp4050
g62
(dp4051
sg71
g4045
sg64
(lp4052
g57
(g58
g59
NtRp4053
(dp4054
g62
(dp4055
g70
I1
ssg71
g4049
sg64
(lp4056
S'/Phylografter/study/create'
p4057
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4058
(dp4059
g62
(dp4060
sg71
g4000
sg64
(lp4061
g57
(g78
g59
NtRp4062
(dp4063
g62
(dp4064
sg71
g4058
sg64
(lp4065
g57
(g58
g59
NtRp4066
(dp4067
g62
(dp4068
g70
I2
ssg71
g4062
sg64
(lp4069
g57
(g66
g59
NtRp4070
(dp4071
g62
(dp4072
g70
I1
ssg71
Nsg64
(lp4073
g57
(g73
g59
NtRp4074
(dp4075
g62
(dp4076
sg71
g4070
sg64
(lp4077
g57
(g78
g59
NtRp4078
(dp4079
g62
(dp4080
sg71
g4074
sg64
(lp4081
g57
(g58
g59
NtRp4082
(dp4083
g62
(dp4084
g70
I1
ssg71
g4078
sg64
(lp4085
S'Import from TreeBASE'
p4086
asbasbasbag57
(g73
g59
NtRp4087
(dp4088
g62
(dp4089
sg71
g4070
sg64
(lp4090
g57
(g78
g59
NtRp4091
(dp4092
g62
(dp4093
sg71
g4087
sg64
(lp4094
g57
(g58
g59
NtRp4095
(dp4096
g62
(dp4097
g70
I1
ssg71
g4091
sg64
(lp4098
I00
asbasbasbag57
(g73
g59
NtRp4099
(dp4100
g62
(dp4101
sg71
g4070
sg64
(lp4102
g57
(g78
g59
NtRp4103
(dp4104
g62
(dp4105
sg71
g4099
sg64
(lp4106
g57
(g58
g59
NtRp4107
(dp4108
g62
(dp4109
g70
I1
ssg71
g4103
sg64
(lp4110
S'/Phylografter/study/tbimport'
p4111
asbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4112
(dp4113
g62
(dp4114
sg71
g3789
sg64
(lp4115
g57
(g78
g59
NtRp4116
(dp4117
g62
(dp4118
sg71
g4112
sg64
(lp4119
g57
(g58
g59
NtRp4120
(dp4121
g62
(dp4122
g70
I4
ssg71
g4116
sg64
(lp4123
g57
(g66
g59
NtRp4124
(dp4125
g62
(dp4126
g70
I3
ssg71
Nsg64
(lp4127
g57
(g73
g59
NtRp4128
(dp4129
g62
(dp4130
sg71
g4124
sg64
(lp4131
g57
(g78
g59
NtRp4132
(dp4133
g62
(dp4134
sg71
g4128
sg64
(lp4135
g57
(g58
g59
NtRp4136
(dp4137
g62
(dp4138
g70
I3
ssg71
g4132
sg64
(lp4139
g3821
(S's\x0c\x00\x00\x00Source Trees'
tRp4140
asbasbasbag57
(g73
g59
NtRp4141
(dp4142
g62
(dp4143
sg71
g4124
sg64
(lp4144
g57
(g78
g59
NtRp4145
(dp4146
g62
(dp4147
sg71
g4141
sg64
(lp4148
g57
(g58
g59
NtRp4149
(dp4150
g62
(dp4151
g70
I3
ssg71
g4145
sg64
(lp4152
g100
asbasbasbag57
(g73
g59
NtRp4153
(dp4154
g62
(dp4155
sg71
g4124
sg64
(lp4156
g57
(g78
g59
NtRp4157
(dp4158
g62
(dp4159
sg71
g4153
sg64
(lp4160
g57
(g58
g59
NtRp4161
(dp4162
g62
(dp4163
g70
I3
ssg71
g4157
sg64
(lp4164
S'/Phylografter/stree/index'
p4165
asbasbasbag57
(g73
g59
NtRp4166
(dp4167
g62
(dp4168
sg71
g4124
sg64
(lp4169
g57
(g78
g59
NtRp4170
(dp4171
g62
(dp4172
sg71
g4166
sg64
(lp4173
g57
(g58
g59
NtRp4174
(dp4175
g62
(dp4176
g70
I3
ssg71
g4170
sg64
(lp4177
g57
(g66
g59
NtRp4178
(dp4179
g62
(dp4180
g70
I2
ssg71
Nsg64
(lp4181
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4182
(dp4183
g62
(dp4184
sg71
g3789
sg64
(lp4185
g57
(g78
g59
NtRp4186
(dp4187
g62
(dp4188
sg71
g4182
sg64
(lp4189
g57
(g58
g59
NtRp4190
(dp4191
g62
(dp4192
g70
I4
ssg71
g4186
sg64
(lp4193
g57
(g66
g59
NtRp4194
(dp4195
g62
(dp4196
g70
I3
ssg71
Nsg64
(lp4197
g57
(g73
g59
NtRp4198
(dp4199
g62
(dp4200
sg71
g4194
sg64
(lp4201
g57
(g78
g59
NtRp4202
(dp4203
g62
(dp4204
sg71
g4198
sg64
(lp4205
g57
(g58
g59
NtRp4206
(dp4207
g62
(dp4208
g70
I3
ssg71
g4202
sg64
(lp4209
g3821
(S's\r\x00\x00\x00Grafted Trees'
tRp4210
asbasbasbag57
(g73
g59
NtRp4211
(dp4212
g62
(dp4213
sg71
g4194
sg64
(lp4214
g57
(g78
g59
NtRp4215
(dp4216
g62
(dp4217
sg71
g4211
sg64
(lp4218
g57
(g58
g59
NtRp4219
(dp4220
g62
(dp4221
g70
I3
ssg71
g4215
sg64
(lp4222
g100
asbasbasbag57
(g73
g59
NtRp4223
(dp4224
g62
(dp4225
sg71
g4194
sg64
(lp4226
g57
(g78
g59
NtRp4227
(dp4228
g62
(dp4229
sg71
g4223
sg64
(lp4230
g57
(g58
g59
NtRp4231
(dp4232
g62
(dp4233
g70
I3
ssg71
g4227
sg64
(lp4234
S'/Phylografter/gtree/index'
p4235
asbasbasbag57
(g73
g59
NtRp4236
(dp4237
g62
(dp4238
sg71
g4194
sg64
(lp4239
g57
(g78
g59
NtRp4240
(dp4241
g62
(dp4242
sg71
g4236
sg64
(lp4243
g57
(g58
g59
NtRp4244
(dp4245
g62
(dp4246
g70
I3
ssg71
g4240
sg64
(lp4247
g57
(g66
g59
NtRp4248
(dp4249
g62
(dp4250
g70
I2
ssg71
Nsg64
(lp4251
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4252
(dp4253
g62
(dp4254
sg71
g3225
sg64
(lp4255
g57
(g78
g59
NtRp4256
(dp4257
g62
(dp4258
g82
g83
ssg71
g4252
sg64
(lp4259
S'meta'
p4260
asbag57
(g78
g59
NtRp4261
(dp4262
g62
(dp4263
g89
g90
ssg71
g4252
sg64
(lp4264
S':'
asbag57
(g78
g59
NtRp4265
(dp4266
g62
(dp4267
sg71
g4252
sg64
(lp4268
g57
(g58
g59
NtRp4269
(dp4270
g62
(dp4271
g70
I5
ssg71
g4265
sg64
(lp4272
g57
(g66
g59
NtRp4273
(dp4274
g62
(dp4275
g70
I4
ssg71
Nsg64
(lp4276
g57
(g73
g59
NtRp4277
(dp4278
g62
(dp4279
sg71
g4273
sg64
(lp4280
g57
(g78
g59
NtRp4281
(dp4282
g62
(dp4283
g82
g83
ssg71
g4277
sg64
(lp4284
S'author'
p4285
asbag57
(g78
g59
NtRp4286
(dp4287
g62
(dp4288
g89
g90
ssg71
g4277
sg64
(lp4289
S':'
asbag57
(g78
g59
NtRp4290
(dp4291
g62
(dp4292
sg71
g4277
sg64
(lp4293
g57
(g58
g59
NtRp4294
(dp4295
g62
(dp4296
g70
I4
ssg71
g4290
sg64
(lp4297
S'Richard Ree'
p4298
asbasbasbag57
(g73
g59
NtRp4299
(dp4300
g62
(dp4301
sg71
g4273
sg64
(lp4302
g57
(g78
g59
NtRp4303
(dp4304
g62
(dp4305
g82
g83
ssg71
g4299
sg64
(lp4306
S'copyright'
p4307
asbag57
(g78
g59
NtRp4308
(dp4309
g62
(dp4310
g89
g90
ssg71
g4299
sg64
(lp4311
S':'
asbag57
(g78
g59
NtRp4312
(dp4313
g62
(dp4314
sg71
g4299
sg64
(lp4315
g57
(g58
g59
NtRp4316
(dp4317
g62
(dp4318
g70
I4
ssg71
g4312
sg64
(lp4319
S'Copyright 2007-2010'
p4320
asbasbasbag57
(g73
g59
NtRp4321
(dp4322
g62
(dp4323
sg71
g4273
sg64
(lp4324
g57
(g78
g59
NtRp4325
(dp4326
g62
(dp4327
g82
g83
ssg71
g4321
sg64
(lp4328
S'description'
p4329
asbag57
(g78
g59
NtRp4330
(dp4331
g62
(dp4332
g89
g90
ssg71
g4321
sg64
(lp4333
S':'
asbag57
(g78
g59
NtRp4334
(dp4335
g62
(dp4336
sg71
g4321
sg64
(lp4337
g57
(g58
g59
NtRp4338
(dp4339
g62
(dp4340
g70
I4
ssg71
g4334
sg64
(lp4341
S'Phylografter: Angiosperm phylogeny database'
p4342
asbasbasbag57
(g73
g59
NtRp4343
(dp4344
g62
(dp4345
sg71
g4273
sg64
(lp4346
g57
(g78
g59
NtRp4347
(dp4348
g62
(dp4349
g82
g83
ssg71
g4343
sg64
(lp4350
S'generator'
p4351
asbag57
(g78
g59
NtRp4352
(dp4353
g62
(dp4354
g89
g90
ssg71
g4343
sg64
(lp4355
S':'
asbag57
(g78
g59
NtRp4356
(dp4357
g62
(dp4358
sg71
g4343
sg64
(lp4359
g57
(g58
g59
NtRp4360
(dp4361
g62
(dp4362
g70
I4
ssg71
g4356
sg64
(lp4363
S'Web2py Enterprise Framework'
p4364
asbasbasbag57
(g73
g59
NtRp4365
(dp4366
g62
(dp4367
sg71
g4273
sg64
(lp4368
g57
(g78
g59
NtRp4369
(dp4370
g62
(dp4371
g82
g83
ssg71
g4365
sg64
(lp4372
S'keywords'
p4373
asbag57
(g78
g59
NtRp4374
(dp4375
g62
(dp4376
g89
g90
ssg71
g4365
sg64
(lp4377
S':'
asbag57
(g78
g59
NtRp4378
(dp4379
g62
(dp4380
sg71
g4365
sg64
(lp4381
g57
(g58
g59
NtRp4382
(dp4383
g62
(dp4384
g70
I4
ssg71
g4378
sg64
(lp4385
S'flowering plants, phylogeny, web2py, python, framework'
p4386
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4387
(dp4388
g62
(dp4389
sg71
g3225
sg64
(lp4390
g57
(g78
g59
NtRp4391
(dp4392
g62
(dp4393
g82
g83
ssg71
g4387
sg64
(lp4394
S'postprocessing'
p4395
asbag57
(g78
g59
NtRp4396
(dp4397
g62
(dp4398
g89
g90
ssg71
g4387
sg64
(lp4399
S':'
asbag57
(g78
g59
NtRp4400
(dp4401
g62
(dp4402
sg71
g4387
sg64
(lp4403
g57
(g58
g59
NtRp4404
(dp4405
g62
(dp4406
g70
I5
ssg71
g4400
sg64
(lp4407
g57
(g66
g59
NtRp4408
(dp4409
g62
(dp4410
g70
I4
ssg71
Nsg64
(lp4411
sbasbasbasbag57
(g73
g59
NtRp4412
(dp4413
g62
(dp4414
sg71
g3225
sg64
(lp4415
g57
(g78
g59
NtRp4416
(dp4417
g62
(dp4418
g82
g83
ssg71
g4412
sg64
(lp4419
S'session_file'
p4420
asbag57
(g78
g59
NtRp4421
(dp4422
g62
(dp4423
g89
g90
ssg71
g4412
sg64
(lp4424
S':'
asbag57
(g78
g59
NtRp4425
(dp4426
g62
(dp4427
sg71
g4412
sg64
(lp4428
g57
(g58
g59
NtRp4429
(dp4430
g62
(dp4431
g70
I5
ssg71
g4425
sg64
(lp4432
S"<open file 'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556', mode 'rb+' at 0x01B88390>"
p4433
asbasbasbag57
(g73
g59
NtRp4434
(dp4435
g62
(dp4436
sg71
g3225
sg64
(lp4437
g57
(g78
g59
NtRp4438
(dp4439
g62
(dp4440
g82
g83
ssg71
g4434
sg64
(lp4441
S'session_filename'
p4442
asbag57
(g78
g59
NtRp4443
(dp4444
g62
(dp4445
g89
g90
ssg71
g4434
sg64
(lp4446
S':'
asbag57
(g78
g59
NtRp4447
(dp4448
g62
(dp4449
sg71
g4434
sg64
(lp4450
g57
(g58
g59
NtRp4451
(dp4452
g62
(dp4453
g70
I5
ssg71
g4447
sg64
(lp4454
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556'
p4455
asbasbasbag57
(g73
g59
NtRp4456
(dp4457
g62
(dp4458
sg71
g3225
sg64
(lp4459
g57
(g78
g59
NtRp4460
(dp4461
g62
(dp4462
g82
g83
ssg71
g4456
sg64
(lp4463
S'session_id'
p4464
asbag57
(g78
g59
NtRp4465
(dp4466
g62
(dp4467
g89
g90
ssg71
g4456
sg64
(lp4468
S':'
asbag57
(g78
g59
NtRp4469
(dp4470
g62
(dp4471
sg71
g4456
sg64
(lp4472
g57
(g58
g59
NtRp4473
(dp4474
g62
(dp4475
g70
I5
ssg71
g4469
sg64
(lp4476
S'127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556'
p4477
asbasbasbag57
(g73
g59
NtRp4478
(dp4479
g62
(dp4480
sg71
g3225
sg64
(lp4481
g57
(g78
g59
NtRp4482
(dp4483
g62
(dp4484
g82
g83
ssg71
g4478
sg64
(lp4485
S'session_id_name'
p4486
asbag57
(g78
g59
NtRp4487
(dp4488
g62
(dp4489
g89
g90
ssg71
g4478
sg64
(lp4490
S':'
asbag57
(g78
g59
NtRp4491
(dp4492
g62
(dp4493
sg71
g4478
sg64
(lp4494
g57
(g58
g59
NtRp4495
(dp4496
g62
(dp4497
g70
I5
ssg71
g4491
sg64
(lp4498
g3282
asbasbasbag57
(g73
g59
NtRp4499
(dp4500
g62
(dp4501
sg71
g3225
sg64
(lp4502
g57
(g78
g59
NtRp4503
(dp4504
g62
(dp4505
g82
g83
ssg71
g4499
sg64
(lp4506
S'session_locked'
p4507
asbag57
(g78
g59
NtRp4508
(dp4509
g62
(dp4510
g89
g90
ssg71
g4499
sg64
(lp4511
S':'
asbag57
(g78
g59
NtRp4512
(dp4513
g62
(dp4514
sg71
g4499
sg64
(lp4515
g57
(g58
g59
NtRp4516
(dp4517
g62
(dp4518
g70
I5
ssg71
g4512
sg64
(lp4519
g1656
asbasbasbag57
(g73
g59
NtRp4520
(dp4521
g62
(dp4522
sg71
g3225
sg64
(lp4523
g57
(g78
g59
NtRp4524
(dp4525
g62
(dp4526
g82
g83
ssg71
g4520
sg64
(lp4527
S'session_new'
p4528
asbag57
(g78
g59
NtRp4529
(dp4530
g62
(dp4531
g89
g90
ssg71
g4520
sg64
(lp4532
S':'
asbag57
(g78
g59
NtRp4533
(dp4534
g62
(dp4535
sg71
g4520
sg64
(lp4536
g57
(g58
g59
NtRp4537
(dp4538
g62
(dp4539
g70
I5
ssg71
g4533
sg64
(lp4540
g100
asbasbasbag57
(g73
g59
NtRp4541
(dp4542
g62
(dp4543
sg71
g3225
sg64
(lp4544
g57
(g78
g59
NtRp4545
(dp4546
g62
(dp4547
g82
g83
ssg71
g4541
sg64
(lp4548
S'status'
p4549
asbag57
(g78
g59
NtRp4550
(dp4551
g62
(dp4552
g89
g90
ssg71
g4541
sg64
(lp4553
S':'
asbag57
(g78
g59
NtRp4554
(dp4555
g62
(dp4556
sg71
g4541
sg64
(lp4557
g57
(g58
g59
NtRp4558
(dp4559
g62
(dp4560
g70
I5
ssg71
g4554
sg64
(lp4561
S'200'
p4562
asbasbasbag57
(g73
g59
NtRp4563
(dp4564
g62
(dp4565
sg71
g3225
sg64
(lp4566
g57
(g78
g59
NtRp4567
(dp4568
g62
(dp4569
g82
g83
ssg71
g4563
sg64
(lp4570
S'subtitle'
p4571
asbag57
(g78
g59
NtRp4572
(dp4573
g62
(dp4574
g89
g90
ssg71
g4563
sg64
(lp4575
S':'
asbag57
(g78
g59
NtRp4576
(dp4577
g62
(dp4578
sg71
g4563
sg64
(lp4579
g57
(g58
g59
NtRp4580
(dp4581
g62
(dp4582
g70
I5
ssg71
g4576
sg64
(lp4583
S'Source trees'
p4584
asbasbasbag57
(g73
g59
NtRp4585
(dp4586
g62
(dp4587
sg71
g3225
sg64
(lp4588
g57
(g78
g59
NtRp4589
(dp4590
g62
(dp4591
g82
g83
ssg71
g4585
sg64
(lp4592
S'title'
p4593
asbag57
(g78
g59
NtRp4594
(dp4595
g62
(dp4596
g89
g90
ssg71
g4585
sg64
(lp4597
S':'
asbag57
(g78
g59
NtRp4598
(dp4599
g62
(dp4600
sg71
g4585
sg64
(lp4601
g57
(g58
g59
NtRp4602
(dp4603
g62
(dp4604
g70
I5
ssg71
g4598
sg64
(lp4605
g122
asbasbasbag57
(g73
g59
NtRp4606
(dp4607
g62
(dp4608
sg71
g3225
sg64
(lp4609
g57
(g78
g59
NtRp4610
(dp4611
g62
(dp4612
g82
g83
ssg71
g4606
sg64
(lp4613
g2320
asbag57
(g78
g59
NtRp4614
(dp4615
g62
(dp4616
g89
g90
ssg71
g4606
sg64
(lp4617
S':'
asbag57
(g78
g59
NtRp4618
(dp4619
g62
(dp4620
sg71
g4606
sg64
(lp4621
g57
(g58
g59
NtRp4622
(dp4623
g62
(dp4624
g70
I5
ssg71
g4618
sg64
(lp4625
g2333
asbasbasbag57
(g73
g59
NtRp4626
(dp4627
g62
(dp4628
sg71
g3225
sg64
(lp4629
g57
(g78
g59
NtRp4630
(dp4631
g62
(dp4632
g82
g83
ssg71
g4626
sg64
(lp4633
S'view'
p4634
asbag57
(g78
g59
NtRp4635
(dp4636
g62
(dp4637
g89
g90
ssg71
g4626
sg64
(lp4638
S':'
asbag57
(g78
g59
NtRp4639
(dp4640
g62
(dp4641
sg71
g4626
sg64
(lp4642
g57
(g58
g59
NtRp4643
(dp4644
g62
(dp4645
g70
I5
ssg71
g4639
sg64
(lp4646
S'stree/index.html'
p4647
asbasbasbasbasbsS'locals'
p4648
(dp4649
S'study'
p4650
S'238'
p4651
sS'self'
p4652
S'<__restricted__.Virtual object>'
p4653
sS't'
S"<Table {'comment': <gluon.dal.Field object at 0x..., '_id': <gluon.dal.Field object at 0x057A4DF0>}>"
p4654
sssS'traceback'
p4655
S'Traceback (most recent call last):\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 479, in <module>\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\globals.py", line 173, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 77, in index\n    return dict(table=powerTable.create())\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py", line 816, in plugin_powertable\n    PowerTable(),\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py", line 149, in __init__\n    sqlrows.setvirtualfields(virtual=virtualfields)\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\dal.py", line 7728, in setvirtualfields\n    box[attribute]=method()\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 41, in clade\n    return db.study[study].focal_clade.name\nAttributeError: \'NoneType\' object has no attribute \'name\'\n'
p4656
s.