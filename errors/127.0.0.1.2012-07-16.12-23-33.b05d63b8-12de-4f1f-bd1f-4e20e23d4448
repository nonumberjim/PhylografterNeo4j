(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'str' object has no attribute 'name'"
p3
sS'layer'
p4
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'
p5
sS'code'
p6
S'# coding: utf-8\n## tree = local_import("tree", reload=True)\n## build = local_import("build", reload=True)\n## link = local_import("link")\nimport sys\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules\')\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules/ivy\')\nimport tree\nimport build\nimport link\nimport ivy\nimport treeUtil\n## ivy = local_import("ivy")\n\nfrom gluon.storage import Storage\n\nresponse.subtitle = "Source trees"\n\ndef index():\n    t = db.stree\n\n    class Virtual(object):\n        @virtualsettings(label=\'Study\')\n        def study_url(self):\n            study = t[self.stree.id].study\n            u = URL(c="study",f="view",args=[study.id])\n            s = study.citation\n            N = 50\n            if len(s)>N: s = s[:N-3]+" ..."\n            return A(s, _href=u, _title=study.citation)\n\n        @virtualsettings(label=\'Tree\')\n        def tree_url(self):\n            stree = t[self.stree.id]\n            u = URL(c="stree",f="svgView",args=[self.stree.id])\n            return A(stree.type, _href=u)\n\n        @virtualsettings(label=\'Focal Clade\')\n        def clade(self):\n            study = t[self.stree.id].study\n            fc = db.study[study].focal_clade.name\n            name = fc.name if fc else ""\n            return name\n            \n\n        @virtualsettings(label=\'OTUs\')\n        def ntax(self):\n            q = ((db.snode.tree==self.stree.id)&\n                 (db.snode.isleaf==True))\n            return db(q).count()\n\n    powerTable = plugins.powerTable\n    powerTable.datasource = t\n    powerTable.virtualfields = Virtual()\n    powerTable.dtfeatures["sScrollY"] = "100%"\n    powerTable.dtfeatures["sScrollX"] = "100%"\n    #powerTable.virtualfields = Virtual()\n    powerTable.headers = "labels"\n    powerTable.showkeycolumn = False\n    powerTable.dtfeatures["bJQueryUI"] = request.vars.get("jqueryui",True)\n    ## powerTable.uitheme = request.vars.get("theme","cupertino")\n    powerTable.uitheme = request.vars.get("theme","smoothness")\n    powerTable.dtfeatures["iDisplayLength"] = 25\n    powerTable.dtfeatures["aaSorting"] = [[6,\'desc\']]\n    powerTable.dtfeatures["sPaginationType"] = request.vars.get(\n        "pager","full_numbers"\n        ) # two_button scrolling\n    powerTable.columns = ["stree.id",\n                          "virtual.clade",\n                          "virtual.study_url",\n                          "virtual.tree_url",\n                          "virtual.ntax",\n                          ## "stree.contributor",\n                          "stree.uploaded"]\n    powerTable.hiddencolumns = ["stree.type"]\n\n    ## details = dict(detailscallback=URL(c="stree",f="details"))\n    powerTable.extra = dict(autoresize=True)\n   \n    return dict(table=powerTable.create())\n\ndef details():\n    return DIV()\n\ndef delete():\n    i = int(request.args(0) or 0)\n    rec = db.stree(i)\n    assert rec\n    db(db.snode.tree==i).delete()\n    rec.delete_record()\n\ndef _lookup_taxa(nodes):\n    def f(x):\n        try: float(x.label or "x"); return False\n        except: return True\n    v = [ (n.label or "").replace("_", " ") for n in filter(f, nodes) ]\n    t = db.taxon\n    rows = db(t.name.belongs(v)).select(t.name, t.id)\n    return dict([ (x.name, x.id) for x in rows ])\n\ndef _study_otus(study):\n    q = ((db.otu.study==db.study.id)&(db.study.id==study))\n    return db(q).select(db.otu.ALL)\n\ndef _insert_stree(study, data):\n    """\n    given form submission data, insert a source tree\n    """\n    root = ivy.tree.read(data.newick)\n    assert root, data.newick\n    ivy.tree.index(root)\n    nodes = list(root)\n    lab2tax = _lookup_taxa(nodes)\n    lab2otu = dict([ (x.label, x) for x in _study_otus(study) ])\n    stree = db.stree.insert(**data)\n    db.stree[stree].update_record(study=study)\n    i2n = {}\n    for n in nodes:\n        label = (n.label or "").replace("_", " ")\n        taxid = lab2tax.get(label)\n        otu = None\n        if n.isleaf:\n            otu = lab2otu.get(label)\n            if otu and otu.taxon: taxid = otu.taxon\n            if not otu:\n                otu = db.otu.insert(study=study, label=label, taxon=taxid)\n\n        i = db.snode.insert(label=n.label, isleaf=n.isleaf, otu=otu,\n                            next=n.next, back=n.back, depth=n.depth,\n                            length=n.length, tree=stree, taxon=taxid,\n                            pruned=False)\n        n.id = i\n        i2n[i] = n\n    ##     n.rec = Storage(taxon=taxid)\n\n    ## node2anc, node2desc = link.suggest(db, root)\n    ## for n, s in node2anc.items():\n    ##     if s:\n    ##         taxid = sorted(s)[-1][1]\n    ##         db.snode[n.id].update_record(taxon=taxid)\n\n    t = db.snode\n    if data.clade_labels_represent == "bootstrap values":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        if n2sup:\n            m = max(n2sup.values())\n            if 1 <= m <= 101:\n                for n, sup in n2sup.items(): n2sup[n] = sup/100.\n            for n, sup in n2sup.items():\n                t[n.id].update_record(bootstrap_support=sup, label=None)\n\n    elif data.clade_labels_represent == "posterior support":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        for n, sup in n2sup.items():\n            t[n.id].update_record(posterior_support=sup, label=None)\n                \n    for n in nodes:\n        if n.parent:\n            t[n.id].update_record(parent=n.parent.id)\n        n.label = str(n.id)\n        n.length = None\n    db.stree[stree].update_record(newick_idstr=root.write())\n    return stree\n\n#@auth.requires_membership(\'contributor\')\n@auth.requires_login()\ndef create():\n    study = db.study(request.args(0)) or redirect(URL("index"))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    \n    fields = ["study", "contributor", "newick",\n              "author_contributed",\n              "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    form = SQLFORM(db.stree, fields=fields)\n    form.vars.study=int(study)\n\n    name = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    form.vars.contributor = name\n    ## form.vars.newick = "(a,(b,((c,d),(e,f))));"\n    ## form.vars.comment = "test test"\n    ## base = "/home/rree/Dropbox/phylografter/private/Jansen-2007-PNAS/"\n    ## form.vars.newick = file(base+"Jansen_2007.newick").read()\n    ## form.vars.comment = "RAxML bootstrap tree; re-analysis of published data"\n    ## form.vars.type = "RAxML 7.2.6 bootstrap"\n    \n    treestr = ""\n    if form.accepts(request.vars, session, dbio=False):\n        response.flash ="accepted"\n        session.contributor = form.vars.contributor\n        i = _insert_stree(study, form.vars)\n        redirect(URL("v", args=[i]))\n\n    return dict(form=form)\n    \ndef edit():\n    rec = db.stree(request.args(0))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[v])\n        return A(_study_rep(db.study(v)), _href=u)\n    db.stree.study.widget = w\n    response.subtitle = "Edit source tree %s" % rec.id\n    fields = ["study", "contributor", "newick", "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    readonly = not auth.has_membership(role="contributor")\n    form = SQLFORM(db.stree, int(rec), fields=fields, showid=False,\n                   deletable=False, submit_button="Update record",\n                   readonly=readonly)\n    form.vars.study = rec.id\n    if form.accepts(request.vars, session):\n        response.flash = "record updated"\n    return dict(form=form)\n\ndef view():\n    return dict()\n\ndef sunburst():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef d3():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\n\ndef svgView():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef editOTUs():\n    response.title = \'Edit OTUs\'\n    return dict()\n\ndef getNodeInfo():\n    i = int(request.vars.nodeId)\n    node = db.snode[i]\n    color = "black"\n    label = node.label or "[%s]" % node.id\n    if node.taxon:\n        label = node.taxon.name\n        color = "green"\n    return {\'nodeId\': node.id, \'label\': label, \'labelcolor\': color}\n\ndef v():\n    rec = db.stree(request.args(0) or 0)\n    study = db.study(rec.study)\n    u = URL(c="study",f="view",args=[study.id])\n    study = A(_study_rep(study), _href=u, _target="_blank")\n    wscale = float(request.vars.wscale or 0.9)\n    wider = wscale+0.1; narrower = max(0.1, wscale-0.1)\n    wider = A("wider", _href=URL(args=request.args,\n                                 vars=dict(wscale="%0.1f" % wider)))\n    narrower = A("narrower", _href=URL(args=request.args,\n                                       vars=dict(wscale="%0.1f" % narrower)))\n    \n    treeurl = URL(c=\'stree\',f=\'treediv\',args=request.args,vars=request.vars)\n    return dict(treeurl=treeurl, wider=wider, narrower=narrower, study=study)\n\ndef load_html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n    return dict(tree=div)\n\ndef treediv():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    wscale = float(request.vars.wscale or 0.9)\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f,\n                                          wscale=wscale)\n    return div.xml()\n\ndef html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n\n    modal = PluginMModal(id="mymodal", title="Edit node properties", content="")\n    mid = modal.id; cid = "c"+mid\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return "hbranch_clicked(%s, \'%s\', \'%s\', \'%s\');" % (nid, u, mid, cid)\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n\n    return dict(tree=div, root=root, modal=modal, w=w, h=h)\n\n\ndef modalTreeObj():\n    return dict( tree = build.stree( db, request.args[0] ) )\n\n\ndef suggest():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    \n@auth.requires_membership(\'contributor\')\ndef import_cached_nexml():\n    key = "uploaded_nexml_%s" % auth.user.id\n    contributor = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    ## nexml = cache.ram(key, lambda:None, time_expire=10000)\n    nexml = cache.ram(key, lambda:None, time_expire=10000)\n    if not nexml:\n        session.flash = "Please upload the Nexml file again"\n        redirect(URL(\'study\',\'tbimport\'))\n    cache.ram(key, lambda:nexml, time_expire=10000)\n    get = lambda x: nexml.meta.get(x) or None\n    treebase_id = int(get(\'tb:identifier.study\'))\n    study = db(db.study.treebase_id==treebase_id).select().first()\n    if not study:\n        session.flash = \'Study record needed!\'\n        redirect(URL(\'study\',\'tbimport2\'))\n    d = dict([ (x.attrib.id, x) for x in nexml.trees ])\n    t = d.get(request.args(0))\n    if not t:\n        session.flash = \'Cannot find tree in cache\'\n        redirect(URL(\'study\',\'tbimport2\'))\n\n    ivy.tree.index(t.root)\n\n    for n in t.root.leaves():\n        if not n.otu.otu:\n            session.flash = \'Leaf node %s lacks OTU record\' % (n.label or n.id)\n            redirect(URL(\'study\',\'tbimport2\'))\n\n    ## for leaf in t.root.leaves():\n    ##     print leaf.__dict__\n    ## for k, v in nexml.otus.items():\n    ##     print v\n\n    #print t.root.write()\n    ## print t.attrib\n    \n    sdata = dict(study=study.id,\n                 contributor=contributor,\n                 newick=t.root.write().replace(" ", "_"),\n                 author_contributed=True,\n                 tb_tree_id=t.attrib.id,\n                 type=t.attrib.label)\n\n    for k,v in sdata.items():\n        db.stree[k].default=v\n\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    db.stree.uploaded.readable=False\n    form = SQLFORM(db.stree)\n    if form.accepts(request.vars, session):\n\n        bootstraps = {}\n        if form.vars.clade_labels_represent == "bootstrap values":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "bootstrap values":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.length = None\n\n        if bootstraps:\n            m = max(bootstraps.values())\n            if 1 <= m <= 101:\n                for n, sup in bootstraps.items():\n                    bootstraps[n] = sup/100.\n\n        posteriors = {}\n        if form.vars.clade_labels_represent == "posterior support":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: posteriors[n] = float(n.label)\n                except ValueError: pass\n            for n in posteriors:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "posterior support":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                posteriors[n] = n.length\n            for n in posteriors:\n                n.length = None\n\n        for d in filter(None, (bootstraps, posteriors)):\n            m = max(d.values())\n            if 1 <= m <= 101:\n                for n, sup in d.items():\n                    d[n] = sup/100.\n\n        i2n = {}\n        for n in t.root.iternodes():\n            taxid = None\n            label = n.otu.otu.label if n.isleaf and n.otu.otu else n.label\n            if n.isleaf and n.otu.otu and n.otu.otu.taxon:\n                taxid = n.otu.otu.taxon\n            else:\n                taxon = db(db.taxon.name==label).select().first()\n                if taxon: taxid=taxon.id\n\n            i = db.snode.insert(label=label,\n                                isleaf=n.isleaf,\n                                otu=n.otu.otu.id if n.isleaf and n.otu else None,\n                                next=n.next, back=n.back, depth=n.depth,\n                                length=n.length,\n                                bootstrap_support=bootstraps.get(n),\n                                posterior_support=posteriors.get(n),\n                                tree=form.vars.id,\n                                taxon=taxid,\n                                pruned=False)\n            n.id = i\n            i2n[i] = n\n\n        for n in t.root.iternodes():\n            if n.parent:\n                db.snode[n.id].update_record(parent=n.parent.id)\n            n.label = str(n.id)\n            n.length = None\n        db.stree[form.vars.id].update_record(newick_idstr=t.root.write())\n\n        session.flash = \'tree %s inserted\' % t.attrib.id\n        redirect(URL(\'study\',\'tbimport_trees\'))\n\n    return dict(study=study, tree=t, form=form)\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'str\' object has no attribute \'name\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'str' object has no attribute 'name'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'Phylografter'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
sbasbasbasbag57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g67
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
g82
g83
ssg71
g147
sg64
(lp154
S'body'
p155
asbag57
(g78
g59
NtRp156
(dp157
g62
(dp158
g89
g90
ssg71
g147
sg64
(lp159
S':'
asbag57
(g78
g59
NtRp160
(dp161
g62
(dp162
sg71
g147
sg64
(lp163
g57
(g58
g59
NtRp164
(dp165
g62
(dp166
g70
I5
ssg71
g160
sg64
(lp167
S'<cStringIO.StringO object at 0x06406460>'
p168
asbasbasbag57
(g73
g59
NtRp169
(dp170
g62
(dp171
sg71
g67
sg64
(lp172
g57
(g78
g59
NtRp173
(dp174
g62
(dp175
g82
g83
ssg71
g169
sg64
(lp176
S'client'
p177
asbag57
(g78
g59
NtRp178
(dp179
g62
(dp180
g89
g90
ssg71
g169
sg64
(lp181
S':'
asbag57
(g78
g59
NtRp182
(dp183
g62
(dp184
sg71
g169
sg64
(lp185
g57
(g58
g59
NtRp186
(dp187
g62
(dp188
g70
I5
ssg71
g182
sg64
(lp189
S'127.0.0.1'
p190
asbasbasbag57
(g73
g59
NtRp191
(dp192
g62
(dp193
sg71
g67
sg64
(lp194
g57
(g78
g59
NtRp195
(dp196
g62
(dp197
g82
g83
ssg71
g191
sg64
(lp198
S'controller'
p199
asbag57
(g78
g59
NtRp200
(dp201
g62
(dp202
g89
g90
ssg71
g191
sg64
(lp203
S':'
asbag57
(g78
g59
NtRp204
(dp205
g62
(dp206
sg71
g191
sg64
(lp207
g57
(g58
g59
NtRp208
(dp209
g62
(dp210
g70
I5
ssg71
g204
sg64
(lp211
S'stree'
p212
asbasbasbag57
(g73
g59
NtRp213
(dp214
g62
(dp215
sg71
g67
sg64
(lp216
g57
(g78
g59
NtRp217
(dp218
g62
(dp219
g82
g83
ssg71
g213
sg64
(lp220
S'cookies'
p221
asbag57
(g78
g59
NtRp222
(dp223
g62
(dp224
g89
g90
ssg71
g213
sg64
(lp225
S':'
asbag57
(g78
g59
NtRp226
(dp227
g62
(dp228
sg71
g213
sg64
(lp229
g57
(g58
g59
NtRp230
(dp231
g62
(dp232
g70
I5
ssg71
g226
sg64
(lp233
g57
(g66
g59
NtRp234
(dp235
g62
(dp236
g70
I4
ssg71
Nsg64
(lp237
g57
(g73
g59
NtRp238
(dp239
g62
(dp240
sg71
g234
sg64
(lp241
g57
(g78
g59
NtRp242
(dp243
g62
(dp244
g82
g83
ssg71
g238
sg64
(lp245
S'session_id_admin'
p246
asbag57
(g78
g59
NtRp247
(dp248
g62
(dp249
g89
g90
ssg71
g238
sg64
(lp250
S':'
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
sg71
g238
sg64
(lp254
g57
(g58
g59
NtRp255
(dp256
g62
(dp257
g70
I4
ssg71
g251
sg64
(lp258
g57
(g66
g59
NtRp259
(dp260
g62
(dp261
g70
I3
ssg71
Nsg64
(lp262
g57
(g73
g59
NtRp263
(dp264
g62
(dp265
sg71
g259
sg64
(lp266
g57
(g78
g59
NtRp267
(dp268
g62
(dp269
g82
g83
ssg71
g263
sg64
(lp270
S'comment'
p271
asbag57
(g78
g59
NtRp272
(dp273
g62
(dp274
g89
g90
ssg71
g263
sg64
(lp275
S':'
asbag57
(g78
g59
NtRp276
(dp277
g62
(dp278
sg71
g263
sg64
(lp279
g57
(g58
g59
NtRp280
(dp281
g62
(dp282
g70
I3
ssg71
g276
sg64
(lp283
S''
asbasbasbag57
(g73
g59
NtRp284
(dp285
g62
(dp286
sg71
g259
sg64
(lp287
g57
(g78
g59
NtRp288
(dp289
g62
(dp290
g82
g83
ssg71
g284
sg64
(lp291
S'domain'
p292
asbag57
(g78
g59
NtRp293
(dp294
g62
(dp295
g89
g90
ssg71
g284
sg64
(lp296
S':'
asbag57
(g78
g59
NtRp297
(dp298
g62
(dp299
sg71
g284
sg64
(lp300
g57
(g58
g59
NtRp301
(dp302
g62
(dp303
g70
I3
ssg71
g297
sg64
(lp304
S''
asbasbasbag57
(g73
g59
NtRp305
(dp306
g62
(dp307
sg71
g259
sg64
(lp308
g57
(g78
g59
NtRp309
(dp310
g62
(dp311
g82
g83
ssg71
g305
sg64
(lp312
S'expires'
p313
asbag57
(g78
g59
NtRp314
(dp315
g62
(dp316
g89
g90
ssg71
g305
sg64
(lp317
S':'
asbag57
(g78
g59
NtRp318
(dp319
g62
(dp320
sg71
g305
sg64
(lp321
g57
(g58
g59
NtRp322
(dp323
g62
(dp324
g70
I3
ssg71
g318
sg64
(lp325
S''
asbasbasbag57
(g73
g59
NtRp326
(dp327
g62
(dp328
sg71
g259
sg64
(lp329
g57
(g78
g59
NtRp330
(dp331
g62
(dp332
g82
g83
ssg71
g326
sg64
(lp333
S'httponly'
p334
asbag57
(g78
g59
NtRp335
(dp336
g62
(dp337
g89
g90
ssg71
g326
sg64
(lp338
S':'
asbag57
(g78
g59
NtRp339
(dp340
g62
(dp341
sg71
g326
sg64
(lp342
g57
(g58
g59
NtRp343
(dp344
g62
(dp345
g70
I3
ssg71
g339
sg64
(lp346
S''
asbasbasbag57
(g73
g59
NtRp347
(dp348
g62
(dp349
sg71
g259
sg64
(lp350
g57
(g78
g59
NtRp351
(dp352
g62
(dp353
g82
g83
ssg71
g347
sg64
(lp354
S'max-age'
p355
asbag57
(g78
g59
NtRp356
(dp357
g62
(dp358
g89
g90
ssg71
g347
sg64
(lp359
S':'
asbag57
(g78
g59
NtRp360
(dp361
g62
(dp362
sg71
g347
sg64
(lp363
g57
(g58
g59
NtRp364
(dp365
g62
(dp366
g70
I3
ssg71
g360
sg64
(lp367
S''
asbasbasbag57
(g73
g59
NtRp368
(dp369
g62
(dp370
sg71
g259
sg64
(lp371
g57
(g78
g59
NtRp372
(dp373
g62
(dp374
g82
g83
ssg71
g368
sg64
(lp375
S'path'
p376
asbag57
(g78
g59
NtRp377
(dp378
g62
(dp379
g89
g90
ssg71
g368
sg64
(lp380
S':'
asbag57
(g78
g59
NtRp381
(dp382
g62
(dp383
sg71
g368
sg64
(lp384
g57
(g58
g59
NtRp385
(dp386
g62
(dp387
g70
I3
ssg71
g381
sg64
(lp388
S''
asbasbasbag57
(g73
g59
NtRp389
(dp390
g62
(dp391
sg71
g259
sg64
(lp392
g57
(g78
g59
NtRp393
(dp394
g62
(dp395
g82
g83
ssg71
g389
sg64
(lp396
S'secure'
p397
asbag57
(g78
g59
NtRp398
(dp399
g62
(dp400
g89
g90
ssg71
g389
sg64
(lp401
S':'
asbag57
(g78
g59
NtRp402
(dp403
g62
(dp404
sg71
g389
sg64
(lp405
g57
(g58
g59
NtRp406
(dp407
g62
(dp408
g70
I3
ssg71
g402
sg64
(lp409
S''
asbasbasbag57
(g73
g59
NtRp410
(dp411
g62
(dp412
sg71
g259
sg64
(lp413
g57
(g78
g59
NtRp414
(dp415
g62
(dp416
g82
g83
ssg71
g410
sg64
(lp417
S'version'
p418
asbag57
(g78
g59
NtRp419
(dp420
g62
(dp421
g89
g90
ssg71
g410
sg64
(lp422
S':'
asbag57
(g78
g59
NtRp423
(dp424
g62
(dp425
sg71
g410
sg64
(lp426
g57
(g58
g59
NtRp427
(dp428
g62
(dp429
g70
I3
ssg71
g423
sg64
(lp430
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp431
(dp432
g62
(dp433
sg71
g234
sg64
(lp434
g57
(g78
g59
NtRp435
(dp436
g62
(dp437
g82
g83
ssg71
g431
sg64
(lp438
S'session_id_phylografter'
p439
asbag57
(g78
g59
NtRp440
(dp441
g62
(dp442
g89
g90
ssg71
g431
sg64
(lp443
S':'
asbag57
(g78
g59
NtRp444
(dp445
g62
(dp446
sg71
g431
sg64
(lp447
g57
(g58
g59
NtRp448
(dp449
g62
(dp450
g70
I4
ssg71
g444
sg64
(lp451
g57
(g66
g59
NtRp452
(dp453
g62
(dp454
g70
I3
ssg71
Nsg64
(lp455
g57
(g73
g59
NtRp456
(dp457
g62
(dp458
sg71
g452
sg64
(lp459
g57
(g78
g59
NtRp460
(dp461
g62
(dp462
g82
g83
ssg71
g456
sg64
(lp463
g271
asbag57
(g78
g59
NtRp464
(dp465
g62
(dp466
g89
g90
ssg71
g456
sg64
(lp467
S':'
asbag57
(g78
g59
NtRp468
(dp469
g62
(dp470
sg71
g456
sg64
(lp471
g57
(g58
g59
NtRp472
(dp473
g62
(dp474
g70
I3
ssg71
g468
sg64
(lp475
S''
asbasbasbag57
(g73
g59
NtRp476
(dp477
g62
(dp478
sg71
g452
sg64
(lp479
g57
(g78
g59
NtRp480
(dp481
g62
(dp482
g82
g83
ssg71
g476
sg64
(lp483
g292
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g476
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g476
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g452
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
g313
asbag57
(g78
g59
NtRp504
(dp505
g62
(dp506
g89
g90
ssg71
g496
sg64
(lp507
S':'
asbag57
(g78
g59
NtRp508
(dp509
g62
(dp510
sg71
g496
sg64
(lp511
g57
(g58
g59
NtRp512
(dp513
g62
(dp514
g70
I3
ssg71
g508
sg64
(lp515
S''
asbasbasbag57
(g73
g59
NtRp516
(dp517
g62
(dp518
sg71
g452
sg64
(lp519
g57
(g78
g59
NtRp520
(dp521
g62
(dp522
g82
g83
ssg71
g516
sg64
(lp523
g334
asbag57
(g78
g59
NtRp524
(dp525
g62
(dp526
g89
g90
ssg71
g516
sg64
(lp527
S':'
asbag57
(g78
g59
NtRp528
(dp529
g62
(dp530
sg71
g516
sg64
(lp531
g57
(g58
g59
NtRp532
(dp533
g62
(dp534
g70
I3
ssg71
g528
sg64
(lp535
S''
asbasbasbag57
(g73
g59
NtRp536
(dp537
g62
(dp538
sg71
g452
sg64
(lp539
g57
(g78
g59
NtRp540
(dp541
g62
(dp542
g82
g83
ssg71
g536
sg64
(lp543
g355
asbag57
(g78
g59
NtRp544
(dp545
g62
(dp546
g89
g90
ssg71
g536
sg64
(lp547
S':'
asbag57
(g78
g59
NtRp548
(dp549
g62
(dp550
sg71
g536
sg64
(lp551
g57
(g58
g59
NtRp552
(dp553
g62
(dp554
g70
I3
ssg71
g548
sg64
(lp555
S''
asbasbasbag57
(g73
g59
NtRp556
(dp557
g62
(dp558
sg71
g452
sg64
(lp559
g57
(g78
g59
NtRp560
(dp561
g62
(dp562
g82
g83
ssg71
g556
sg64
(lp563
g376
asbag57
(g78
g59
NtRp564
(dp565
g62
(dp566
g89
g90
ssg71
g556
sg64
(lp567
S':'
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
sg71
g556
sg64
(lp571
g57
(g58
g59
NtRp572
(dp573
g62
(dp574
g70
I3
ssg71
g568
sg64
(lp575
S''
asbasbasbag57
(g73
g59
NtRp576
(dp577
g62
(dp578
sg71
g452
sg64
(lp579
g57
(g78
g59
NtRp580
(dp581
g62
(dp582
g82
g83
ssg71
g576
sg64
(lp583
g397
asbag57
(g78
g59
NtRp584
(dp585
g62
(dp586
g89
g90
ssg71
g576
sg64
(lp587
S':'
asbag57
(g78
g59
NtRp588
(dp589
g62
(dp590
sg71
g576
sg64
(lp591
g57
(g58
g59
NtRp592
(dp593
g62
(dp594
g70
I3
ssg71
g588
sg64
(lp595
S''
asbasbasbag57
(g73
g59
NtRp596
(dp597
g62
(dp598
sg71
g452
sg64
(lp599
g57
(g78
g59
NtRp600
(dp601
g62
(dp602
g82
g83
ssg71
g596
sg64
(lp603
g418
asbag57
(g78
g59
NtRp604
(dp605
g62
(dp606
g89
g90
ssg71
g596
sg64
(lp607
S':'
asbag57
(g78
g59
NtRp608
(dp609
g62
(dp610
sg71
g596
sg64
(lp611
g57
(g58
g59
NtRp612
(dp613
g62
(dp614
g70
I3
ssg71
g608
sg64
(lp615
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp616
(dp617
g62
(dp618
sg71
g234
sg64
(lp619
g57
(g78
g59
NtRp620
(dp621
g62
(dp622
g82
g83
ssg71
g616
sg64
(lp623
S'session_id_welcome'
p624
asbag57
(g78
g59
NtRp625
(dp626
g62
(dp627
g89
g90
ssg71
g616
sg64
(lp628
S':'
asbag57
(g78
g59
NtRp629
(dp630
g62
(dp631
sg71
g616
sg64
(lp632
g57
(g58
g59
NtRp633
(dp634
g62
(dp635
g70
I4
ssg71
g629
sg64
(lp636
g57
(g66
g59
NtRp637
(dp638
g62
(dp639
g70
I3
ssg71
Nsg64
(lp640
g57
(g73
g59
NtRp641
(dp642
g62
(dp643
sg71
g637
sg64
(lp644
g57
(g78
g59
NtRp645
(dp646
g62
(dp647
g82
g83
ssg71
g641
sg64
(lp648
g271
asbag57
(g78
g59
NtRp649
(dp650
g62
(dp651
g89
g90
ssg71
g641
sg64
(lp652
S':'
asbag57
(g78
g59
NtRp653
(dp654
g62
(dp655
sg71
g641
sg64
(lp656
g57
(g58
g59
NtRp657
(dp658
g62
(dp659
g70
I3
ssg71
g653
sg64
(lp660
S''
asbasbasbag57
(g73
g59
NtRp661
(dp662
g62
(dp663
sg71
g637
sg64
(lp664
g57
(g78
g59
NtRp665
(dp666
g62
(dp667
g82
g83
ssg71
g661
sg64
(lp668
g292
asbag57
(g78
g59
NtRp669
(dp670
g62
(dp671
g89
g90
ssg71
g661
sg64
(lp672
S':'
asbag57
(g78
g59
NtRp673
(dp674
g62
(dp675
sg71
g661
sg64
(lp676
g57
(g58
g59
NtRp677
(dp678
g62
(dp679
g70
I3
ssg71
g673
sg64
(lp680
S''
asbasbasbag57
(g73
g59
NtRp681
(dp682
g62
(dp683
sg71
g637
sg64
(lp684
g57
(g78
g59
NtRp685
(dp686
g62
(dp687
g82
g83
ssg71
g681
sg64
(lp688
g313
asbag57
(g78
g59
NtRp689
(dp690
g62
(dp691
g89
g90
ssg71
g681
sg64
(lp692
S':'
asbag57
(g78
g59
NtRp693
(dp694
g62
(dp695
sg71
g681
sg64
(lp696
g57
(g58
g59
NtRp697
(dp698
g62
(dp699
g70
I3
ssg71
g693
sg64
(lp700
S''
asbasbasbag57
(g73
g59
NtRp701
(dp702
g62
(dp703
sg71
g637
sg64
(lp704
g57
(g78
g59
NtRp705
(dp706
g62
(dp707
g82
g83
ssg71
g701
sg64
(lp708
g334
asbag57
(g78
g59
NtRp709
(dp710
g62
(dp711
g89
g90
ssg71
g701
sg64
(lp712
S':'
asbag57
(g78
g59
NtRp713
(dp714
g62
(dp715
sg71
g701
sg64
(lp716
g57
(g58
g59
NtRp717
(dp718
g62
(dp719
g70
I3
ssg71
g713
sg64
(lp720
S''
asbasbasbag57
(g73
g59
NtRp721
(dp722
g62
(dp723
sg71
g637
sg64
(lp724
g57
(g78
g59
NtRp725
(dp726
g62
(dp727
g82
g83
ssg71
g721
sg64
(lp728
g355
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
g89
g90
ssg71
g721
sg64
(lp732
S':'
asbag57
(g78
g59
NtRp733
(dp734
g62
(dp735
sg71
g721
sg64
(lp736
g57
(g58
g59
NtRp737
(dp738
g62
(dp739
g70
I3
ssg71
g733
sg64
(lp740
S''
asbasbasbag57
(g73
g59
NtRp741
(dp742
g62
(dp743
sg71
g637
sg64
(lp744
g57
(g78
g59
NtRp745
(dp746
g62
(dp747
g82
g83
ssg71
g741
sg64
(lp748
g376
asbag57
(g78
g59
NtRp749
(dp750
g62
(dp751
g89
g90
ssg71
g741
sg64
(lp752
S':'
asbag57
(g78
g59
NtRp753
(dp754
g62
(dp755
sg71
g741
sg64
(lp756
g57
(g58
g59
NtRp757
(dp758
g62
(dp759
g70
I3
ssg71
g753
sg64
(lp760
S''
asbasbasbag57
(g73
g59
NtRp761
(dp762
g62
(dp763
sg71
g637
sg64
(lp764
g57
(g78
g59
NtRp765
(dp766
g62
(dp767
g82
g83
ssg71
g761
sg64
(lp768
g397
asbag57
(g78
g59
NtRp769
(dp770
g62
(dp771
g89
g90
ssg71
g761
sg64
(lp772
S':'
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
sg71
g761
sg64
(lp776
g57
(g58
g59
NtRp777
(dp778
g62
(dp779
g70
I3
ssg71
g773
sg64
(lp780
S''
asbasbasbag57
(g73
g59
NtRp781
(dp782
g62
(dp783
sg71
g637
sg64
(lp784
g57
(g78
g59
NtRp785
(dp786
g62
(dp787
g82
g83
ssg71
g781
sg64
(lp788
g418
asbag57
(g78
g59
NtRp789
(dp790
g62
(dp791
g89
g90
ssg71
g781
sg64
(lp792
S':'
asbag57
(g78
g59
NtRp793
(dp794
g62
(dp795
sg71
g781
sg64
(lp796
g57
(g58
g59
NtRp797
(dp798
g62
(dp799
g70
I3
ssg71
g793
sg64
(lp800
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp801
(dp802
g62
(dp803
sg71
g67
sg64
(lp804
g57
(g78
g59
NtRp805
(dp806
g62
(dp807
g82
g83
ssg71
g801
sg64
(lp808
S'env'
p809
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
g89
g90
ssg71
g801
sg64
(lp813
S':'
asbag57
(g78
g59
NtRp814
(dp815
g62
(dp816
sg71
g801
sg64
(lp817
g57
(g58
g59
NtRp818
(dp819
g62
(dp820
g70
I5
ssg71
g814
sg64
(lp821
g57
(g66
g59
NtRp822
(dp823
g62
(dp824
g70
I4
ssg71
Nsg64
(lp825
g57
(g73
g59
NtRp826
(dp827
g62
(dp828
sg71
g822
sg64
(lp829
g57
(g78
g59
NtRp830
(dp831
g62
(dp832
g82
g83
ssg71
g826
sg64
(lp833
S'app_folders'
p834
asbag57
(g78
g59
NtRp835
(dp836
g62
(dp837
g89
g90
ssg71
g826
sg64
(lp838
S':'
asbag57
(g78
g59
NtRp839
(dp840
g62
(dp841
sg71
g826
sg64
(lp842
g57
(g58
g59
NtRp843
(dp844
g62
(dp845
g70
I4
ssg71
g839
sg64
(lp846
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p847
asbasbasbag57
(g73
g59
NtRp848
(dp849
g62
(dp850
sg71
g822
sg64
(lp851
g57
(g78
g59
NtRp852
(dp853
g62
(dp854
g82
g83
ssg71
g848
sg64
(lp855
S'applications_parent'
p856
asbag57
(g78
g59
NtRp857
(dp858
g62
(dp859
g89
g90
ssg71
g848
sg64
(lp860
S':'
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
sg71
g848
sg64
(lp864
g57
(g58
g59
NtRp865
(dp866
g62
(dp867
g70
I4
ssg71
g861
sg64
(lp868
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p869
asbasbasbag57
(g73
g59
NtRp870
(dp871
g62
(dp872
sg71
g822
sg64
(lp873
g57
(g78
g59
NtRp874
(dp875
g62
(dp876
g82
g83
ssg71
g870
sg64
(lp877
S'cmd_args'
p878
asbag57
(g78
g59
NtRp879
(dp880
g62
(dp881
g89
g90
ssg71
g870
sg64
(lp882
S':'
asbag57
(g78
g59
NtRp883
(dp884
g62
(dp885
sg71
g870
sg64
(lp886
g57
(g58
g59
NtRp887
(dp888
g62
(dp889
g70
I4
ssg71
g883
sg64
(lp890
g57
(g66
g59
NtRp891
(dp892
g62
(dp893
g70
I3
ssg71
Nsg64
(lp894
sbasbasbasbag57
(g73
g59
NtRp895
(dp896
g62
(dp897
sg71
g822
sg64
(lp898
g57
(g78
g59
NtRp899
(dp900
g62
(dp901
g82
g83
ssg71
g895
sg64
(lp902
S'cmd_options'
p903
asbag57
(g78
g59
NtRp904
(dp905
g62
(dp906
g89
g90
ssg71
g895
sg64
(lp907
S':'
asbag57
(g78
g59
NtRp908
(dp909
g62
(dp910
sg71
g895
sg64
(lp911
g57
(g58
g59
NtRp912
(dp913
g62
(dp914
g70
I4
ssg71
g908
sg64
(lp915
S"<Values at 0x174ff08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p916
asbasbasbag57
(g73
g59
NtRp917
(dp918
g62
(dp919
sg71
g822
sg64
(lp920
g57
(g78
g59
NtRp921
(dp922
g62
(dp923
g82
g83
ssg71
g917
sg64
(lp924
S'db_sessions'
p925
asbag57
(g78
g59
NtRp926
(dp927
g62
(dp928
g89
g90
ssg71
g917
sg64
(lp929
S':'
asbag57
(g78
g59
NtRp930
(dp931
g62
(dp932
sg71
g917
sg64
(lp933
g57
(g58
g59
NtRp934
(dp935
g62
(dp936
g70
I4
ssg71
g930
sg64
(lp937
S'set([])'
p938
asbasbasbag57
(g73
g59
NtRp939
(dp940
g62
(dp941
sg71
g822
sg64
(lp942
g57
(g78
g59
NtRp943
(dp944
g62
(dp945
g82
g83
ssg71
g939
sg64
(lp946
S'debugging'
p947
asbag57
(g78
g59
NtRp948
(dp949
g62
(dp950
g89
g90
ssg71
g939
sg64
(lp951
S':'
asbag57
(g78
g59
NtRp952
(dp953
g62
(dp954
sg71
g939
sg64
(lp955
g57
(g58
g59
NtRp956
(dp957
g62
(dp958
g70
I4
ssg71
g952
sg64
(lp959
g100
asbasbasbag57
(g73
g59
NtRp960
(dp961
g62
(dp962
sg71
g822
sg64
(lp963
g57
(g78
g59
NtRp964
(dp965
g62
(dp966
g82
g83
ssg71
g960
sg64
(lp967
S'gluon_parent'
p968
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
g89
g90
ssg71
g960
sg64
(lp972
S':'
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
sg71
g960
sg64
(lp976
g57
(g58
g59
NtRp977
(dp978
g62
(dp979
g70
I4
ssg71
g973
sg64
(lp980
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p981
asbasbasbag57
(g73
g59
NtRp982
(dp983
g62
(dp984
sg71
g822
sg64
(lp985
g57
(g78
g59
NtRp986
(dp987
g62
(dp988
g82
g83
ssg71
g982
sg64
(lp989
S'http_accept'
p990
asbag57
(g78
g59
NtRp991
(dp992
g62
(dp993
g89
g90
ssg71
g982
sg64
(lp994
S':'
asbag57
(g78
g59
NtRp995
(dp996
g62
(dp997
sg71
g982
sg64
(lp998
g57
(g58
g59
NtRp999
(dp1000
g62
(dp1001
g70
I4
ssg71
g995
sg64
(lp1002
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1003
asbasbasbag57
(g73
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g822
sg64
(lp1007
g57
(g78
g59
NtRp1008
(dp1009
g62
(dp1010
g82
g83
ssg71
g1004
sg64
(lp1011
S'http_accept_encoding'
p1012
asbag57
(g78
g59
NtRp1013
(dp1014
g62
(dp1015
g89
g90
ssg71
g1004
sg64
(lp1016
S':'
asbag57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
sg71
g1004
sg64
(lp1020
g57
(g58
g59
NtRp1021
(dp1022
g62
(dp1023
g70
I4
ssg71
g1017
sg64
(lp1024
S'gzip, deflate'
p1025
asbasbasbag57
(g73
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g822
sg64
(lp1029
g57
(g78
g59
NtRp1030
(dp1031
g62
(dp1032
g82
g83
ssg71
g1026
sg64
(lp1033
S'http_accept_language'
p1034
asbag57
(g78
g59
NtRp1035
(dp1036
g62
(dp1037
g89
g90
ssg71
g1026
sg64
(lp1038
S':'
asbag57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
sg71
g1026
sg64
(lp1042
g57
(g58
g59
NtRp1043
(dp1044
g62
(dp1045
g70
I4
ssg71
g1039
sg64
(lp1046
S'en-us,en;q=0.5'
p1047
asbasbasbag57
(g73
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g822
sg64
(lp1051
g57
(g78
g59
NtRp1052
(dp1053
g62
(dp1054
g82
g83
ssg71
g1048
sg64
(lp1055
S'http_cache_control'
p1056
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
g89
g90
ssg71
g1048
sg64
(lp1060
S':'
asbag57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
sg71
g1048
sg64
(lp1064
g57
(g58
g59
NtRp1065
(dp1066
g62
(dp1067
g70
I4
ssg71
g1061
sg64
(lp1068
S'max-age=0'
p1069
asbasbasbag57
(g73
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g822
sg64
(lp1073
g57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g82
g83
ssg71
g1070
sg64
(lp1077
S'http_connection'
p1078
asbag57
(g78
g59
NtRp1079
(dp1080
g62
(dp1081
g89
g90
ssg71
g1070
sg64
(lp1082
S':'
asbag57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
sg71
g1070
sg64
(lp1086
g57
(g58
g59
NtRp1087
(dp1088
g62
(dp1089
g70
I4
ssg71
g1083
sg64
(lp1090
S'keep-alive'
p1091
asbasbasbag57
(g73
g59
NtRp1092
(dp1093
g62
(dp1094
sg71
g822
sg64
(lp1095
g57
(g78
g59
NtRp1096
(dp1097
g62
(dp1098
g82
g83
ssg71
g1092
sg64
(lp1099
S'http_cookie'
p1100
asbag57
(g78
g59
NtRp1101
(dp1102
g62
(dp1103
g89
g90
ssg71
g1092
sg64
(lp1104
S':'
asbag57
(g78
g59
NtRp1105
(dp1106
g62
(dp1107
sg71
g1092
sg64
(lp1108
g57
(g58
g59
NtRp1109
(dp1110
g62
(dp1111
g70
I4
ssg71
g1105
sg64
(lp1112
S'session_id_welcome=127.0.0.1-03e8ba98-09de-4e57-a983-2a9c7940a543; session_id_admin=127.0.0.1-d1e053c4-55fb-4d35-aef7-6cc9b063bde3; session_id_phylografter=127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556'
p1113
asbasbasbag57
(g73
g59
NtRp1114
(dp1115
g62
(dp1116
sg71
g822
sg64
(lp1117
g57
(g78
g59
NtRp1118
(dp1119
g62
(dp1120
g82
g83
ssg71
g1114
sg64
(lp1121
S'http_host'
p1122
asbag57
(g78
g59
NtRp1123
(dp1124
g62
(dp1125
g89
g90
ssg71
g1114
sg64
(lp1126
S':'
asbag57
(g78
g59
NtRp1127
(dp1128
g62
(dp1129
sg71
g1114
sg64
(lp1130
g57
(g58
g59
NtRp1131
(dp1132
g62
(dp1133
g70
I4
ssg71
g1127
sg64
(lp1134
S'127.0.0.1:8000'
p1135
asbasbasbag57
(g73
g59
NtRp1136
(dp1137
g62
(dp1138
sg71
g822
sg64
(lp1139
g57
(g78
g59
NtRp1140
(dp1141
g62
(dp1142
g82
g83
ssg71
g1136
sg64
(lp1143
S'http_user_agent'
p1144
asbag57
(g78
g59
NtRp1145
(dp1146
g62
(dp1147
g89
g90
ssg71
g1136
sg64
(lp1148
S':'
asbag57
(g78
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1136
sg64
(lp1152
g57
(g58
g59
NtRp1153
(dp1154
g62
(dp1155
g70
I4
ssg71
g1149
sg64
(lp1156
S'Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1'
p1157
asbasbasbag57
(g73
g59
NtRp1158
(dp1159
g62
(dp1160
sg71
g822
sg64
(lp1161
g57
(g78
g59
NtRp1162
(dp1163
g62
(dp1164
g82
g83
ssg71
g1158
sg64
(lp1165
S'is_jython'
p1166
asbag57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
g89
g90
ssg71
g1158
sg64
(lp1170
S':'
asbag57
(g78
g59
NtRp1171
(dp1172
g62
(dp1173
sg71
g1158
sg64
(lp1174
g57
(g58
g59
NtRp1175
(dp1176
g62
(dp1177
g70
I4
ssg71
g1171
sg64
(lp1178
g100
asbasbasbag57
(g73
g59
NtRp1179
(dp1180
g62
(dp1181
sg71
g822
sg64
(lp1182
g57
(g78
g59
NtRp1183
(dp1184
g62
(dp1185
g82
g83
ssg71
g1179
sg64
(lp1186
S'is_pypy'
p1187
asbag57
(g78
g59
NtRp1188
(dp1189
g62
(dp1190
g89
g90
ssg71
g1179
sg64
(lp1191
S':'
asbag57
(g78
g59
NtRp1192
(dp1193
g62
(dp1194
sg71
g1179
sg64
(lp1195
g57
(g58
g59
NtRp1196
(dp1197
g62
(dp1198
g70
I4
ssg71
g1192
sg64
(lp1199
g100
asbasbasbag57
(g73
g59
NtRp1200
(dp1201
g62
(dp1202
sg71
g822
sg64
(lp1203
g57
(g78
g59
NtRp1204
(dp1205
g62
(dp1206
g82
g83
ssg71
g1200
sg64
(lp1207
S'path_info'
p1208
asbag57
(g78
g59
NtRp1209
(dp1210
g62
(dp1211
g89
g90
ssg71
g1200
sg64
(lp1212
S':'
asbag57
(g78
g59
NtRp1213
(dp1214
g62
(dp1215
sg71
g1200
sg64
(lp1216
g57
(g58
g59
NtRp1217
(dp1218
g62
(dp1219
g70
I4
ssg71
g1213
sg64
(lp1220
S'/Phylografter/stree/index'
p1221
asbasbasbag57
(g73
g59
NtRp1222
(dp1223
g62
(dp1224
sg71
g822
sg64
(lp1225
g57
(g78
g59
NtRp1226
(dp1227
g62
(dp1228
g82
g83
ssg71
g1222
sg64
(lp1229
S'query_string'
p1230
asbag57
(g78
g59
NtRp1231
(dp1232
g62
(dp1233
g89
g90
ssg71
g1222
sg64
(lp1234
S':'
asbag57
(g78
g59
NtRp1235
(dp1236
g62
(dp1237
sg71
g1222
sg64
(lp1238
g57
(g58
g59
NtRp1239
(dp1240
g62
(dp1241
g70
I4
ssg71
g1235
sg64
(lp1242
S''
asbasbasbag57
(g73
g59
NtRp1243
(dp1244
g62
(dp1245
sg71
g822
sg64
(lp1246
g57
(g78
g59
NtRp1247
(dp1248
g62
(dp1249
g82
g83
ssg71
g1243
sg64
(lp1250
S'remote_addr'
p1251
asbag57
(g78
g59
NtRp1252
(dp1253
g62
(dp1254
g89
g90
ssg71
g1243
sg64
(lp1255
S':'
asbag57
(g78
g59
NtRp1256
(dp1257
g62
(dp1258
sg71
g1243
sg64
(lp1259
g57
(g58
g59
NtRp1260
(dp1261
g62
(dp1262
g70
I4
ssg71
g1256
sg64
(lp1263
g190
asbasbasbag57
(g73
g59
NtRp1264
(dp1265
g62
(dp1266
sg71
g822
sg64
(lp1267
g57
(g78
g59
NtRp1268
(dp1269
g62
(dp1270
g82
g83
ssg71
g1264
sg64
(lp1271
S'remote_port'
p1272
asbag57
(g78
g59
NtRp1273
(dp1274
g62
(dp1275
g89
g90
ssg71
g1264
sg64
(lp1276
S':'
asbag57
(g78
g59
NtRp1277
(dp1278
g62
(dp1279
sg71
g1264
sg64
(lp1280
g57
(g58
g59
NtRp1281
(dp1282
g62
(dp1283
g70
I4
ssg71
g1277
sg64
(lp1284
S'3787'
p1285
asbasbasbag57
(g73
g59
NtRp1286
(dp1287
g62
(dp1288
sg71
g822
sg64
(lp1289
g57
(g78
g59
NtRp1290
(dp1291
g62
(dp1292
g82
g83
ssg71
g1286
sg64
(lp1293
S'request_method'
p1294
asbag57
(g78
g59
NtRp1295
(dp1296
g62
(dp1297
g89
g90
ssg71
g1286
sg64
(lp1298
S':'
asbag57
(g78
g59
NtRp1299
(dp1300
g62
(dp1301
sg71
g1286
sg64
(lp1302
g57
(g58
g59
NtRp1303
(dp1304
g62
(dp1305
g70
I4
ssg71
g1299
sg64
(lp1306
S'GET'
p1307
asbasbasbag57
(g73
g59
NtRp1308
(dp1309
g62
(dp1310
sg71
g822
sg64
(lp1311
g57
(g78
g59
NtRp1312
(dp1313
g62
(dp1314
g82
g83
ssg71
g1308
sg64
(lp1315
S'script_name'
p1316
asbag57
(g78
g59
NtRp1317
(dp1318
g62
(dp1319
g89
g90
ssg71
g1308
sg64
(lp1320
S':'
asbag57
(g78
g59
NtRp1321
(dp1322
g62
(dp1323
sg71
g1308
sg64
(lp1324
g57
(g58
g59
NtRp1325
(dp1326
g62
(dp1327
g70
I4
ssg71
g1321
sg64
(lp1328
S''
asbasbasbag57
(g73
g59
NtRp1329
(dp1330
g62
(dp1331
sg71
g822
sg64
(lp1332
g57
(g78
g59
NtRp1333
(dp1334
g62
(dp1335
g82
g83
ssg71
g1329
sg64
(lp1336
S'server_name'
p1337
asbag57
(g78
g59
NtRp1338
(dp1339
g62
(dp1340
g89
g90
ssg71
g1329
sg64
(lp1341
S':'
asbag57
(g78
g59
NtRp1342
(dp1343
g62
(dp1344
sg71
g1329
sg64
(lp1345
g57
(g58
g59
NtRp1346
(dp1347
g62
(dp1348
g70
I4
ssg71
g1342
sg64
(lp1349
S'fm-biosync-int1'
p1350
asbasbasbag57
(g73
g59
NtRp1351
(dp1352
g62
(dp1353
sg71
g822
sg64
(lp1354
g57
(g78
g59
NtRp1355
(dp1356
g62
(dp1357
g82
g83
ssg71
g1351
sg64
(lp1358
S'server_port'
p1359
asbag57
(g78
g59
NtRp1360
(dp1361
g62
(dp1362
g89
g90
ssg71
g1351
sg64
(lp1363
S':'
asbag57
(g78
g59
NtRp1364
(dp1365
g62
(dp1366
sg71
g1351
sg64
(lp1367
g57
(g58
g59
NtRp1368
(dp1369
g62
(dp1370
g70
I4
ssg71
g1364
sg64
(lp1371
S'8000'
p1372
asbasbasbag57
(g73
g59
NtRp1373
(dp1374
g62
(dp1375
sg71
g822
sg64
(lp1376
g57
(g78
g59
NtRp1377
(dp1378
g62
(dp1379
g82
g83
ssg71
g1373
sg64
(lp1380
S'server_protocol'
p1381
asbag57
(g78
g59
NtRp1382
(dp1383
g62
(dp1384
g89
g90
ssg71
g1373
sg64
(lp1385
S':'
asbag57
(g78
g59
NtRp1386
(dp1387
g62
(dp1388
sg71
g1373
sg64
(lp1389
g57
(g58
g59
NtRp1390
(dp1391
g62
(dp1392
g70
I4
ssg71
g1386
sg64
(lp1393
S'HTTP/1.1'
p1394
asbasbasbag57
(g73
g59
NtRp1395
(dp1396
g62
(dp1397
sg71
g822
sg64
(lp1398
g57
(g78
g59
NtRp1399
(dp1400
g62
(dp1401
g82
g83
ssg71
g1395
sg64
(lp1402
S'server_software'
p1403
asbag57
(g78
g59
NtRp1404
(dp1405
g62
(dp1406
g89
g90
ssg71
g1395
sg64
(lp1407
S':'
asbag57
(g78
g59
NtRp1408
(dp1409
g62
(dp1410
sg71
g1395
sg64
(lp1411
g57
(g58
g59
NtRp1412
(dp1413
g62
(dp1414
g70
I4
ssg71
g1408
sg64
(lp1415
S'Rocket 1.2.4'
p1416
asbasbasbag57
(g73
g59
NtRp1417
(dp1418
g62
(dp1419
sg71
g822
sg64
(lp1420
g57
(g78
g59
NtRp1421
(dp1422
g62
(dp1423
g82
g83
ssg71
g1417
sg64
(lp1424
S'web2py_crontype'
p1425
asbag57
(g78
g59
NtRp1426
(dp1427
g62
(dp1428
g89
g90
ssg71
g1417
sg64
(lp1429
S':'
asbag57
(g78
g59
NtRp1430
(dp1431
g62
(dp1432
sg71
g1417
sg64
(lp1433
g57
(g58
g59
NtRp1434
(dp1435
g62
(dp1436
g70
I4
ssg71
g1430
sg64
(lp1437
S'hard'
p1438
asbasbasbag57
(g73
g59
NtRp1439
(dp1440
g62
(dp1441
sg71
g822
sg64
(lp1442
g57
(g78
g59
NtRp1443
(dp1444
g62
(dp1445
g82
g83
ssg71
g1439
sg64
(lp1446
S'web2py_path'
p1447
asbag57
(g78
g59
NtRp1448
(dp1449
g62
(dp1450
g89
g90
ssg71
g1439
sg64
(lp1451
S':'
asbag57
(g78
g59
NtRp1452
(dp1453
g62
(dp1454
sg71
g1439
sg64
(lp1455
g57
(g58
g59
NtRp1456
(dp1457
g62
(dp1458
g70
I4
ssg71
g1452
sg64
(lp1459
g869
asbasbasbag57
(g73
g59
NtRp1460
(dp1461
g62
(dp1462
sg71
g822
sg64
(lp1463
g57
(g78
g59
NtRp1464
(dp1465
g62
(dp1466
g82
g83
ssg71
g1460
sg64
(lp1467
S'web2py_version'
p1468
asbag57
(g78
g59
NtRp1469
(dp1470
g62
(dp1471
g89
g90
ssg71
g1460
sg64
(lp1472
S':'
asbag57
(g78
g59
NtRp1473
(dp1474
g62
(dp1475
sg71
g1460
sg64
(lp1476
g57
(g58
g59
NtRp1477
(dp1478
g62
(dp1479
g70
I4
ssg71
g1473
sg64
(lp1480
g57
(g66
g59
NtRp1481
(dp1482
g62
(dp1483
g70
I3
ssg71
Nsg64
(lp1484
g57
(g73
g59
NtRp1485
(dp1486
g62
(dp1487
sg71
g1481
sg64
(lp1488
g57
(g78
g59
NtRp1489
(dp1490
g62
(dp1491
sg71
g1485
sg64
(lp1492
g57
(g58
g59
NtRp1493
(dp1494
g62
(dp1495
g70
I3
ssg71
g1489
sg64
(lp1496
S'1'
asbasbasbag57
(g73
g59
NtRp1497
(dp1498
g62
(dp1499
sg71
g1481
sg64
(lp1500
g57
(g78
g59
NtRp1501
(dp1502
g62
(dp1503
sg71
g1497
sg64
(lp1504
g57
(g58
g59
NtRp1505
(dp1506
g62
(dp1507
g70
I3
ssg71
g1501
sg64
(lp1508
S'99'
p1509
asbasbasbag57
(g73
g59
NtRp1510
(dp1511
g62
(dp1512
sg71
g1481
sg64
(lp1513
g57
(g78
g59
NtRp1514
(dp1515
g62
(dp1516
sg71
g1510
sg64
(lp1517
g57
(g58
g59
NtRp1518
(dp1519
g62
(dp1520
g70
I3
ssg71
g1514
sg64
(lp1521
S'7'
asbasbasbag57
(g73
g59
NtRp1522
(dp1523
g62
(dp1524
sg71
g1481
sg64
(lp1525
g57
(g78
g59
NtRp1526
(dp1527
g62
(dp1528
sg71
g1522
sg64
(lp1529
g57
(g58
g59
NtRp1530
(dp1531
g62
(dp1532
g70
I3
ssg71
g1526
sg64
(lp1533
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1534
asbasbasbag57
(g73
g59
NtRp1535
(dp1536
g62
(dp1537
sg71
g1481
sg64
(lp1538
g57
(g78
g59
NtRp1539
(dp1540
g62
(dp1541
sg71
g1535
sg64
(lp1542
g57
(g58
g59
NtRp1543
(dp1544
g62
(dp1545
g70
I3
ssg71
g1539
sg64
(lp1546
S'stable'
p1547
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1548
(dp1549
g62
(dp1550
sg71
g822
sg64
(lp1551
g57
(g78
g59
NtRp1552
(dp1553
g62
(dp1554
g82
g83
ssg71
g1548
sg64
(lp1555
S'wsgi_errors'
p1556
asbag57
(g78
g59
NtRp1557
(dp1558
g62
(dp1559
g89
g90
ssg71
g1548
sg64
(lp1560
S':'
asbag57
(g78
g59
NtRp1561
(dp1562
g62
(dp1563
sg71
g1548
sg64
(lp1564
g57
(g58
g59
NtRp1565
(dp1566
g62
(dp1567
g70
I4
ssg71
g1561
sg64
(lp1568
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p1569
asbasbasbag57
(g73
g59
NtRp1570
(dp1571
g62
(dp1572
sg71
g822
sg64
(lp1573
g57
(g78
g59
NtRp1574
(dp1575
g62
(dp1576
g82
g83
ssg71
g1570
sg64
(lp1577
S'wsgi_file_wrapper'
p1578
asbag57
(g78
g59
NtRp1579
(dp1580
g62
(dp1581
g89
g90
ssg71
g1570
sg64
(lp1582
S':'
asbag57
(g78
g59
NtRp1583
(dp1584
g62
(dp1585
sg71
g1570
sg64
(lp1586
g57
(g58
g59
NtRp1587
(dp1588
g62
(dp1589
g70
I4
ssg71
g1583
sg64
(lp1590
S'<class wsgiref.util.FileWrapper at 0x01649DF8>'
p1591
asbasbasbag57
(g73
g59
NtRp1592
(dp1593
g62
(dp1594
sg71
g822
sg64
(lp1595
g57
(g78
g59
NtRp1596
(dp1597
g62
(dp1598
g82
g83
ssg71
g1592
sg64
(lp1599
S'wsgi_input'
p1600
asbag57
(g78
g59
NtRp1601
(dp1602
g62
(dp1603
g89
g90
ssg71
g1592
sg64
(lp1604
S':'
asbag57
(g78
g59
NtRp1605
(dp1606
g62
(dp1607
sg71
g1592
sg64
(lp1608
g57
(g58
g59
NtRp1609
(dp1610
g62
(dp1611
g70
I4
ssg71
g1605
sg64
(lp1612
S'<socket._fileobject object at 0x065F6330>'
p1613
asbasbasbag57
(g73
g59
NtRp1614
(dp1615
g62
(dp1616
sg71
g822
sg64
(lp1617
g57
(g78
g59
NtRp1618
(dp1619
g62
(dp1620
g82
g83
ssg71
g1614
sg64
(lp1621
S'wsgi_multiprocess'
p1622
asbag57
(g78
g59
NtRp1623
(dp1624
g62
(dp1625
g89
g90
ssg71
g1614
sg64
(lp1626
S':'
asbag57
(g78
g59
NtRp1627
(dp1628
g62
(dp1629
sg71
g1614
sg64
(lp1630
g57
(g58
g59
NtRp1631
(dp1632
g62
(dp1633
g70
I4
ssg71
g1627
sg64
(lp1634
g100
asbasbasbag57
(g73
g59
NtRp1635
(dp1636
g62
(dp1637
sg71
g822
sg64
(lp1638
g57
(g78
g59
NtRp1639
(dp1640
g62
(dp1641
g82
g83
ssg71
g1635
sg64
(lp1642
S'wsgi_multithread'
p1643
asbag57
(g78
g59
NtRp1644
(dp1645
g62
(dp1646
g89
g90
ssg71
g1635
sg64
(lp1647
S':'
asbag57
(g78
g59
NtRp1648
(dp1649
g62
(dp1650
sg71
g1635
sg64
(lp1651
g57
(g58
g59
NtRp1652
(dp1653
g62
(dp1654
g70
I4
ssg71
g1648
sg64
(lp1655
S'True'
p1656
asbasbasbag57
(g73
g59
NtRp1657
(dp1658
g62
(dp1659
sg71
g822
sg64
(lp1660
g57
(g78
g59
NtRp1661
(dp1662
g62
(dp1663
g82
g83
ssg71
g1657
sg64
(lp1664
S'wsgi_run_once'
p1665
asbag57
(g78
g59
NtRp1666
(dp1667
g62
(dp1668
g89
g90
ssg71
g1657
sg64
(lp1669
S':'
asbag57
(g78
g59
NtRp1670
(dp1671
g62
(dp1672
sg71
g1657
sg64
(lp1673
g57
(g58
g59
NtRp1674
(dp1675
g62
(dp1676
g70
I4
ssg71
g1670
sg64
(lp1677
g100
asbasbasbag57
(g73
g59
NtRp1678
(dp1679
g62
(dp1680
sg71
g822
sg64
(lp1681
g57
(g78
g59
NtRp1682
(dp1683
g62
(dp1684
g82
g83
ssg71
g1678
sg64
(lp1685
S'wsgi_url_scheme'
p1686
asbag57
(g78
g59
NtRp1687
(dp1688
g62
(dp1689
g89
g90
ssg71
g1678
sg64
(lp1690
S':'
asbag57
(g78
g59
NtRp1691
(dp1692
g62
(dp1693
sg71
g1678
sg64
(lp1694
g57
(g58
g59
NtRp1695
(dp1696
g62
(dp1697
g70
I4
ssg71
g1691
sg64
(lp1698
S'http'
p1699
asbasbasbag57
(g73
g59
NtRp1700
(dp1701
g62
(dp1702
sg71
g822
sg64
(lp1703
g57
(g78
g59
NtRp1704
(dp1705
g62
(dp1706
g82
g83
ssg71
g1700
sg64
(lp1707
S'wsgi_version'
p1708
asbag57
(g78
g59
NtRp1709
(dp1710
g62
(dp1711
g89
g90
ssg71
g1700
sg64
(lp1712
S':'
asbag57
(g78
g59
NtRp1713
(dp1714
g62
(dp1715
sg71
g1700
sg64
(lp1716
g57
(g58
g59
NtRp1717
(dp1718
g62
(dp1719
g70
I4
ssg71
g1713
sg64
(lp1720
g57
(g66
g59
NtRp1721
(dp1722
g62
(dp1723
g70
I3
ssg71
Nsg64
(lp1724
g57
(g73
g59
NtRp1725
(dp1726
g62
(dp1727
sg71
g1721
sg64
(lp1728
g57
(g78
g59
NtRp1729
(dp1730
g62
(dp1731
sg71
g1725
sg64
(lp1732
g57
(g58
g59
NtRp1733
(dp1734
g62
(dp1735
g70
I3
ssg71
g1729
sg64
(lp1736
S'1'
asbasbasbag57
(g73
g59
NtRp1737
(dp1738
g62
(dp1739
sg71
g1721
sg64
(lp1740
g57
(g78
g59
NtRp1741
(dp1742
g62
(dp1743
sg71
g1737
sg64
(lp1744
g57
(g58
g59
NtRp1745
(dp1746
g62
(dp1747
g70
I3
ssg71
g1741
sg64
(lp1748
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1749
(dp1750
g62
(dp1751
sg71
g67
sg64
(lp1752
g57
(g78
g59
NtRp1753
(dp1754
g62
(dp1755
g82
g83
ssg71
g1749
sg64
(lp1756
S'extension'
p1757
asbag57
(g78
g59
NtRp1758
(dp1759
g62
(dp1760
g89
g90
ssg71
g1749
sg64
(lp1761
S':'
asbag57
(g78
g59
NtRp1762
(dp1763
g62
(dp1764
sg71
g1749
sg64
(lp1765
g57
(g58
g59
NtRp1766
(dp1767
g62
(dp1768
g70
I5
ssg71
g1762
sg64
(lp1769
S'html'
p1770
asbasbasbag57
(g73
g59
NtRp1771
(dp1772
g62
(dp1773
sg71
g67
sg64
(lp1774
g57
(g78
g59
NtRp1775
(dp1776
g62
(dp1777
g82
g83
ssg71
g1771
sg64
(lp1778
S'folder'
p1779
asbag57
(g78
g59
NtRp1780
(dp1781
g62
(dp1782
g89
g90
ssg71
g1771
sg64
(lp1783
S':'
asbag57
(g78
g59
NtRp1784
(dp1785
g62
(dp1786
sg71
g1771
sg64
(lp1787
g57
(g58
g59
NtRp1788
(dp1789
g62
(dp1790
g70
I5
ssg71
g1784
sg64
(lp1791
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\'
p1792
asbasbasbag57
(g73
g59
NtRp1793
(dp1794
g62
(dp1795
sg71
g67
sg64
(lp1796
g57
(g78
g59
NtRp1797
(dp1798
g62
(dp1799
g82
g83
ssg71
g1793
sg64
(lp1800
S'function'
p1801
asbag57
(g78
g59
NtRp1802
(dp1803
g62
(dp1804
g89
g90
ssg71
g1793
sg64
(lp1805
S':'
asbag57
(g78
g59
NtRp1806
(dp1807
g62
(dp1808
sg71
g1793
sg64
(lp1809
g57
(g58
g59
NtRp1810
(dp1811
g62
(dp1812
g70
I5
ssg71
g1806
sg64
(lp1813
S'index'
p1814
asbasbasbag57
(g73
g59
NtRp1815
(dp1816
g62
(dp1817
sg71
g67
sg64
(lp1818
g57
(g78
g59
NtRp1819
(dp1820
g62
(dp1821
g82
g83
ssg71
g1815
sg64
(lp1822
S'get_vars'
p1823
asbag57
(g78
g59
NtRp1824
(dp1825
g62
(dp1826
g89
g90
ssg71
g1815
sg64
(lp1827
S':'
asbag57
(g78
g59
NtRp1828
(dp1829
g62
(dp1830
sg71
g1815
sg64
(lp1831
g57
(g58
g59
NtRp1832
(dp1833
g62
(dp1834
g70
I5
ssg71
g1828
sg64
(lp1835
g57
(g66
g59
NtRp1836
(dp1837
g62
(dp1838
g70
I4
ssg71
Nsg64
(lp1839
sbasbasbasbag57
(g73
g59
NtRp1840
(dp1841
g62
(dp1842
sg71
g67
sg64
(lp1843
g57
(g78
g59
NtRp1844
(dp1845
g62
(dp1846
g82
g83
ssg71
g1840
sg64
(lp1847
S'global_settings'
p1848
asbag57
(g78
g59
NtRp1849
(dp1850
g62
(dp1851
g89
g90
ssg71
g1840
sg64
(lp1852
S':'
asbag57
(g78
g59
NtRp1853
(dp1854
g62
(dp1855
sg71
g1840
sg64
(lp1856
g57
(g58
g59
NtRp1857
(dp1858
g62
(dp1859
g70
I5
ssg71
g1853
sg64
(lp1860
g57
(g66
g59
NtRp1861
(dp1862
g62
(dp1863
g70
I4
ssg71
Nsg64
(lp1864
g57
(g73
g59
NtRp1865
(dp1866
g62
(dp1867
sg71
g1861
sg64
(lp1868
g57
(g78
g59
NtRp1869
(dp1870
g62
(dp1871
g82
g83
ssg71
g1865
sg64
(lp1872
g834
asbag57
(g78
g59
NtRp1873
(dp1874
g62
(dp1875
g89
g90
ssg71
g1865
sg64
(lp1876
S':'
asbag57
(g78
g59
NtRp1877
(dp1878
g62
(dp1879
sg71
g1865
sg64
(lp1880
g57
(g58
g59
NtRp1881
(dp1882
g62
(dp1883
g70
I4
ssg71
g1877
sg64
(lp1884
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p1885
asbasbasbag57
(g73
g59
NtRp1886
(dp1887
g62
(dp1888
sg71
g1861
sg64
(lp1889
g57
(g78
g59
NtRp1890
(dp1891
g62
(dp1892
g82
g83
ssg71
g1886
sg64
(lp1893
g856
asbag57
(g78
g59
NtRp1894
(dp1895
g62
(dp1896
g89
g90
ssg71
g1886
sg64
(lp1897
S':'
asbag57
(g78
g59
NtRp1898
(dp1899
g62
(dp1900
sg71
g1886
sg64
(lp1901
g57
(g58
g59
NtRp1902
(dp1903
g62
(dp1904
g70
I4
ssg71
g1898
sg64
(lp1905
g869
asbasbasbag57
(g73
g59
NtRp1906
(dp1907
g62
(dp1908
sg71
g1861
sg64
(lp1909
g57
(g78
g59
NtRp1910
(dp1911
g62
(dp1912
g82
g83
ssg71
g1906
sg64
(lp1913
g878
asbag57
(g78
g59
NtRp1914
(dp1915
g62
(dp1916
g89
g90
ssg71
g1906
sg64
(lp1917
S':'
asbag57
(g78
g59
NtRp1918
(dp1919
g62
(dp1920
sg71
g1906
sg64
(lp1921
g57
(g58
g59
NtRp1922
(dp1923
g62
(dp1924
g70
I4
ssg71
g1918
sg64
(lp1925
g57
(g66
g59
NtRp1926
(dp1927
g62
(dp1928
g70
I3
ssg71
Nsg64
(lp1929
sbasbasbasbag57
(g73
g59
NtRp1930
(dp1931
g62
(dp1932
sg71
g1861
sg64
(lp1933
g57
(g78
g59
NtRp1934
(dp1935
g62
(dp1936
g82
g83
ssg71
g1930
sg64
(lp1937
g903
asbag57
(g78
g59
NtRp1938
(dp1939
g62
(dp1940
g89
g90
ssg71
g1930
sg64
(lp1941
S':'
asbag57
(g78
g59
NtRp1942
(dp1943
g62
(dp1944
sg71
g1930
sg64
(lp1945
g57
(g58
g59
NtRp1946
(dp1947
g62
(dp1948
g70
I4
ssg71
g1942
sg64
(lp1949
S"<Values at 0x174ff08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1950
asbasbasbag57
(g73
g59
NtRp1951
(dp1952
g62
(dp1953
sg71
g1861
sg64
(lp1954
g57
(g78
g59
NtRp1955
(dp1956
g62
(dp1957
g82
g83
ssg71
g1951
sg64
(lp1958
g925
asbag57
(g78
g59
NtRp1959
(dp1960
g62
(dp1961
g89
g90
ssg71
g1951
sg64
(lp1962
S':'
asbag57
(g78
g59
NtRp1963
(dp1964
g62
(dp1965
sg71
g1951
sg64
(lp1966
g57
(g58
g59
NtRp1967
(dp1968
g62
(dp1969
g70
I4
ssg71
g1963
sg64
(lp1970
S'set([])'
p1971
asbasbasbag57
(g73
g59
NtRp1972
(dp1973
g62
(dp1974
sg71
g1861
sg64
(lp1975
g57
(g78
g59
NtRp1976
(dp1977
g62
(dp1978
g82
g83
ssg71
g1972
sg64
(lp1979
g947
asbag57
(g78
g59
NtRp1980
(dp1981
g62
(dp1982
g89
g90
ssg71
g1972
sg64
(lp1983
S':'
asbag57
(g78
g59
NtRp1984
(dp1985
g62
(dp1986
sg71
g1972
sg64
(lp1987
g57
(g58
g59
NtRp1988
(dp1989
g62
(dp1990
g70
I4
ssg71
g1984
sg64
(lp1991
g100
asbasbasbag57
(g73
g59
NtRp1992
(dp1993
g62
(dp1994
sg71
g1861
sg64
(lp1995
g57
(g78
g59
NtRp1996
(dp1997
g62
(dp1998
g82
g83
ssg71
g1992
sg64
(lp1999
g968
asbag57
(g78
g59
NtRp2000
(dp2001
g62
(dp2002
g89
g90
ssg71
g1992
sg64
(lp2003
S':'
asbag57
(g78
g59
NtRp2004
(dp2005
g62
(dp2006
sg71
g1992
sg64
(lp2007
g57
(g58
g59
NtRp2008
(dp2009
g62
(dp2010
g70
I4
ssg71
g2004
sg64
(lp2011
g981
asbasbasbag57
(g73
g59
NtRp2012
(dp2013
g62
(dp2014
sg71
g1861
sg64
(lp2015
g57
(g78
g59
NtRp2016
(dp2017
g62
(dp2018
g82
g83
ssg71
g2012
sg64
(lp2019
g1166
asbag57
(g78
g59
NtRp2020
(dp2021
g62
(dp2022
g89
g90
ssg71
g2012
sg64
(lp2023
S':'
asbag57
(g78
g59
NtRp2024
(dp2025
g62
(dp2026
sg71
g2012
sg64
(lp2027
g57
(g58
g59
NtRp2028
(dp2029
g62
(dp2030
g70
I4
ssg71
g2024
sg64
(lp2031
g100
asbasbasbag57
(g73
g59
NtRp2032
(dp2033
g62
(dp2034
sg71
g1861
sg64
(lp2035
g57
(g78
g59
NtRp2036
(dp2037
g62
(dp2038
g82
g83
ssg71
g2032
sg64
(lp2039
g1187
asbag57
(g78
g59
NtRp2040
(dp2041
g62
(dp2042
g89
g90
ssg71
g2032
sg64
(lp2043
S':'
asbag57
(g78
g59
NtRp2044
(dp2045
g62
(dp2046
sg71
g2032
sg64
(lp2047
g57
(g58
g59
NtRp2048
(dp2049
g62
(dp2050
g70
I4
ssg71
g2044
sg64
(lp2051
g100
asbasbasbag57
(g73
g59
NtRp2052
(dp2053
g62
(dp2054
sg71
g1861
sg64
(lp2055
g57
(g78
g59
NtRp2056
(dp2057
g62
(dp2058
g82
g83
ssg71
g2052
sg64
(lp2059
g1425
asbag57
(g78
g59
NtRp2060
(dp2061
g62
(dp2062
g89
g90
ssg71
g2052
sg64
(lp2063
S':'
asbag57
(g78
g59
NtRp2064
(dp2065
g62
(dp2066
sg71
g2052
sg64
(lp2067
g57
(g58
g59
NtRp2068
(dp2069
g62
(dp2070
g70
I4
ssg71
g2064
sg64
(lp2071
g1438
asbasbasbag57
(g73
g59
NtRp2072
(dp2073
g62
(dp2074
sg71
g1861
sg64
(lp2075
g57
(g78
g59
NtRp2076
(dp2077
g62
(dp2078
g82
g83
ssg71
g2072
sg64
(lp2079
g1468
asbag57
(g78
g59
NtRp2080
(dp2081
g62
(dp2082
g89
g90
ssg71
g2072
sg64
(lp2083
S':'
asbag57
(g78
g59
NtRp2084
(dp2085
g62
(dp2086
sg71
g2072
sg64
(lp2087
g57
(g58
g59
NtRp2088
(dp2089
g62
(dp2090
g70
I4
ssg71
g2084
sg64
(lp2091
g57
(g66
g59
NtRp2092
(dp2093
g62
(dp2094
g70
I3
ssg71
Nsg64
(lp2095
g57
(g73
g59
NtRp2096
(dp2097
g62
(dp2098
sg71
g2092
sg64
(lp2099
g57
(g78
g59
NtRp2100
(dp2101
g62
(dp2102
sg71
g2096
sg64
(lp2103
g57
(g58
g59
NtRp2104
(dp2105
g62
(dp2106
g70
I3
ssg71
g2100
sg64
(lp2107
S'1'
asbasbasbag57
(g73
g59
NtRp2108
(dp2109
g62
(dp2110
sg71
g2092
sg64
(lp2111
g57
(g78
g59
NtRp2112
(dp2113
g62
(dp2114
sg71
g2108
sg64
(lp2115
g57
(g58
g59
NtRp2116
(dp2117
g62
(dp2118
g70
I3
ssg71
g2112
sg64
(lp2119
S'99'
p2120
asbasbasbag57
(g73
g59
NtRp2121
(dp2122
g62
(dp2123
sg71
g2092
sg64
(lp2124
g57
(g78
g59
NtRp2125
(dp2126
g62
(dp2127
sg71
g2121
sg64
(lp2128
g57
(g58
g59
NtRp2129
(dp2130
g62
(dp2131
g70
I3
ssg71
g2125
sg64
(lp2132
S'7'
asbasbasbag57
(g73
g59
NtRp2133
(dp2134
g62
(dp2135
sg71
g2092
sg64
(lp2136
g57
(g78
g59
NtRp2137
(dp2138
g62
(dp2139
sg71
g2133
sg64
(lp2140
g57
(g58
g59
NtRp2141
(dp2142
g62
(dp2143
g70
I3
ssg71
g2137
sg64
(lp2144
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2145
asbasbasbag57
(g73
g59
NtRp2146
(dp2147
g62
(dp2148
sg71
g2092
sg64
(lp2149
g57
(g78
g59
NtRp2150
(dp2151
g62
(dp2152
sg71
g2146
sg64
(lp2153
g57
(g58
g59
NtRp2154
(dp2155
g62
(dp2156
g70
I3
ssg71
g2150
sg64
(lp2157
g1547
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2158
(dp2159
g62
(dp2160
sg71
g67
sg64
(lp2161
g57
(g78
g59
NtRp2162
(dp2163
g62
(dp2164
g82
g83
ssg71
g2158
sg64
(lp2165
S'is_https'
p2166
asbag57
(g78
g59
NtRp2167
(dp2168
g62
(dp2169
g89
g90
ssg71
g2158
sg64
(lp2170
S':'
asbag57
(g78
g59
NtRp2171
(dp2172
g62
(dp2173
sg71
g2158
sg64
(lp2174
g57
(g58
g59
NtRp2175
(dp2176
g62
(dp2177
g70
I5
ssg71
g2171
sg64
(lp2178
g100
asbasbasbag57
(g73
g59
NtRp2179
(dp2180
g62
(dp2181
sg71
g67
sg64
(lp2182
g57
(g78
g59
NtRp2183
(dp2184
g62
(dp2185
g82
g83
ssg71
g2179
sg64
(lp2186
S'is_local'
p2187
asbag57
(g78
g59
NtRp2188
(dp2189
g62
(dp2190
g89
g90
ssg71
g2179
sg64
(lp2191
S':'
asbag57
(g78
g59
NtRp2192
(dp2193
g62
(dp2194
sg71
g2179
sg64
(lp2195
g57
(g58
g59
NtRp2196
(dp2197
g62
(dp2198
g70
I5
ssg71
g2192
sg64
(lp2199
g1656
asbasbasbag57
(g73
g59
NtRp2200
(dp2201
g62
(dp2202
sg71
g67
sg64
(lp2203
g57
(g78
g59
NtRp2204
(dp2205
g62
(dp2206
g82
g83
ssg71
g2200
sg64
(lp2207
S'is_restful'
p2208
asbag57
(g78
g59
NtRp2209
(dp2210
g62
(dp2211
g89
g90
ssg71
g2200
sg64
(lp2212
S':'
asbag57
(g78
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g2200
sg64
(lp2216
g57
(g58
g59
NtRp2217
(dp2218
g62
(dp2219
g70
I5
ssg71
g2213
sg64
(lp2220
g100
asbasbasbag57
(g73
g59
NtRp2221
(dp2222
g62
(dp2223
sg71
g67
sg64
(lp2224
g57
(g78
g59
NtRp2225
(dp2226
g62
(dp2227
g82
g83
ssg71
g2221
sg64
(lp2228
S'now'
p2229
asbag57
(g78
g59
NtRp2230
(dp2231
g62
(dp2232
g89
g90
ssg71
g2221
sg64
(lp2233
S':'
asbag57
(g78
g59
NtRp2234
(dp2235
g62
(dp2236
sg71
g2221
sg64
(lp2237
g57
(g58
g59
NtRp2238
(dp2239
g62
(dp2240
g70
I5
ssg71
g2234
sg64
(lp2241
S'datetime.datetime(2012, 7, 16, 12, 23, 33, 268000)'
p2242
asbasbasbag57
(g73
g59
NtRp2243
(dp2244
g62
(dp2245
sg71
g67
sg64
(lp2246
g57
(g78
g59
NtRp2247
(dp2248
g62
(dp2249
g82
g83
ssg71
g2243
sg64
(lp2250
S'post_vars'
p2251
asbag57
(g78
g59
NtRp2252
(dp2253
g62
(dp2254
g89
g90
ssg71
g2243
sg64
(lp2255
S':'
asbag57
(g78
g59
NtRp2256
(dp2257
g62
(dp2258
sg71
g2243
sg64
(lp2259
g57
(g58
g59
NtRp2260
(dp2261
g62
(dp2262
g70
I5
ssg71
g2256
sg64
(lp2263
g57
(g66
g59
NtRp2264
(dp2265
g62
(dp2266
g70
I4
ssg71
Nsg64
(lp2267
sbasbasbasbag57
(g73
g59
NtRp2268
(dp2269
g62
(dp2270
sg71
g67
sg64
(lp2271
g57
(g78
g59
NtRp2272
(dp2273
g62
(dp2274
g82
g83
ssg71
g2268
sg64
(lp2275
S'url'
p2276
asbag57
(g78
g59
NtRp2277
(dp2278
g62
(dp2279
g89
g90
ssg71
g2268
sg64
(lp2280
S':'
asbag57
(g78
g59
NtRp2281
(dp2282
g62
(dp2283
sg71
g2268
sg64
(lp2284
g57
(g58
g59
NtRp2285
(dp2286
g62
(dp2287
g70
I5
ssg71
g2281
sg64
(lp2288
S'/Phylografter/stree/index'
p2289
asbasbasbag57
(g73
g59
NtRp2290
(dp2291
g62
(dp2292
sg71
g67
sg64
(lp2293
g57
(g78
g59
NtRp2294
(dp2295
g62
(dp2296
g82
g83
ssg71
g2290
sg64
(lp2297
S'utcnow'
p2298
asbag57
(g78
g59
NtRp2299
(dp2300
g62
(dp2301
g89
g90
ssg71
g2290
sg64
(lp2302
S':'
asbag57
(g78
g59
NtRp2303
(dp2304
g62
(dp2305
sg71
g2290
sg64
(lp2306
g57
(g58
g59
NtRp2307
(dp2308
g62
(dp2309
g70
I5
ssg71
g2303
sg64
(lp2310
S'datetime.datetime(2012, 7, 16, 17, 23, 33, 268000)'
p2311
asbasbasbag57
(g73
g59
NtRp2312
(dp2313
g62
(dp2314
sg71
g67
sg64
(lp2315
g57
(g78
g59
NtRp2316
(dp2317
g62
(dp2318
g82
g83
ssg71
g2312
sg64
(lp2319
S'uuid'
p2320
asbag57
(g78
g59
NtRp2321
(dp2322
g62
(dp2323
g89
g90
ssg71
g2312
sg64
(lp2324
S':'
asbag57
(g78
g59
NtRp2325
(dp2326
g62
(dp2327
sg71
g2312
sg64
(lp2328
g57
(g58
g59
NtRp2329
(dp2330
g62
(dp2331
g70
I5
ssg71
g2325
sg64
(lp2332
S'Phylografter/127.0.0.1.2012-07-16.12-23-33.b05d63b8-12de-4f1f-bd1f-4e20e23d4448'
p2333
asbasbasbag57
(g73
g59
NtRp2334
(dp2335
g62
(dp2336
sg71
g67
sg64
(lp2337
g57
(g78
g59
NtRp2338
(dp2339
g62
(dp2340
g82
g83
ssg71
g2334
sg64
(lp2341
S'vars'
p2342
asbag57
(g78
g59
NtRp2343
(dp2344
g62
(dp2345
g89
g90
ssg71
g2334
sg64
(lp2346
S':'
asbag57
(g78
g59
NtRp2347
(dp2348
g62
(dp2349
sg71
g2334
sg64
(lp2350
g57
(g58
g59
NtRp2351
(dp2352
g62
(dp2353
g70
I5
ssg71
g2347
sg64
(lp2354
g57
(g66
g59
NtRp2355
(dp2356
g62
(dp2357
g70
I4
ssg71
Nsg64
(lp2358
sbasbasbasbag57
(g73
g59
NtRp2359
(dp2360
g62
(dp2361
sg71
g67
sg64
(lp2362
g57
(g78
g59
NtRp2363
(dp2364
g62
(dp2365
g82
g83
ssg71
g2359
sg64
(lp2366
S'wsgi'
p2367
asbag57
(g78
g59
NtRp2368
(dp2369
g62
(dp2370
g89
g90
ssg71
g2359
sg64
(lp2371
S':'
asbag57
(g78
g59
NtRp2372
(dp2373
g62
(dp2374
sg71
g2359
sg64
(lp2375
g57
(g58
g59
NtRp2376
(dp2377
g62
(dp2378
g70
I5
ssg71
g2372
sg64
(lp2379
g57
(g66
g59
NtRp2380
(dp2381
g62
(dp2382
g70
I4
ssg71
Nsg64
(lp2383
g57
(g73
g59
NtRp2384
(dp2385
g62
(dp2386
sg71
g2380
sg64
(lp2387
g57
(g78
g59
NtRp2388
(dp2389
g62
(dp2390
g82
g83
ssg71
g2384
sg64
(lp2391
S'environ'
p2392
asbag57
(g78
g59
NtRp2393
(dp2394
g62
(dp2395
g89
g90
ssg71
g2384
sg64
(lp2396
S':'
asbag57
(g78
g59
NtRp2397
(dp2398
g62
(dp2399
sg71
g2384
sg64
(lp2400
g57
(g58
g59
NtRp2401
(dp2402
g62
(dp2403
g70
I4
ssg71
g2397
sg64
(lp2404
g57
(g66
g59
NtRp2405
(dp2406
g62
(dp2407
g70
I3
ssg71
Nsg64
(lp2408
g57
(g73
g59
NtRp2409
(dp2410
g62
(dp2411
sg71
g2405
sg64
(lp2412
g57
(g78
g59
NtRp2413
(dp2414
g62
(dp2415
g82
g83
ssg71
g2409
sg64
(lp2416
S'HTTP_ACCEPT'
p2417
asbag57
(g78
g59
NtRp2418
(dp2419
g62
(dp2420
g89
g90
ssg71
g2409
sg64
(lp2421
S':'
asbag57
(g78
g59
NtRp2422
(dp2423
g62
(dp2424
sg71
g2409
sg64
(lp2425
g57
(g58
g59
NtRp2426
(dp2427
g62
(dp2428
g70
I3
ssg71
g2422
sg64
(lp2429
g1003
asbasbasbag57
(g73
g59
NtRp2430
(dp2431
g62
(dp2432
sg71
g2405
sg64
(lp2433
g57
(g78
g59
NtRp2434
(dp2435
g62
(dp2436
g82
g83
ssg71
g2430
sg64
(lp2437
S'HTTP_ACCEPT_ENCODING'
p2438
asbag57
(g78
g59
NtRp2439
(dp2440
g62
(dp2441
g89
g90
ssg71
g2430
sg64
(lp2442
S':'
asbag57
(g78
g59
NtRp2443
(dp2444
g62
(dp2445
sg71
g2430
sg64
(lp2446
g57
(g58
g59
NtRp2447
(dp2448
g62
(dp2449
g70
I3
ssg71
g2443
sg64
(lp2450
g1025
asbasbasbag57
(g73
g59
NtRp2451
(dp2452
g62
(dp2453
sg71
g2405
sg64
(lp2454
g57
(g78
g59
NtRp2455
(dp2456
g62
(dp2457
g82
g83
ssg71
g2451
sg64
(lp2458
S'HTTP_ACCEPT_LANGUAGE'
p2459
asbag57
(g78
g59
NtRp2460
(dp2461
g62
(dp2462
g89
g90
ssg71
g2451
sg64
(lp2463
S':'
asbag57
(g78
g59
NtRp2464
(dp2465
g62
(dp2466
sg71
g2451
sg64
(lp2467
g57
(g58
g59
NtRp2468
(dp2469
g62
(dp2470
g70
I3
ssg71
g2464
sg64
(lp2471
g1047
asbasbasbag57
(g73
g59
NtRp2472
(dp2473
g62
(dp2474
sg71
g2405
sg64
(lp2475
g57
(g78
g59
NtRp2476
(dp2477
g62
(dp2478
g82
g83
ssg71
g2472
sg64
(lp2479
S'HTTP_CACHE_CONTROL'
p2480
asbag57
(g78
g59
NtRp2481
(dp2482
g62
(dp2483
g89
g90
ssg71
g2472
sg64
(lp2484
S':'
asbag57
(g78
g59
NtRp2485
(dp2486
g62
(dp2487
sg71
g2472
sg64
(lp2488
g57
(g58
g59
NtRp2489
(dp2490
g62
(dp2491
g70
I3
ssg71
g2485
sg64
(lp2492
g1069
asbasbasbag57
(g73
g59
NtRp2493
(dp2494
g62
(dp2495
sg71
g2405
sg64
(lp2496
g57
(g78
g59
NtRp2497
(dp2498
g62
(dp2499
g82
g83
ssg71
g2493
sg64
(lp2500
S'HTTP_CONNECTION'
p2501
asbag57
(g78
g59
NtRp2502
(dp2503
g62
(dp2504
g89
g90
ssg71
g2493
sg64
(lp2505
S':'
asbag57
(g78
g59
NtRp2506
(dp2507
g62
(dp2508
sg71
g2493
sg64
(lp2509
g57
(g58
g59
NtRp2510
(dp2511
g62
(dp2512
g70
I3
ssg71
g2506
sg64
(lp2513
g1091
asbasbasbag57
(g73
g59
NtRp2514
(dp2515
g62
(dp2516
sg71
g2405
sg64
(lp2517
g57
(g78
g59
NtRp2518
(dp2519
g62
(dp2520
g82
g83
ssg71
g2514
sg64
(lp2521
S'HTTP_COOKIE'
p2522
asbag57
(g78
g59
NtRp2523
(dp2524
g62
(dp2525
g89
g90
ssg71
g2514
sg64
(lp2526
S':'
asbag57
(g78
g59
NtRp2527
(dp2528
g62
(dp2529
sg71
g2514
sg64
(lp2530
g57
(g58
g59
NtRp2531
(dp2532
g62
(dp2533
g70
I3
ssg71
g2527
sg64
(lp2534
g1113
asbasbasbag57
(g73
g59
NtRp2535
(dp2536
g62
(dp2537
sg71
g2405
sg64
(lp2538
g57
(g78
g59
NtRp2539
(dp2540
g62
(dp2541
g82
g83
ssg71
g2535
sg64
(lp2542
S'HTTP_HOST'
p2543
asbag57
(g78
g59
NtRp2544
(dp2545
g62
(dp2546
g89
g90
ssg71
g2535
sg64
(lp2547
S':'
asbag57
(g78
g59
NtRp2548
(dp2549
g62
(dp2550
sg71
g2535
sg64
(lp2551
g57
(g58
g59
NtRp2552
(dp2553
g62
(dp2554
g70
I3
ssg71
g2548
sg64
(lp2555
g1135
asbasbasbag57
(g73
g59
NtRp2556
(dp2557
g62
(dp2558
sg71
g2405
sg64
(lp2559
g57
(g78
g59
NtRp2560
(dp2561
g62
(dp2562
g82
g83
ssg71
g2556
sg64
(lp2563
S'HTTP_USER_AGENT'
p2564
asbag57
(g78
g59
NtRp2565
(dp2566
g62
(dp2567
g89
g90
ssg71
g2556
sg64
(lp2568
S':'
asbag57
(g78
g59
NtRp2569
(dp2570
g62
(dp2571
sg71
g2556
sg64
(lp2572
g57
(g58
g59
NtRp2573
(dp2574
g62
(dp2575
g70
I3
ssg71
g2569
sg64
(lp2576
g1157
asbasbasbag57
(g73
g59
NtRp2577
(dp2578
g62
(dp2579
sg71
g2405
sg64
(lp2580
g57
(g78
g59
NtRp2581
(dp2582
g62
(dp2583
g82
g83
ssg71
g2577
sg64
(lp2584
S'PATH_INFO'
p2585
asbag57
(g78
g59
NtRp2586
(dp2587
g62
(dp2588
g89
g90
ssg71
g2577
sg64
(lp2589
S':'
asbag57
(g78
g59
NtRp2590
(dp2591
g62
(dp2592
sg71
g2577
sg64
(lp2593
g57
(g58
g59
NtRp2594
(dp2595
g62
(dp2596
g70
I3
ssg71
g2590
sg64
(lp2597
g1221
asbasbasbag57
(g73
g59
NtRp2598
(dp2599
g62
(dp2600
sg71
g2405
sg64
(lp2601
g57
(g78
g59
NtRp2602
(dp2603
g62
(dp2604
g82
g83
ssg71
g2598
sg64
(lp2605
S'QUERY_STRING'
p2606
asbag57
(g78
g59
NtRp2607
(dp2608
g62
(dp2609
g89
g90
ssg71
g2598
sg64
(lp2610
S':'
asbag57
(g78
g59
NtRp2611
(dp2612
g62
(dp2613
sg71
g2598
sg64
(lp2614
g57
(g58
g59
NtRp2615
(dp2616
g62
(dp2617
g70
I3
ssg71
g2611
sg64
(lp2618
S''
asbasbasbag57
(g73
g59
NtRp2619
(dp2620
g62
(dp2621
sg71
g2405
sg64
(lp2622
g57
(g78
g59
NtRp2623
(dp2624
g62
(dp2625
g82
g83
ssg71
g2619
sg64
(lp2626
S'REMOTE_ADDR'
p2627
asbag57
(g78
g59
NtRp2628
(dp2629
g62
(dp2630
g89
g90
ssg71
g2619
sg64
(lp2631
S':'
asbag57
(g78
g59
NtRp2632
(dp2633
g62
(dp2634
sg71
g2619
sg64
(lp2635
g57
(g58
g59
NtRp2636
(dp2637
g62
(dp2638
g70
I3
ssg71
g2632
sg64
(lp2639
g190
asbasbasbag57
(g73
g59
NtRp2640
(dp2641
g62
(dp2642
sg71
g2405
sg64
(lp2643
g57
(g78
g59
NtRp2644
(dp2645
g62
(dp2646
g82
g83
ssg71
g2640
sg64
(lp2647
S'REMOTE_PORT'
p2648
asbag57
(g78
g59
NtRp2649
(dp2650
g62
(dp2651
g89
g90
ssg71
g2640
sg64
(lp2652
S':'
asbag57
(g78
g59
NtRp2653
(dp2654
g62
(dp2655
sg71
g2640
sg64
(lp2656
g57
(g58
g59
NtRp2657
(dp2658
g62
(dp2659
g70
I3
ssg71
g2653
sg64
(lp2660
g1285
asbasbasbag57
(g73
g59
NtRp2661
(dp2662
g62
(dp2663
sg71
g2405
sg64
(lp2664
g57
(g78
g59
NtRp2665
(dp2666
g62
(dp2667
g82
g83
ssg71
g2661
sg64
(lp2668
S'REQUEST_METHOD'
p2669
asbag57
(g78
g59
NtRp2670
(dp2671
g62
(dp2672
g89
g90
ssg71
g2661
sg64
(lp2673
S':'
asbag57
(g78
g59
NtRp2674
(dp2675
g62
(dp2676
sg71
g2661
sg64
(lp2677
g57
(g58
g59
NtRp2678
(dp2679
g62
(dp2680
g70
I3
ssg71
g2674
sg64
(lp2681
g1307
asbasbasbag57
(g73
g59
NtRp2682
(dp2683
g62
(dp2684
sg71
g2405
sg64
(lp2685
g57
(g78
g59
NtRp2686
(dp2687
g62
(dp2688
g82
g83
ssg71
g2682
sg64
(lp2689
S'SCRIPT_NAME'
p2690
asbag57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
g89
g90
ssg71
g2682
sg64
(lp2694
S':'
asbag57
(g78
g59
NtRp2695
(dp2696
g62
(dp2697
sg71
g2682
sg64
(lp2698
g57
(g58
g59
NtRp2699
(dp2700
g62
(dp2701
g70
I3
ssg71
g2695
sg64
(lp2702
S''
asbasbasbag57
(g73
g59
NtRp2703
(dp2704
g62
(dp2705
sg71
g2405
sg64
(lp2706
g57
(g78
g59
NtRp2707
(dp2708
g62
(dp2709
g82
g83
ssg71
g2703
sg64
(lp2710
S'SERVER_NAME'
p2711
asbag57
(g78
g59
NtRp2712
(dp2713
g62
(dp2714
g89
g90
ssg71
g2703
sg64
(lp2715
S':'
asbag57
(g78
g59
NtRp2716
(dp2717
g62
(dp2718
sg71
g2703
sg64
(lp2719
g57
(g58
g59
NtRp2720
(dp2721
g62
(dp2722
g70
I3
ssg71
g2716
sg64
(lp2723
g1350
asbasbasbag57
(g73
g59
NtRp2724
(dp2725
g62
(dp2726
sg71
g2405
sg64
(lp2727
g57
(g78
g59
NtRp2728
(dp2729
g62
(dp2730
g82
g83
ssg71
g2724
sg64
(lp2731
S'SERVER_PORT'
p2732
asbag57
(g78
g59
NtRp2733
(dp2734
g62
(dp2735
g89
g90
ssg71
g2724
sg64
(lp2736
S':'
asbag57
(g78
g59
NtRp2737
(dp2738
g62
(dp2739
sg71
g2724
sg64
(lp2740
g57
(g58
g59
NtRp2741
(dp2742
g62
(dp2743
g70
I3
ssg71
g2737
sg64
(lp2744
g1372
asbasbasbag57
(g73
g59
NtRp2745
(dp2746
g62
(dp2747
sg71
g2405
sg64
(lp2748
g57
(g78
g59
NtRp2749
(dp2750
g62
(dp2751
g82
g83
ssg71
g2745
sg64
(lp2752
S'SERVER_PROTOCOL'
p2753
asbag57
(g78
g59
NtRp2754
(dp2755
g62
(dp2756
g89
g90
ssg71
g2745
sg64
(lp2757
S':'
asbag57
(g78
g59
NtRp2758
(dp2759
g62
(dp2760
sg71
g2745
sg64
(lp2761
g57
(g58
g59
NtRp2762
(dp2763
g62
(dp2764
g70
I3
ssg71
g2758
sg64
(lp2765
g1394
asbasbasbag57
(g73
g59
NtRp2766
(dp2767
g62
(dp2768
sg71
g2405
sg64
(lp2769
g57
(g78
g59
NtRp2770
(dp2771
g62
(dp2772
g82
g83
ssg71
g2766
sg64
(lp2773
S'SERVER_SOFTWARE'
p2774
asbag57
(g78
g59
NtRp2775
(dp2776
g62
(dp2777
g89
g90
ssg71
g2766
sg64
(lp2778
S':'
asbag57
(g78
g59
NtRp2779
(dp2780
g62
(dp2781
sg71
g2766
sg64
(lp2782
g57
(g58
g59
NtRp2783
(dp2784
g62
(dp2785
g70
I3
ssg71
g2779
sg64
(lp2786
g1416
asbasbasbag57
(g73
g59
NtRp2787
(dp2788
g62
(dp2789
sg71
g2405
sg64
(lp2790
g57
(g78
g59
NtRp2791
(dp2792
g62
(dp2793
g82
g83
ssg71
g2787
sg64
(lp2794
S'wsgi.errors'
p2795
asbag57
(g78
g59
NtRp2796
(dp2797
g62
(dp2798
g89
g90
ssg71
g2787
sg64
(lp2799
S':'
asbag57
(g78
g59
NtRp2800
(dp2801
g62
(dp2802
sg71
g2787
sg64
(lp2803
g57
(g58
g59
NtRp2804
(dp2805
g62
(dp2806
g70
I3
ssg71
g2800
sg64
(lp2807
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p2808
asbasbasbag57
(g73
g59
NtRp2809
(dp2810
g62
(dp2811
sg71
g2405
sg64
(lp2812
g57
(g78
g59
NtRp2813
(dp2814
g62
(dp2815
g82
g83
ssg71
g2809
sg64
(lp2816
S'wsgi.file_wrapper'
p2817
asbag57
(g78
g59
NtRp2818
(dp2819
g62
(dp2820
g89
g90
ssg71
g2809
sg64
(lp2821
S':'
asbag57
(g78
g59
NtRp2822
(dp2823
g62
(dp2824
sg71
g2809
sg64
(lp2825
g57
(g58
g59
NtRp2826
(dp2827
g62
(dp2828
g70
I3
ssg71
g2822
sg64
(lp2829
S'<class wsgiref.util.FileWrapper at 0x01649DF8>'
p2830
asbasbasbag57
(g73
g59
NtRp2831
(dp2832
g62
(dp2833
sg71
g2405
sg64
(lp2834
g57
(g78
g59
NtRp2835
(dp2836
g62
(dp2837
g82
g83
ssg71
g2831
sg64
(lp2838
S'wsgi.input'
p2839
asbag57
(g78
g59
NtRp2840
(dp2841
g62
(dp2842
g89
g90
ssg71
g2831
sg64
(lp2843
S':'
asbag57
(g78
g59
NtRp2844
(dp2845
g62
(dp2846
sg71
g2831
sg64
(lp2847
g57
(g58
g59
NtRp2848
(dp2849
g62
(dp2850
g70
I3
ssg71
g2844
sg64
(lp2851
S'<cStringIO.StringO object at 0x06406460>'
p2852
asbasbasbag57
(g73
g59
NtRp2853
(dp2854
g62
(dp2855
sg71
g2405
sg64
(lp2856
g57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
g82
g83
ssg71
g2853
sg64
(lp2860
S'wsgi.multiprocess'
p2861
asbag57
(g78
g59
NtRp2862
(dp2863
g62
(dp2864
g89
g90
ssg71
g2853
sg64
(lp2865
S':'
asbag57
(g78
g59
NtRp2866
(dp2867
g62
(dp2868
sg71
g2853
sg64
(lp2869
g57
(g58
g59
NtRp2870
(dp2871
g62
(dp2872
g70
I3
ssg71
g2866
sg64
(lp2873
g100
asbasbasbag57
(g73
g59
NtRp2874
(dp2875
g62
(dp2876
sg71
g2405
sg64
(lp2877
g57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
g82
g83
ssg71
g2874
sg64
(lp2881
S'wsgi.multithread'
p2882
asbag57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
g89
g90
ssg71
g2874
sg64
(lp2886
S':'
asbag57
(g78
g59
NtRp2887
(dp2888
g62
(dp2889
sg71
g2874
sg64
(lp2890
g57
(g58
g59
NtRp2891
(dp2892
g62
(dp2893
g70
I3
ssg71
g2887
sg64
(lp2894
g1656
asbasbasbag57
(g73
g59
NtRp2895
(dp2896
g62
(dp2897
sg71
g2405
sg64
(lp2898
g57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
g82
g83
ssg71
g2895
sg64
(lp2902
S'wsgi.run_once'
p2903
asbag57
(g78
g59
NtRp2904
(dp2905
g62
(dp2906
g89
g90
ssg71
g2895
sg64
(lp2907
S':'
asbag57
(g78
g59
NtRp2908
(dp2909
g62
(dp2910
sg71
g2895
sg64
(lp2911
g57
(g58
g59
NtRp2912
(dp2913
g62
(dp2914
g70
I3
ssg71
g2908
sg64
(lp2915
g100
asbasbasbag57
(g73
g59
NtRp2916
(dp2917
g62
(dp2918
sg71
g2405
sg64
(lp2919
g57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
g82
g83
ssg71
g2916
sg64
(lp2923
S'wsgi.url_scheme'
p2924
asbag57
(g78
g59
NtRp2925
(dp2926
g62
(dp2927
g89
g90
ssg71
g2916
sg64
(lp2928
S':'
asbag57
(g78
g59
NtRp2929
(dp2930
g62
(dp2931
sg71
g2916
sg64
(lp2932
g57
(g58
g59
NtRp2933
(dp2934
g62
(dp2935
g70
I3
ssg71
g2929
sg64
(lp2936
g1699
asbasbasbag57
(g73
g59
NtRp2937
(dp2938
g62
(dp2939
sg71
g2405
sg64
(lp2940
g57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
g82
g83
ssg71
g2937
sg64
(lp2944
S'wsgi.version'
p2945
asbag57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
g89
g90
ssg71
g2937
sg64
(lp2949
S':'
asbag57
(g78
g59
NtRp2950
(dp2951
g62
(dp2952
sg71
g2937
sg64
(lp2953
g57
(g58
g59
NtRp2954
(dp2955
g62
(dp2956
g70
I3
ssg71
g2950
sg64
(lp2957
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2958
(lp2959
(dp2960
S'file'
p2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py'
p2962
sS'dump'
p2963
(dp2964
S'environment'
p2965
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p2966
sS'ccode'
p2967
S'<code object <module> at 065D3728, file "C:\\Docu...tions\\Phylografter\\controllers/stree.py", line 5>'
p2968
ssS'lnum'
p2969
I205
sS'lines'
p2970
(dp2971
I200
S'    try:'
p2972
sI201
S'        if type(code) == types.CodeType:'
p2973
sI202
S'            ccode = code'
p2974
sI203
S'        else:'
p2975
sI204
S'            ccode = compile2(code,layer)'
p2976
sI205
S'        exec ccode in environment'
p2977
sI206
S'    except HTTP:'
p2978
sI207
S'        raise'
p2979
sI208
S'    except RestrictedError:'
p2980
sI209
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p2981
ssS'call'
p2982
S'(code=\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, ...}, layer=r\'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py\')'
p2983
sS'func'
p2984
S'restricted'
p2985
sa(dp2986
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers\\stree.py'
p2987
sg2963
(dp2988
sg2969
I482
sg2970
(dp2989
I480
S'    return dict(study=study, tree=t, form=form)'
p2990
sI471
S'            if n.parent:'
p2991
sI472
S'                db.snode[n.id].update_record(parent=n.parent.id)'
p2992
sI473
S'            n.label = str(n.id)'
p2993
sI474
S'            n.length = None'
p2994
sI475
S'        db.stree[form.vars.id].update_record(newick_idstr=t.root.write())'
p2995
sI476
S''
sI477
S"        session.flash = 'tree %s inserted' % t.attrib.id"
p2996
sI478
S"        redirect(URL('study','tbimport_trees'))"
p2997
sI479
S''
ssg2982
S'()'
p2998
sg2984
S'<module>'
p2999
sa(dp3000
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\globals.py'
p3001
sg2963
(dp3002
S'self'
p3003
S'undefined'
p3004
sS'f'
S'<function index>'
p3005
ssg2969
I173
sg2970
(dp3006
I168
S'        self.menu = []             # used by the default view layout'
p3007
sI169
S'        self.files = []            # used by web2py_ajax.html'
p3008
sI170
S'        self.generic_patterns = [] # patterns to allow generic views'
p3009
sI171
S"        self.delimiters = ('{{','}}')"
p3010
sI172
S'        self._vars = None'
p3011
sI173
S'        self._caller = lambda f: f()'
p3012
sI174
S'        self._view_environment = None'
p3013
sI175
S'        self._custom_commit = None'
p3014
sI176
S'        self._custom_rollback = None'
p3015
sI177
S''
ssg2982
S'(f=<function index>)'
p3016
sg2984
S'<lambda>'
p3017
sa(dp3018
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers\\stree.py'
p3019
sg2963
(dp3020
S'table'
p3021
g3004
sS'powerTable'
p3022
S"<Storage {'virtualfields': <__restricted__.Virtu...'virtual.ntax', 'stree.uploaded', 'stree.type']}>"
p3023
sS'powerTable.create'
p3024
S'<function plugin_powertable>'
p3025
sS'builtindict'
p3026
S"<type 'dict'>"
p3027
ssg2969
I80
sg2970
(dp3028
I75
S'    powerTable.hiddencolumns = ["stree.type"]'
p3029
sI76
S''
sI77
S'    ## details = dict(detailscallback=URL(c="stree",f="details"))'
p3030
sI78
S'    powerTable.extra = dict(autoresize=True)'
p3031
sI79
S''
sI80
S'    return dict(table=powerTable.create())'
p3032
sI81
S''
sI82
S'def details():'
p3033
sI83
S'    return DIV()'
p3034
sI84
S''
ssg2982
S'()'
p3035
sg2984
S'index'
p3036
sa(dp3037
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py'
p3038
sg2963
(dp3039
S'global PowerTable'
p3040
S"<class '__restricted__.PowerTable'>"
p3041
ssg2969
I816
sg2970
(dp3042
I811
S'                                        ifunctions=str(ifunctions),'
p3043
sI812
S'                                        searchcolumnjs=str(searchcolumnjs)'
p3044
sI813
S'                                        )'
p3045
sI814
S'                        ),'
p3046
sI815
S'                    CSS,'
p3047
sI816
S'                    PowerTable(),'
p3048
sI817
S'                    )'
p3049
sI818
S''
sI819
S''
sI820
S'plugins.powerTable.create = plugin_powertable'
p3050
ssg2982
S'()'
p3051
sg2984
S'plugin_powertable'
p3052
sa(dp3053
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py'
p3054
sg2963
(dp3055
S'sqlrows.setvirtualfields'
p3056
S'<bound method Rows.setvirtualfields of <gluon.dal.Rows object>>'
p3057
sS'virtualfields'
p3058
S'<__restricted__.Virtual object>'
p3059
sS'sqlrows'
p3060
S'<gluon.dal.Rows object>'
p3061
sS'virtual'
p3062
g3004
ssg2969
I149
sg2970
(dp3063
I144
S"                        virtuallabels['virtual.%s' % vf] = getattr(virtualfields,vf).label"
p3064
sI145
S'                    except AttributeError:'
p3065
sI146
S'                        pass'
p3066
sI147
S''
sI148
S'            #appending virtual fields to the rows'
p3067
sI149
S'            sqlrows.setvirtualfields(virtual=virtualfields)'
p3068
sI150
S''
sI151
S'        #keycolumn is required, if not set, it will be the first column'
p3069
sI152
S'        if not keycolumn: keycolumn = sqlrows.colnames[0]'
p3070
sI153
S"        keycolumntbl = keycolumn.split('.')[0]"
p3071
ssg2982
S'(self=<__restricted__.PowerTable object>)'
p3072
sg2984
g50
sa(dp3073
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\dal.py'
p3074
sg2963
(dp3075
S'box'
p3076
S'<Row {}>'
p3077
sS'attribute'
p3078
S"'clade'"
p3079
sS'method'
p3080
S'<bound method Virtual.clade of <__restricted__.Virtual object>>'
p3081
ssg2969
I7728
sg2970
(dp3082
I7723
S'                            box[attribute]=VirtualCommand(method,row)'
p3083
sI7724
S'                        elif type(method)==types.MethodType:'
p3084
sI7725
S'                            if not updated:'
p3085
sI7726
S'                                virtualfields.__dict__.update(row)'
p3086
sI7727
S'                                updated = True'
p3087
sI7728
S'                            box[attribute]=method()'
p3088
sI7729
S'        return self'
p3089
sI7730
S''
sI7731
S'    def __and__(self,other):'
p3090
sI7732
S"        if self.colnames!=other.colnames: raise Exception, 'Cannot & incompatible Rows objects'"
p3091
ssg2982
S"(self=<gluon.dal.Rows object>, **keyed_virtualfields={'virtual': <__restricted__.Virtual object>})"
p3092
sg2984
S'setvirtualfields'
p3093
sa(dp3094
g2961
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers\\stree.py'
p3095
sg2963
(dp3096
S'fc'
p3097
S"'campanulids'"
p3098
sS'name'
p3099
g3004
sS'fc.name'
p3100
g3004
ssg2969
I42
sg2970
(dp3101
I37
S''
sI38
S"        @virtualsettings(label='Focal Clade')"
p3102
sI39
S'        def clade(self):'
p3103
sI40
S'            study = t[self.stree.id].study'
p3104
sI41
S'            fc = db.study[study].focal_clade.name'
p3105
sI42
S'            name = fc.name if fc else ""'
p3106
sI43
S'            return name'
p3107
sI44
S''
sI45
S''
sI46
S"        @virtualsettings(label='OTUs')"
p3108
ssg2982
S'(self=<__restricted__.Virtual object>)'
p3109
sg2984
S'clade'
p3110
sasS'pyver'
p3111
S'Python 2.7.3: C:\\Python27\\python.exe'
p3112
sS'session'
p3113
g57
(g58
g59
NtRp3114
(dp3115
g62
(dp3116
sg64
(lp3117
g57
(g66
g59
NtRp3118
(dp3119
g62
(dp3120
g70
I5
ssg71
Nsg64
(lp3121
g57
(g73
g59
NtRp3122
(dp3123
g62
(dp3124
sg71
g3118
sg64
(lp3125
g57
(g78
g59
NtRp3126
(dp3127
g62
(dp3128
g82
g83
ssg71
g3122
sg64
(lp3129
S'flash'
p3130
asbag57
(g78
g59
NtRp3131
(dp3132
g62
(dp3133
g89
g90
ssg71
g3122
sg64
(lp3134
S':'
asbag57
(g78
g59
NtRp3135
(dp3136
g62
(dp3137
sg71
g3122
sg64
(lp3138
g57
(g58
g59
NtRp3139
(dp3140
g62
(dp3141
g70
I5
ssg71
g3135
sg64
(lp3142
S''
asbasbasbag57
(g73
g59
NtRp3143
(dp3144
g62
(dp3145
sg71
g3118
sg64
(lp3146
g57
(g78
g59
NtRp3147
(dp3148
g62
(dp3149
g82
g83
ssg71
g3143
sg64
(lp3150
S'scrollbarWidth'
p3151
asbag57
(g78
g59
NtRp3152
(dp3153
g62
(dp3154
g89
g90
ssg71
g3143
sg64
(lp3155
S':'
asbag57
(g78
g59
NtRp3156
(dp3157
g62
(dp3158
sg71
g3143
sg64
(lp3159
g57
(g58
g59
NtRp3160
(dp3161
g62
(dp3162
g70
I5
ssg71
g3156
sg64
(lp3163
S'17'
p3164
asbasbasbag57
(g73
g59
NtRp3165
(dp3166
g62
(dp3167
sg71
g3118
sg64
(lp3168
g57
(g78
g59
NtRp3169
(dp3170
g62
(dp3171
g82
g83
ssg71
g3165
sg64
(lp3172
S'textWidthMetric'
p3173
asbag57
(g78
g59
NtRp3174
(dp3175
g62
(dp3176
g89
g90
ssg71
g3165
sg64
(lp3177
S':'
asbag57
(g78
g59
NtRp3178
(dp3179
g62
(dp3180
sg71
g3165
sg64
(lp3181
g57
(g58
g59
NtRp3182
(dp3183
g62
(dp3184
g70
I5
ssg71
g3178
sg64
(lp3185
S'10.25'
p3186
asbasbasbag57
(g73
g59
NtRp3187
(dp3188
g62
(dp3189
sg71
g3118
sg64
(lp3190
g57
(g78
g59
NtRp3191
(dp3192
g62
(dp3193
g82
g83
ssg71
g3187
sg64
(lp3194
S'windowHeight'
p3195
asbag57
(g78
g59
NtRp3196
(dp3197
g62
(dp3198
g89
g90
ssg71
g3187
sg64
(lp3199
S':'
asbag57
(g78
g59
NtRp3200
(dp3201
g62
(dp3202
sg71
g3187
sg64
(lp3203
g57
(g58
g59
NtRp3204
(dp3205
g62
(dp3206
g70
I5
ssg71
g3200
sg64
(lp3207
S'957'
p3208
asbasbasbag57
(g73
g59
NtRp3209
(dp3210
g62
(dp3211
sg71
g3118
sg64
(lp3212
g57
(g78
g59
NtRp3213
(dp3214
g62
(dp3215
g82
g83
ssg71
g3209
sg64
(lp3216
S'windowWidth'
p3217
asbag57
(g78
g59
NtRp3218
(dp3219
g62
(dp3220
g89
g90
ssg71
g3209
sg64
(lp3221
S':'
asbag57
(g78
g59
NtRp3222
(dp3223
g62
(dp3224
sg71
g3209
sg64
(lp3225
g57
(g58
g59
NtRp3226
(dp3227
g62
(dp3228
g70
I5
ssg71
g3222
sg64
(lp3229
S'1680'
p3230
asbasbasbasbasbsS'etype'
p3231
S"<type 'exceptions.AttributeError'>"
p3232
sS'date'
p3233
S'Mon Jul 16 12:23:33 2012'
p3234
sS'response'
p3235
g57
(g58
g59
NtRp3236
(dp3237
g62
(dp3238
sg64
(lp3239
g57
(g66
g59
NtRp3240
(dp3241
g62
(dp3242
g70
I5
ssg71
Nsg64
(lp3243
g57
(g73
g59
NtRp3244
(dp3245
g62
(dp3246
sg71
g3240
sg64
(lp3247
g57
(g78
g59
NtRp3248
(dp3249
g62
(dp3250
g82
g83
ssg71
g3244
sg64
(lp3251
g155
asbag57
(g78
g59
NtRp3252
(dp3253
g62
(dp3254
g89
g90
ssg71
g3244
sg64
(lp3255
S':'
asbag57
(g78
g59
NtRp3256
(dp3257
g62
(dp3258
sg71
g3244
sg64
(lp3259
g57
(g58
g59
NtRp3260
(dp3261
g62
(dp3262
g70
I5
ssg71
g3256
sg64
(lp3263
S'<cStringIO.StringO object at 0x064063C0>'
p3264
asbasbasbag57
(g73
g59
NtRp3265
(dp3266
g62
(dp3267
sg71
g3240
sg64
(lp3268
g57
(g78
g59
NtRp3269
(dp3270
g62
(dp3271
g82
g83
ssg71
g3265
sg64
(lp3272
g221
asbag57
(g78
g59
NtRp3273
(dp3274
g62
(dp3275
g89
g90
ssg71
g3265
sg64
(lp3276
S':'
asbag57
(g78
g59
NtRp3277
(dp3278
g62
(dp3279
sg71
g3265
sg64
(lp3280
g57
(g58
g59
NtRp3281
(dp3282
g62
(dp3283
g70
I5
ssg71
g3277
sg64
(lp3284
g57
(g66
g59
NtRp3285
(dp3286
g62
(dp3287
g70
I4
ssg71
Nsg64
(lp3288
g57
(g73
g59
NtRp3289
(dp3290
g62
(dp3291
sg71
g3285
sg64
(lp3292
g57
(g78
g59
NtRp3293
(dp3294
g62
(dp3295
g82
g83
ssg71
g3289
sg64
(lp3296
S'session_id_phylografter'
p3297
asbag57
(g78
g59
NtRp3298
(dp3299
g62
(dp3300
g89
g90
ssg71
g3289
sg64
(lp3301
S':'
asbag57
(g78
g59
NtRp3302
(dp3303
g62
(dp3304
sg71
g3289
sg64
(lp3305
g57
(g58
g59
NtRp3306
(dp3307
g62
(dp3308
g70
I4
ssg71
g3302
sg64
(lp3309
g57
(g66
g59
NtRp3310
(dp3311
g62
(dp3312
g70
I3
ssg71
Nsg64
(lp3313
g57
(g73
g59
NtRp3314
(dp3315
g62
(dp3316
sg71
g3310
sg64
(lp3317
g57
(g78
g59
NtRp3318
(dp3319
g62
(dp3320
g82
g83
ssg71
g3314
sg64
(lp3321
g271
asbag57
(g78
g59
NtRp3322
(dp3323
g62
(dp3324
g89
g90
ssg71
g3314
sg64
(lp3325
S':'
asbag57
(g78
g59
NtRp3326
(dp3327
g62
(dp3328
sg71
g3314
sg64
(lp3329
g57
(g58
g59
NtRp3330
(dp3331
g62
(dp3332
g70
I3
ssg71
g3326
sg64
(lp3333
S''
asbasbasbag57
(g73
g59
NtRp3334
(dp3335
g62
(dp3336
sg71
g3310
sg64
(lp3337
g57
(g78
g59
NtRp3338
(dp3339
g62
(dp3340
g82
g83
ssg71
g3334
sg64
(lp3341
g292
asbag57
(g78
g59
NtRp3342
(dp3343
g62
(dp3344
g89
g90
ssg71
g3334
sg64
(lp3345
S':'
asbag57
(g78
g59
NtRp3346
(dp3347
g62
(dp3348
sg71
g3334
sg64
(lp3349
g57
(g58
g59
NtRp3350
(dp3351
g62
(dp3352
g70
I3
ssg71
g3346
sg64
(lp3353
S''
asbasbasbag57
(g73
g59
NtRp3354
(dp3355
g62
(dp3356
sg71
g3310
sg64
(lp3357
g57
(g78
g59
NtRp3358
(dp3359
g62
(dp3360
g82
g83
ssg71
g3354
sg64
(lp3361
g313
asbag57
(g78
g59
NtRp3362
(dp3363
g62
(dp3364
g89
g90
ssg71
g3354
sg64
(lp3365
S':'
asbag57
(g78
g59
NtRp3366
(dp3367
g62
(dp3368
sg71
g3354
sg64
(lp3369
g57
(g58
g59
NtRp3370
(dp3371
g62
(dp3372
g70
I3
ssg71
g3366
sg64
(lp3373
S''
asbasbasbag57
(g73
g59
NtRp3374
(dp3375
g62
(dp3376
sg71
g3310
sg64
(lp3377
g57
(g78
g59
NtRp3378
(dp3379
g62
(dp3380
g82
g83
ssg71
g3374
sg64
(lp3381
g334
asbag57
(g78
g59
NtRp3382
(dp3383
g62
(dp3384
g89
g90
ssg71
g3374
sg64
(lp3385
S':'
asbag57
(g78
g59
NtRp3386
(dp3387
g62
(dp3388
sg71
g3374
sg64
(lp3389
g57
(g58
g59
NtRp3390
(dp3391
g62
(dp3392
g70
I3
ssg71
g3386
sg64
(lp3393
S''
asbasbasbag57
(g73
g59
NtRp3394
(dp3395
g62
(dp3396
sg71
g3310
sg64
(lp3397
g57
(g78
g59
NtRp3398
(dp3399
g62
(dp3400
g82
g83
ssg71
g3394
sg64
(lp3401
g355
asbag57
(g78
g59
NtRp3402
(dp3403
g62
(dp3404
g89
g90
ssg71
g3394
sg64
(lp3405
S':'
asbag57
(g78
g59
NtRp3406
(dp3407
g62
(dp3408
sg71
g3394
sg64
(lp3409
g57
(g58
g59
NtRp3410
(dp3411
g62
(dp3412
g70
I3
ssg71
g3406
sg64
(lp3413
S''
asbasbasbag57
(g73
g59
NtRp3414
(dp3415
g62
(dp3416
sg71
g3310
sg64
(lp3417
g57
(g78
g59
NtRp3418
(dp3419
g62
(dp3420
g82
g83
ssg71
g3414
sg64
(lp3421
g376
asbag57
(g78
g59
NtRp3422
(dp3423
g62
(dp3424
g89
g90
ssg71
g3414
sg64
(lp3425
S':'
asbag57
(g78
g59
NtRp3426
(dp3427
g62
(dp3428
sg71
g3414
sg64
(lp3429
g57
(g58
g59
NtRp3430
(dp3431
g62
(dp3432
g70
I3
ssg71
g3426
sg64
(lp3433
S'/'
asbasbasbag57
(g73
g59
NtRp3434
(dp3435
g62
(dp3436
sg71
g3310
sg64
(lp3437
g57
(g78
g59
NtRp3438
(dp3439
g62
(dp3440
g82
g83
ssg71
g3434
sg64
(lp3441
g397
asbag57
(g78
g59
NtRp3442
(dp3443
g62
(dp3444
g89
g90
ssg71
g3434
sg64
(lp3445
S':'
asbag57
(g78
g59
NtRp3446
(dp3447
g62
(dp3448
sg71
g3434
sg64
(lp3449
g57
(g58
g59
NtRp3450
(dp3451
g62
(dp3452
g70
I3
ssg71
g3446
sg64
(lp3453
S''
asbasbasbag57
(g73
g59
NtRp3454
(dp3455
g62
(dp3456
sg71
g3310
sg64
(lp3457
g57
(g78
g59
NtRp3458
(dp3459
g62
(dp3460
g82
g83
ssg71
g3454
sg64
(lp3461
g418
asbag57
(g78
g59
NtRp3462
(dp3463
g62
(dp3464
g89
g90
ssg71
g3454
sg64
(lp3465
S':'
asbag57
(g78
g59
NtRp3466
(dp3467
g62
(dp3468
sg71
g3454
sg64
(lp3469
g57
(g58
g59
NtRp3470
(dp3471
g62
(dp3472
g70
I3
ssg71
g3466
sg64
(lp3473
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3474
(dp3475
g62
(dp3476
sg71
g3240
sg64
(lp3477
g57
(g78
g59
NtRp3478
(dp3479
g62
(dp3480
g82
g83
ssg71
g3474
sg64
(lp3481
S'delimiters'
p3482
asbag57
(g78
g59
NtRp3483
(dp3484
g62
(dp3485
g89
g90
ssg71
g3474
sg64
(lp3486
S':'
asbag57
(g78
g59
NtRp3487
(dp3488
g62
(dp3489
sg71
g3474
sg64
(lp3490
g57
(g58
g59
NtRp3491
(dp3492
g62
(dp3493
g70
I5
ssg71
g3487
sg64
(lp3494
g57
(g66
g59
NtRp3495
(dp3496
g62
(dp3497
g70
I4
ssg71
Nsg64
(lp3498
g57
(g73
g59
NtRp3499
(dp3500
g62
(dp3501
sg71
g3495
sg64
(lp3502
g57
(g78
g59
NtRp3503
(dp3504
g62
(dp3505
sg71
g3499
sg64
(lp3506
g57
(g58
g59
NtRp3507
(dp3508
g62
(dp3509
g70
I4
ssg71
g3503
sg64
(lp3510
S'{{'
p3511
asbasbasbag57
(g73
g59
NtRp3512
(dp3513
g62
(dp3514
sg71
g3495
sg64
(lp3515
g57
(g78
g59
NtRp3516
(dp3517
g62
(dp3518
sg71
g3512
sg64
(lp3519
g57
(g58
g59
NtRp3520
(dp3521
g62
(dp3522
g70
I4
ssg71
g3516
sg64
(lp3523
S'}}'
p3524
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3525
(dp3526
g62
(dp3527
sg71
g3240
sg64
(lp3528
g57
(g78
g59
NtRp3529
(dp3530
g62
(dp3531
g82
g83
ssg71
g3525
sg64
(lp3532
S'files'
p3533
asbag57
(g78
g59
NtRp3534
(dp3535
g62
(dp3536
g89
g90
ssg71
g3525
sg64
(lp3537
S':'
asbag57
(g78
g59
NtRp3538
(dp3539
g62
(dp3540
sg71
g3525
sg64
(lp3541
g57
(g58
g59
NtRp3542
(dp3543
g62
(dp3544
g70
I5
ssg71
g3538
sg64
(lp3545
g57
(g66
g59
NtRp3546
(dp3547
g62
(dp3548
g70
I4
ssg71
Nsg64
(lp3549
g57
(g73
g59
NtRp3550
(dp3551
g62
(dp3552
sg71
g3546
sg64
(lp3553
g57
(g78
g59
NtRp3554
(dp3555
g62
(dp3556
sg71
g3550
sg64
(lp3557
g57
(g58
g59
NtRp3558
(dp3559
g62
(dp3560
g70
I4
ssg71
g3554
sg64
(lp3561
S'/Phylografter/static/plugin_powertable/jquery.dataTables.min.js'
p3562
asbasbasbag57
(g73
g59
NtRp3563
(dp3564
g62
(dp3565
sg71
g3546
sg64
(lp3566
g57
(g78
g59
NtRp3567
(dp3568
g62
(dp3569
sg71
g3563
sg64
(lp3570
g57
(g58
g59
NtRp3571
(dp3572
g62
(dp3573
g70
I4
ssg71
g3567
sg64
(lp3574
S'/Phylografter/static/plugin_powertable/jquery.dataTables.css'
p3575
asbasbasbag57
(g73
g59
NtRp3576
(dp3577
g62
(dp3578
sg71
g3546
sg64
(lp3579
g57
(g78
g59
NtRp3580
(dp3581
g62
(dp3582
sg71
g3576
sg64
(lp3583
g57
(g58
g59
NtRp3584
(dp3585
g62
(dp3586
g70
I4
ssg71
g3580
sg64
(lp3587
S'/Phylografter/static/plugin_powertable/ui/css/smoothness/jquery-ui-1.8.5.custom.css'
p3588
asbasbasbag57
(g73
g59
NtRp3589
(dp3590
g62
(dp3591
sg71
g3546
sg64
(lp3592
g57
(g78
g59
NtRp3593
(dp3594
g62
(dp3595
sg71
g3589
sg64
(lp3596
g57
(g58
g59
NtRp3597
(dp3598
g62
(dp3599
g70
I4
ssg71
g3593
sg64
(lp3600
S'/Phylografter/static/plugin_powertable/ui/js/jquery-ui-1.8.5.custom.min.js'
p3601
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3602
(dp3603
g62
(dp3604
sg71
g3240
sg64
(lp3605
g57
(g78
g59
NtRp3606
(dp3607
g62
(dp3608
g82
g83
ssg71
g3602
sg64
(lp3609
S'flash'
p3610
asbag57
(g78
g59
NtRp3611
(dp3612
g62
(dp3613
g89
g90
ssg71
g3602
sg64
(lp3614
S':'
asbag57
(g78
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3602
sg64
(lp3618
g57
(g58
g59
NtRp3619
(dp3620
g62
(dp3621
g70
I5
ssg71
g3615
sg64
(lp3622
S''
asbasbasbag57
(g73
g59
NtRp3623
(dp3624
g62
(dp3625
sg71
g3240
sg64
(lp3626
g57
(g78
g59
NtRp3627
(dp3628
g62
(dp3629
g82
g83
ssg71
g3623
sg64
(lp3630
S'generic_patterns'
p3631
asbag57
(g78
g59
NtRp3632
(dp3633
g62
(dp3634
g89
g90
ssg71
g3623
sg64
(lp3635
S':'
asbag57
(g78
g59
NtRp3636
(dp3637
g62
(dp3638
sg71
g3623
sg64
(lp3639
g57
(g58
g59
NtRp3640
(dp3641
g62
(dp3642
g70
I5
ssg71
g3636
sg64
(lp3643
g57
(g66
g59
NtRp3644
(dp3645
g62
(dp3646
g70
I4
ssg71
Nsg64
(lp3647
sbasbasbasbag57
(g73
g59
NtRp3648
(dp3649
g62
(dp3650
sg71
g3240
sg64
(lp3651
g57
(g78
g59
NtRp3652
(dp3653
g62
(dp3654
g82
g83
ssg71
g3648
sg64
(lp3655
S'headers'
p3656
asbag57
(g78
g59
NtRp3657
(dp3658
g62
(dp3659
g89
g90
ssg71
g3648
sg64
(lp3660
S':'
asbag57
(g78
g59
NtRp3661
(dp3662
g62
(dp3663
sg71
g3648
sg64
(lp3664
g57
(g58
g59
NtRp3665
(dp3666
g62
(dp3667
g70
I5
ssg71
g3661
sg64
(lp3668
g57
(g66
g59
NtRp3669
(dp3670
g62
(dp3671
g70
I4
ssg71
Nsg64
(lp3672
g57
(g73
g59
NtRp3673
(dp3674
g62
(dp3675
sg71
g3669
sg64
(lp3676
g57
(g78
g59
NtRp3677
(dp3678
g62
(dp3679
g82
g83
ssg71
g3673
sg64
(lp3680
S'Cache-Control'
p3681
asbag57
(g78
g59
NtRp3682
(dp3683
g62
(dp3684
g89
g90
ssg71
g3673
sg64
(lp3685
S':'
asbag57
(g78
g59
NtRp3686
(dp3687
g62
(dp3688
sg71
g3673
sg64
(lp3689
g57
(g58
g59
NtRp3690
(dp3691
g62
(dp3692
g70
I4
ssg71
g3686
sg64
(lp3693
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3694
asbasbasbag57
(g73
g59
NtRp3695
(dp3696
g62
(dp3697
sg71
g3669
sg64
(lp3698
g57
(g78
g59
NtRp3699
(dp3700
g62
(dp3701
g82
g83
ssg71
g3695
sg64
(lp3702
S'Content-Type'
p3703
asbag57
(g78
g59
NtRp3704
(dp3705
g62
(dp3706
g89
g90
ssg71
g3695
sg64
(lp3707
S':'
asbag57
(g78
g59
NtRp3708
(dp3709
g62
(dp3710
sg71
g3695
sg64
(lp3711
g57
(g58
g59
NtRp3712
(dp3713
g62
(dp3714
g70
I4
ssg71
g3708
sg64
(lp3715
S'text/html; charset=utf-8'
p3716
asbasbasbag57
(g73
g59
NtRp3717
(dp3718
g62
(dp3719
sg71
g3669
sg64
(lp3720
g57
(g78
g59
NtRp3721
(dp3722
g62
(dp3723
g82
g83
ssg71
g3717
sg64
(lp3724
S'Expires'
p3725
asbag57
(g78
g59
NtRp3726
(dp3727
g62
(dp3728
g89
g90
ssg71
g3717
sg64
(lp3729
S':'
asbag57
(g78
g59
NtRp3730
(dp3731
g62
(dp3732
sg71
g3717
sg64
(lp3733
g57
(g58
g59
NtRp3734
(dp3735
g62
(dp3736
g70
I4
ssg71
g3730
sg64
(lp3737
S'Mon, 16 Jul 2012 17:23:33 GMT'
p3738
asbasbasbag57
(g73
g59
NtRp3739
(dp3740
g62
(dp3741
sg71
g3669
sg64
(lp3742
g57
(g78
g59
NtRp3743
(dp3744
g62
(dp3745
g82
g83
ssg71
g3739
sg64
(lp3746
S'Pragma'
p3747
asbag57
(g78
g59
NtRp3748
(dp3749
g62
(dp3750
g89
g90
ssg71
g3739
sg64
(lp3751
S':'
asbag57
(g78
g59
NtRp3752
(dp3753
g62
(dp3754
sg71
g3739
sg64
(lp3755
g57
(g58
g59
NtRp3756
(dp3757
g62
(dp3758
g70
I4
ssg71
g3752
sg64
(lp3759
S'no-cache'
p3760
asbasbasbag57
(g73
g59
NtRp3761
(dp3762
g62
(dp3763
sg71
g3669
sg64
(lp3764
g57
(g78
g59
NtRp3765
(dp3766
g62
(dp3767
g82
g83
ssg71
g3761
sg64
(lp3768
S'X-Powered-By'
p3769
asbag57
(g78
g59
NtRp3770
(dp3771
g62
(dp3772
g89
g90
ssg71
g3761
sg64
(lp3773
S':'
asbag57
(g78
g59
NtRp3774
(dp3775
g62
(dp3776
sg71
g3761
sg64
(lp3777
g57
(g58
g59
NtRp3778
(dp3779
g62
(dp3780
g70
I4
ssg71
g3774
sg64
(lp3781
S'web2py'
p3782
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3783
(dp3784
g62
(dp3785
sg71
g3240
sg64
(lp3786
g57
(g78
g59
NtRp3787
(dp3788
g62
(dp3789
g82
g83
ssg71
g3783
sg64
(lp3790
S'menu'
p3791
asbag57
(g78
g59
NtRp3792
(dp3793
g62
(dp3794
g89
g90
ssg71
g3783
sg64
(lp3795
S':'
asbag57
(g78
g59
NtRp3796
(dp3797
g62
(dp3798
sg71
g3783
sg64
(lp3799
g57
(g58
g59
NtRp3800
(dp3801
g62
(dp3802
g70
I5
ssg71
g3796
sg64
(lp3803
g57
(g66
g59
NtRp3804
(dp3805
g62
(dp3806
g70
I4
ssg71
Nsg64
(lp3807
g57
(g73
g59
NtRp3808
(dp3809
g62
(dp3810
sg71
g3804
sg64
(lp3811
g57
(g78
g59
NtRp3812
(dp3813
g62
(dp3814
sg71
g3808
sg64
(lp3815
g57
(g58
g59
NtRp3816
(dp3817
g62
(dp3818
g70
I4
ssg71
g3812
sg64
(lp3819
g57
(g66
g59
NtRp3820
(dp3821
g62
(dp3822
g70
I3
ssg71
Nsg64
(lp3823
g57
(g73
g59
NtRp3824
(dp3825
g62
(dp3826
sg71
g3820
sg64
(lp3827
g57
(g78
g59
NtRp3828
(dp3829
g62
(dp3830
sg71
g3824
sg64
(lp3831
g57
(g58
g59
NtRp3832
(dp3833
g62
(dp3834
g70
I3
ssg71
g3828
sg64
(lp3835
cgluon.languages
lazyT_unpickle
p3836
(S't\x04\x00\x00\x00Home'
tRp3837
asbasbasbag57
(g73
g59
NtRp3838
(dp3839
g62
(dp3840
sg71
g3820
sg64
(lp3841
g57
(g78
g59
NtRp3842
(dp3843
g62
(dp3844
sg71
g3838
sg64
(lp3845
g57
(g58
g59
NtRp3846
(dp3847
g62
(dp3848
g70
I3
ssg71
g3842
sg64
(lp3849
g100
asbasbasbag57
(g73
g59
NtRp3850
(dp3851
g62
(dp3852
sg71
g3820
sg64
(lp3853
g57
(g78
g59
NtRp3854
(dp3855
g62
(dp3856
sg71
g3850
sg64
(lp3857
g57
(g58
g59
NtRp3858
(dp3859
g62
(dp3860
g70
I3
ssg71
g3854
sg64
(lp3861
S'/Phylografter/default/index'
p3862
asbasbasbag57
(g73
g59
NtRp3863
(dp3864
g62
(dp3865
sg71
g3820
sg64
(lp3866
g57
(g78
g59
NtRp3867
(dp3868
g62
(dp3869
sg71
g3863
sg64
(lp3870
g57
(g58
g59
NtRp3871
(dp3872
g62
(dp3873
g70
I3
ssg71
g3867
sg64
(lp3874
g57
(g66
g59
NtRp3875
(dp3876
g62
(dp3877
g70
I2
ssg71
Nsg64
(lp3878
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3879
(dp3880
g62
(dp3881
sg71
g3804
sg64
(lp3882
g57
(g78
g59
NtRp3883
(dp3884
g62
(dp3885
sg71
g3879
sg64
(lp3886
g57
(g58
g59
NtRp3887
(dp3888
g62
(dp3889
g70
I4
ssg71
g3883
sg64
(lp3890
g57
(g66
g59
NtRp3891
(dp3892
g62
(dp3893
g70
I3
ssg71
Nsg64
(lp3894
g57
(g73
g59
NtRp3895
(dp3896
g62
(dp3897
sg71
g3891
sg64
(lp3898
g57
(g78
g59
NtRp3899
(dp3900
g62
(dp3901
sg71
g3895
sg64
(lp3902
g57
(g58
g59
NtRp3903
(dp3904
g62
(dp3905
g70
I3
ssg71
g3899
sg64
(lp3906
g3836
(S't\x04\x00\x00\x00Taxa'
tRp3907
asbasbasbag57
(g73
g59
NtRp3908
(dp3909
g62
(dp3910
sg71
g3891
sg64
(lp3911
g57
(g78
g59
NtRp3912
(dp3913
g62
(dp3914
sg71
g3908
sg64
(lp3915
g57
(g58
g59
NtRp3916
(dp3917
g62
(dp3918
g70
I3
ssg71
g3912
sg64
(lp3919
g100
asbasbasbag57
(g73
g59
NtRp3920
(dp3921
g62
(dp3922
sg71
g3891
sg64
(lp3923
g57
(g78
g59
NtRp3924
(dp3925
g62
(dp3926
sg71
g3920
sg64
(lp3927
g57
(g58
g59
NtRp3928
(dp3929
g62
(dp3930
g70
I3
ssg71
g3924
sg64
(lp3931
S'/Phylografter/taxon/index'
p3932
asbasbasbag57
(g73
g59
NtRp3933
(dp3934
g62
(dp3935
sg71
g3891
sg64
(lp3936
g57
(g78
g59
NtRp3937
(dp3938
g62
(dp3939
sg71
g3933
sg64
(lp3940
g57
(g58
g59
NtRp3941
(dp3942
g62
(dp3943
g70
I3
ssg71
g3937
sg64
(lp3944
g57
(g66
g59
NtRp3945
(dp3946
g62
(dp3947
g70
I2
ssg71
Nsg64
(lp3948
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3949
(dp3950
g62
(dp3951
sg71
g3804
sg64
(lp3952
g57
(g78
g59
NtRp3953
(dp3954
g62
(dp3955
sg71
g3949
sg64
(lp3956
g57
(g58
g59
NtRp3957
(dp3958
g62
(dp3959
g70
I4
ssg71
g3953
sg64
(lp3960
g57
(g66
g59
NtRp3961
(dp3962
g62
(dp3963
g70
I3
ssg71
Nsg64
(lp3964
g57
(g73
g59
NtRp3965
(dp3966
g62
(dp3967
sg71
g3961
sg64
(lp3968
g57
(g78
g59
NtRp3969
(dp3970
g62
(dp3971
sg71
g3965
sg64
(lp3972
g57
(g58
g59
NtRp3973
(dp3974
g62
(dp3975
g70
I3
ssg71
g3969
sg64
(lp3976
g3836
(S't\x07\x00\x00\x00Studies'
tRp3977
asbasbasbag57
(g73
g59
NtRp3978
(dp3979
g62
(dp3980
sg71
g3961
sg64
(lp3981
g57
(g78
g59
NtRp3982
(dp3983
g62
(dp3984
sg71
g3978
sg64
(lp3985
g57
(g58
g59
NtRp3986
(dp3987
g62
(dp3988
g70
I3
ssg71
g3982
sg64
(lp3989
g100
asbasbasbag57
(g73
g59
NtRp3990
(dp3991
g62
(dp3992
sg71
g3961
sg64
(lp3993
g57
(g78
g59
NtRp3994
(dp3995
g62
(dp3996
sg71
g3990
sg64
(lp3997
g57
(g58
g59
NtRp3998
(dp3999
g62
(dp4000
g70
I3
ssg71
g3994
sg64
(lp4001
S'/Phylografter/study/index'
p4002
asbasbasbag57
(g73
g59
NtRp4003
(dp4004
g62
(dp4005
sg71
g3961
sg64
(lp4006
g57
(g78
g59
NtRp4007
(dp4008
g62
(dp4009
sg71
g4003
sg64
(lp4010
g57
(g58
g59
NtRp4011
(dp4012
g62
(dp4013
g70
I3
ssg71
g4007
sg64
(lp4014
g57
(g66
g59
NtRp4015
(dp4016
g62
(dp4017
g70
I2
ssg71
Nsg64
(lp4018
g57
(g73
g59
NtRp4019
(dp4020
g62
(dp4021
sg71
g4015
sg64
(lp4022
g57
(g78
g59
NtRp4023
(dp4024
g62
(dp4025
sg71
g4019
sg64
(lp4026
g57
(g58
g59
NtRp4027
(dp4028
g62
(dp4029
g70
I2
ssg71
g4023
sg64
(lp4030
g57
(g66
g59
NtRp4031
(dp4032
g62
(dp4033
g70
I1
ssg71
Nsg64
(lp4034
g57
(g73
g59
NtRp4035
(dp4036
g62
(dp4037
sg71
g4031
sg64
(lp4038
g57
(g78
g59
NtRp4039
(dp4040
g62
(dp4041
sg71
g4035
sg64
(lp4042
g57
(g58
g59
NtRp4043
(dp4044
g62
(dp4045
g70
I1
ssg71
g4039
sg64
(lp4046
S'New study'
p4047
asbasbasbag57
(g73
g59
NtRp4048
(dp4049
g62
(dp4050
sg71
g4031
sg64
(lp4051
g57
(g78
g59
NtRp4052
(dp4053
g62
(dp4054
sg71
g4048
sg64
(lp4055
g57
(g58
g59
NtRp4056
(dp4057
g62
(dp4058
g70
I1
ssg71
g4052
sg64
(lp4059
I00
asbasbasbag57
(g73
g59
NtRp4060
(dp4061
g62
(dp4062
sg71
g4031
sg64
(lp4063
g57
(g78
g59
NtRp4064
(dp4065
g62
(dp4066
sg71
g4060
sg64
(lp4067
g57
(g58
g59
NtRp4068
(dp4069
g62
(dp4070
g70
I1
ssg71
g4064
sg64
(lp4071
S'/Phylografter/study/create'
p4072
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4073
(dp4074
g62
(dp4075
sg71
g4015
sg64
(lp4076
g57
(g78
g59
NtRp4077
(dp4078
g62
(dp4079
sg71
g4073
sg64
(lp4080
g57
(g58
g59
NtRp4081
(dp4082
g62
(dp4083
g70
I2
ssg71
g4077
sg64
(lp4084
g57
(g66
g59
NtRp4085
(dp4086
g62
(dp4087
g70
I1
ssg71
Nsg64
(lp4088
g57
(g73
g59
NtRp4089
(dp4090
g62
(dp4091
sg71
g4085
sg64
(lp4092
g57
(g78
g59
NtRp4093
(dp4094
g62
(dp4095
sg71
g4089
sg64
(lp4096
g57
(g58
g59
NtRp4097
(dp4098
g62
(dp4099
g70
I1
ssg71
g4093
sg64
(lp4100
S'Import from TreeBASE'
p4101
asbasbasbag57
(g73
g59
NtRp4102
(dp4103
g62
(dp4104
sg71
g4085
sg64
(lp4105
g57
(g78
g59
NtRp4106
(dp4107
g62
(dp4108
sg71
g4102
sg64
(lp4109
g57
(g58
g59
NtRp4110
(dp4111
g62
(dp4112
g70
I1
ssg71
g4106
sg64
(lp4113
I00
asbasbasbag57
(g73
g59
NtRp4114
(dp4115
g62
(dp4116
sg71
g4085
sg64
(lp4117
g57
(g78
g59
NtRp4118
(dp4119
g62
(dp4120
sg71
g4114
sg64
(lp4121
g57
(g58
g59
NtRp4122
(dp4123
g62
(dp4124
g70
I1
ssg71
g4118
sg64
(lp4125
S'/Phylografter/study/tbimport'
p4126
asbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4127
(dp4128
g62
(dp4129
sg71
g3804
sg64
(lp4130
g57
(g78
g59
NtRp4131
(dp4132
g62
(dp4133
sg71
g4127
sg64
(lp4134
g57
(g58
g59
NtRp4135
(dp4136
g62
(dp4137
g70
I4
ssg71
g4131
sg64
(lp4138
g57
(g66
g59
NtRp4139
(dp4140
g62
(dp4141
g70
I3
ssg71
Nsg64
(lp4142
g57
(g73
g59
NtRp4143
(dp4144
g62
(dp4145
sg71
g4139
sg64
(lp4146
g57
(g78
g59
NtRp4147
(dp4148
g62
(dp4149
sg71
g4143
sg64
(lp4150
g57
(g58
g59
NtRp4151
(dp4152
g62
(dp4153
g70
I3
ssg71
g4147
sg64
(lp4154
g3836
(S's\x0c\x00\x00\x00Source Trees'
tRp4155
asbasbasbag57
(g73
g59
NtRp4156
(dp4157
g62
(dp4158
sg71
g4139
sg64
(lp4159
g57
(g78
g59
NtRp4160
(dp4161
g62
(dp4162
sg71
g4156
sg64
(lp4163
g57
(g58
g59
NtRp4164
(dp4165
g62
(dp4166
g70
I3
ssg71
g4160
sg64
(lp4167
g100
asbasbasbag57
(g73
g59
NtRp4168
(dp4169
g62
(dp4170
sg71
g4139
sg64
(lp4171
g57
(g78
g59
NtRp4172
(dp4173
g62
(dp4174
sg71
g4168
sg64
(lp4175
g57
(g58
g59
NtRp4176
(dp4177
g62
(dp4178
g70
I3
ssg71
g4172
sg64
(lp4179
S'/Phylografter/stree/index'
p4180
asbasbasbag57
(g73
g59
NtRp4181
(dp4182
g62
(dp4183
sg71
g4139
sg64
(lp4184
g57
(g78
g59
NtRp4185
(dp4186
g62
(dp4187
sg71
g4181
sg64
(lp4188
g57
(g58
g59
NtRp4189
(dp4190
g62
(dp4191
g70
I3
ssg71
g4185
sg64
(lp4192
g57
(g66
g59
NtRp4193
(dp4194
g62
(dp4195
g70
I2
ssg71
Nsg64
(lp4196
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4197
(dp4198
g62
(dp4199
sg71
g3804
sg64
(lp4200
g57
(g78
g59
NtRp4201
(dp4202
g62
(dp4203
sg71
g4197
sg64
(lp4204
g57
(g58
g59
NtRp4205
(dp4206
g62
(dp4207
g70
I4
ssg71
g4201
sg64
(lp4208
g57
(g66
g59
NtRp4209
(dp4210
g62
(dp4211
g70
I3
ssg71
Nsg64
(lp4212
g57
(g73
g59
NtRp4213
(dp4214
g62
(dp4215
sg71
g4209
sg64
(lp4216
g57
(g78
g59
NtRp4217
(dp4218
g62
(dp4219
sg71
g4213
sg64
(lp4220
g57
(g58
g59
NtRp4221
(dp4222
g62
(dp4223
g70
I3
ssg71
g4217
sg64
(lp4224
g3836
(S's\r\x00\x00\x00Grafted Trees'
tRp4225
asbasbasbag57
(g73
g59
NtRp4226
(dp4227
g62
(dp4228
sg71
g4209
sg64
(lp4229
g57
(g78
g59
NtRp4230
(dp4231
g62
(dp4232
sg71
g4226
sg64
(lp4233
g57
(g58
g59
NtRp4234
(dp4235
g62
(dp4236
g70
I3
ssg71
g4230
sg64
(lp4237
g100
asbasbasbag57
(g73
g59
NtRp4238
(dp4239
g62
(dp4240
sg71
g4209
sg64
(lp4241
g57
(g78
g59
NtRp4242
(dp4243
g62
(dp4244
sg71
g4238
sg64
(lp4245
g57
(g58
g59
NtRp4246
(dp4247
g62
(dp4248
g70
I3
ssg71
g4242
sg64
(lp4249
S'/Phylografter/gtree/index'
p4250
asbasbasbag57
(g73
g59
NtRp4251
(dp4252
g62
(dp4253
sg71
g4209
sg64
(lp4254
g57
(g78
g59
NtRp4255
(dp4256
g62
(dp4257
sg71
g4251
sg64
(lp4258
g57
(g58
g59
NtRp4259
(dp4260
g62
(dp4261
g70
I3
ssg71
g4255
sg64
(lp4262
g57
(g66
g59
NtRp4263
(dp4264
g62
(dp4265
g70
I2
ssg71
Nsg64
(lp4266
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4267
(dp4268
g62
(dp4269
sg71
g3240
sg64
(lp4270
g57
(g78
g59
NtRp4271
(dp4272
g62
(dp4273
g82
g83
ssg71
g4267
sg64
(lp4274
S'meta'
p4275
asbag57
(g78
g59
NtRp4276
(dp4277
g62
(dp4278
g89
g90
ssg71
g4267
sg64
(lp4279
S':'
asbag57
(g78
g59
NtRp4280
(dp4281
g62
(dp4282
sg71
g4267
sg64
(lp4283
g57
(g58
g59
NtRp4284
(dp4285
g62
(dp4286
g70
I5
ssg71
g4280
sg64
(lp4287
g57
(g66
g59
NtRp4288
(dp4289
g62
(dp4290
g70
I4
ssg71
Nsg64
(lp4291
g57
(g73
g59
NtRp4292
(dp4293
g62
(dp4294
sg71
g4288
sg64
(lp4295
g57
(g78
g59
NtRp4296
(dp4297
g62
(dp4298
g82
g83
ssg71
g4292
sg64
(lp4299
S'author'
p4300
asbag57
(g78
g59
NtRp4301
(dp4302
g62
(dp4303
g89
g90
ssg71
g4292
sg64
(lp4304
S':'
asbag57
(g78
g59
NtRp4305
(dp4306
g62
(dp4307
sg71
g4292
sg64
(lp4308
g57
(g58
g59
NtRp4309
(dp4310
g62
(dp4311
g70
I4
ssg71
g4305
sg64
(lp4312
S'Richard Ree'
p4313
asbasbasbag57
(g73
g59
NtRp4314
(dp4315
g62
(dp4316
sg71
g4288
sg64
(lp4317
g57
(g78
g59
NtRp4318
(dp4319
g62
(dp4320
g82
g83
ssg71
g4314
sg64
(lp4321
S'copyright'
p4322
asbag57
(g78
g59
NtRp4323
(dp4324
g62
(dp4325
g89
g90
ssg71
g4314
sg64
(lp4326
S':'
asbag57
(g78
g59
NtRp4327
(dp4328
g62
(dp4329
sg71
g4314
sg64
(lp4330
g57
(g58
g59
NtRp4331
(dp4332
g62
(dp4333
g70
I4
ssg71
g4327
sg64
(lp4334
S'Copyright 2007-2010'
p4335
asbasbasbag57
(g73
g59
NtRp4336
(dp4337
g62
(dp4338
sg71
g4288
sg64
(lp4339
g57
(g78
g59
NtRp4340
(dp4341
g62
(dp4342
g82
g83
ssg71
g4336
sg64
(lp4343
S'description'
p4344
asbag57
(g78
g59
NtRp4345
(dp4346
g62
(dp4347
g89
g90
ssg71
g4336
sg64
(lp4348
S':'
asbag57
(g78
g59
NtRp4349
(dp4350
g62
(dp4351
sg71
g4336
sg64
(lp4352
g57
(g58
g59
NtRp4353
(dp4354
g62
(dp4355
g70
I4
ssg71
g4349
sg64
(lp4356
S'Phylografter: Angiosperm phylogeny database'
p4357
asbasbasbag57
(g73
g59
NtRp4358
(dp4359
g62
(dp4360
sg71
g4288
sg64
(lp4361
g57
(g78
g59
NtRp4362
(dp4363
g62
(dp4364
g82
g83
ssg71
g4358
sg64
(lp4365
S'generator'
p4366
asbag57
(g78
g59
NtRp4367
(dp4368
g62
(dp4369
g89
g90
ssg71
g4358
sg64
(lp4370
S':'
asbag57
(g78
g59
NtRp4371
(dp4372
g62
(dp4373
sg71
g4358
sg64
(lp4374
g57
(g58
g59
NtRp4375
(dp4376
g62
(dp4377
g70
I4
ssg71
g4371
sg64
(lp4378
S'Web2py Enterprise Framework'
p4379
asbasbasbag57
(g73
g59
NtRp4380
(dp4381
g62
(dp4382
sg71
g4288
sg64
(lp4383
g57
(g78
g59
NtRp4384
(dp4385
g62
(dp4386
g82
g83
ssg71
g4380
sg64
(lp4387
S'keywords'
p4388
asbag57
(g78
g59
NtRp4389
(dp4390
g62
(dp4391
g89
g90
ssg71
g4380
sg64
(lp4392
S':'
asbag57
(g78
g59
NtRp4393
(dp4394
g62
(dp4395
sg71
g4380
sg64
(lp4396
g57
(g58
g59
NtRp4397
(dp4398
g62
(dp4399
g70
I4
ssg71
g4393
sg64
(lp4400
S'flowering plants, phylogeny, web2py, python, framework'
p4401
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4402
(dp4403
g62
(dp4404
sg71
g3240
sg64
(lp4405
g57
(g78
g59
NtRp4406
(dp4407
g62
(dp4408
g82
g83
ssg71
g4402
sg64
(lp4409
S'postprocessing'
p4410
asbag57
(g78
g59
NtRp4411
(dp4412
g62
(dp4413
g89
g90
ssg71
g4402
sg64
(lp4414
S':'
asbag57
(g78
g59
NtRp4415
(dp4416
g62
(dp4417
sg71
g4402
sg64
(lp4418
g57
(g58
g59
NtRp4419
(dp4420
g62
(dp4421
g70
I5
ssg71
g4415
sg64
(lp4422
g57
(g66
g59
NtRp4423
(dp4424
g62
(dp4425
g70
I4
ssg71
Nsg64
(lp4426
sbasbasbasbag57
(g73
g59
NtRp4427
(dp4428
g62
(dp4429
sg71
g3240
sg64
(lp4430
g57
(g78
g59
NtRp4431
(dp4432
g62
(dp4433
g82
g83
ssg71
g4427
sg64
(lp4434
S'session_file'
p4435
asbag57
(g78
g59
NtRp4436
(dp4437
g62
(dp4438
g89
g90
ssg71
g4427
sg64
(lp4439
S':'
asbag57
(g78
g59
NtRp4440
(dp4441
g62
(dp4442
sg71
g4427
sg64
(lp4443
g57
(g58
g59
NtRp4444
(dp4445
g62
(dp4446
g70
I5
ssg71
g4440
sg64
(lp4447
S"<open file 'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556', mode 'rb+' at 0x063C8C28>"
p4448
asbasbasbag57
(g73
g59
NtRp4449
(dp4450
g62
(dp4451
sg71
g3240
sg64
(lp4452
g57
(g78
g59
NtRp4453
(dp4454
g62
(dp4455
g82
g83
ssg71
g4449
sg64
(lp4456
S'session_filename'
p4457
asbag57
(g78
g59
NtRp4458
(dp4459
g62
(dp4460
g89
g90
ssg71
g4449
sg64
(lp4461
S':'
asbag57
(g78
g59
NtRp4462
(dp4463
g62
(dp4464
sg71
g4449
sg64
(lp4465
g57
(g58
g59
NtRp4466
(dp4467
g62
(dp4468
g70
I5
ssg71
g4462
sg64
(lp4469
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556'
p4470
asbasbasbag57
(g73
g59
NtRp4471
(dp4472
g62
(dp4473
sg71
g3240
sg64
(lp4474
g57
(g78
g59
NtRp4475
(dp4476
g62
(dp4477
g82
g83
ssg71
g4471
sg64
(lp4478
S'session_id'
p4479
asbag57
(g78
g59
NtRp4480
(dp4481
g62
(dp4482
g89
g90
ssg71
g4471
sg64
(lp4483
S':'
asbag57
(g78
g59
NtRp4484
(dp4485
g62
(dp4486
sg71
g4471
sg64
(lp4487
g57
(g58
g59
NtRp4488
(dp4489
g62
(dp4490
g70
I5
ssg71
g4484
sg64
(lp4491
S'127.0.0.1-28643ddf-1b78-4c04-979c-3eabfaa54556'
p4492
asbasbasbag57
(g73
g59
NtRp4493
(dp4494
g62
(dp4495
sg71
g3240
sg64
(lp4496
g57
(g78
g59
NtRp4497
(dp4498
g62
(dp4499
g82
g83
ssg71
g4493
sg64
(lp4500
S'session_id_name'
p4501
asbag57
(g78
g59
NtRp4502
(dp4503
g62
(dp4504
g89
g90
ssg71
g4493
sg64
(lp4505
S':'
asbag57
(g78
g59
NtRp4506
(dp4507
g62
(dp4508
sg71
g4493
sg64
(lp4509
g57
(g58
g59
NtRp4510
(dp4511
g62
(dp4512
g70
I5
ssg71
g4506
sg64
(lp4513
g3297
asbasbasbag57
(g73
g59
NtRp4514
(dp4515
g62
(dp4516
sg71
g3240
sg64
(lp4517
g57
(g78
g59
NtRp4518
(dp4519
g62
(dp4520
g82
g83
ssg71
g4514
sg64
(lp4521
S'session_locked'
p4522
asbag57
(g78
g59
NtRp4523
(dp4524
g62
(dp4525
g89
g90
ssg71
g4514
sg64
(lp4526
S':'
asbag57
(g78
g59
NtRp4527
(dp4528
g62
(dp4529
sg71
g4514
sg64
(lp4530
g57
(g58
g59
NtRp4531
(dp4532
g62
(dp4533
g70
I5
ssg71
g4527
sg64
(lp4534
g1656
asbasbasbag57
(g73
g59
NtRp4535
(dp4536
g62
(dp4537
sg71
g3240
sg64
(lp4538
g57
(g78
g59
NtRp4539
(dp4540
g62
(dp4541
g82
g83
ssg71
g4535
sg64
(lp4542
S'session_new'
p4543
asbag57
(g78
g59
NtRp4544
(dp4545
g62
(dp4546
g89
g90
ssg71
g4535
sg64
(lp4547
S':'
asbag57
(g78
g59
NtRp4548
(dp4549
g62
(dp4550
sg71
g4535
sg64
(lp4551
g57
(g58
g59
NtRp4552
(dp4553
g62
(dp4554
g70
I5
ssg71
g4548
sg64
(lp4555
g100
asbasbasbag57
(g73
g59
NtRp4556
(dp4557
g62
(dp4558
sg71
g3240
sg64
(lp4559
g57
(g78
g59
NtRp4560
(dp4561
g62
(dp4562
g82
g83
ssg71
g4556
sg64
(lp4563
S'status'
p4564
asbag57
(g78
g59
NtRp4565
(dp4566
g62
(dp4567
g89
g90
ssg71
g4556
sg64
(lp4568
S':'
asbag57
(g78
g59
NtRp4569
(dp4570
g62
(dp4571
sg71
g4556
sg64
(lp4572
g57
(g58
g59
NtRp4573
(dp4574
g62
(dp4575
g70
I5
ssg71
g4569
sg64
(lp4576
S'200'
p4577
asbasbasbag57
(g73
g59
NtRp4578
(dp4579
g62
(dp4580
sg71
g3240
sg64
(lp4581
g57
(g78
g59
NtRp4582
(dp4583
g62
(dp4584
g82
g83
ssg71
g4578
sg64
(lp4585
S'subtitle'
p4586
asbag57
(g78
g59
NtRp4587
(dp4588
g62
(dp4589
g89
g90
ssg71
g4578
sg64
(lp4590
S':'
asbag57
(g78
g59
NtRp4591
(dp4592
g62
(dp4593
sg71
g4578
sg64
(lp4594
g57
(g58
g59
NtRp4595
(dp4596
g62
(dp4597
g70
I5
ssg71
g4591
sg64
(lp4598
S'Source trees'
p4599
asbasbasbag57
(g73
g59
NtRp4600
(dp4601
g62
(dp4602
sg71
g3240
sg64
(lp4603
g57
(g78
g59
NtRp4604
(dp4605
g62
(dp4606
g82
g83
ssg71
g4600
sg64
(lp4607
S'title'
p4608
asbag57
(g78
g59
NtRp4609
(dp4610
g62
(dp4611
g89
g90
ssg71
g4600
sg64
(lp4612
S':'
asbag57
(g78
g59
NtRp4613
(dp4614
g62
(dp4615
sg71
g4600
sg64
(lp4616
g57
(g58
g59
NtRp4617
(dp4618
g62
(dp4619
g70
I5
ssg71
g4613
sg64
(lp4620
g122
asbasbasbag57
(g73
g59
NtRp4621
(dp4622
g62
(dp4623
sg71
g3240
sg64
(lp4624
g57
(g78
g59
NtRp4625
(dp4626
g62
(dp4627
g82
g83
ssg71
g4621
sg64
(lp4628
g2320
asbag57
(g78
g59
NtRp4629
(dp4630
g62
(dp4631
g89
g90
ssg71
g4621
sg64
(lp4632
S':'
asbag57
(g78
g59
NtRp4633
(dp4634
g62
(dp4635
sg71
g4621
sg64
(lp4636
g57
(g58
g59
NtRp4637
(dp4638
g62
(dp4639
g70
I5
ssg71
g4633
sg64
(lp4640
g2333
asbasbasbag57
(g73
g59
NtRp4641
(dp4642
g62
(dp4643
sg71
g3240
sg64
(lp4644
g57
(g78
g59
NtRp4645
(dp4646
g62
(dp4647
g82
g83
ssg71
g4641
sg64
(lp4648
S'view'
p4649
asbag57
(g78
g59
NtRp4650
(dp4651
g62
(dp4652
g89
g90
ssg71
g4641
sg64
(lp4653
S':'
asbag57
(g78
g59
NtRp4654
(dp4655
g62
(dp4656
sg71
g4641
sg64
(lp4657
g57
(g58
g59
NtRp4658
(dp4659
g62
(dp4660
g70
I5
ssg71
g4654
sg64
(lp4661
S'stree/index.html'
p4662
asbasbasbasbasbsS'locals'
p4663
(dp4664
S'study'
p4665
S'9'
sS'fc'
p4666
S"'campanulids'"
p4667
sS'self'
p4668
S'<__restricted__.Virtual object>'
p4669
sS't'
S"<Table {'comment': <gluon.dal.Field object at 0x..., '_id': <gluon.dal.Field object at 0x06151750>}>"
p4670
sssS'traceback'
p4671
S'Traceback (most recent call last):\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 482, in <module>\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\globals.py", line 173, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 80, in index\n    return dict(table=powerTable.create())\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py", line 816, in plugin_powertable\n    PowerTable(),\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\models\\plugin_powertable.py", line 149, in __init__\n    sqlrows.setvirtualfields(virtual=virtualfields)\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\dal.py", line 7728, in setvirtualfields\n    box[attribute]=method()\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 42, in clade\n    name = fc.name if fc else ""\nAttributeError: \'str\' object has no attribute \'name\'\n'
p4672
s.