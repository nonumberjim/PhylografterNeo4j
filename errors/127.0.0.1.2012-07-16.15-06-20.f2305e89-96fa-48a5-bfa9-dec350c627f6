(dp1
S'output'
p2
S"<type 'exceptions.IndentationError'> expected an indented block (controllers/stree.py, line 269)"
p3
sS'layer'
p4
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'
p5
sS'code'
p6
S'# coding: utf-8\n## tree = local_import("tree", reload=True)\n## build = local_import("build", reload=True)\n## link = local_import("link")\nimport sys\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules\')\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules/ivy\')\nimport tree\nimport build\nimport link\nimport ivy\nimport treeUtil\nimport re\nimport time\nimport os, types, string\nimport imp\nfrom tokenize import generate_tokens\nfrom cStringIO import StringIO\nfrom neo4j import GraphDatabase\n\n\n## ivy = local_import("ivy")\n\nfrom gluon.storage import Storage\n\nresponse.subtitle = "Source trees"\n\ndef index():\n    t = db.stree\n\n    class Virtual(object):\n        @virtualsettings(label=\'Study\')\n        def study_url(self):\n            study = t[self.stree.id].study\n            u = URL(c="study",f="view",args=[study.id])\n            s = study.citation\n            N = 50\n            if len(s)>N: s = s[:N-3]+" ..."\n            return A(s, _href=u, _title=study.citation)\n\n        @virtualsettings(label=\'Tree\')\n        def tree_url(self):\n            stree = t[self.stree.id]\n            u = URL(c="stree",f="svgView",args=[self.stree.id])\n            return A(stree.type, _href=u)\n\n        @virtualsettings(label=\'Focal Clade\')\n        def clade(self):\n            study = t[self.stree.id].study\n            fc = db.study[study].focal_clade\n            name = fc.name if fc else ""\n            return name\n            \n\n        @virtualsettings(label=\'OTUs\')\n        def ntax(self):\n            q = ((db.snode.tree==self.stree.id)&\n                 (db.snode.isleaf==True))\n            return db(q).count()\n\n    powerTable = plugins.powerTable\n    powerTable.datasource = t\n    powerTable.virtualfields = Virtual()\n    powerTable.dtfeatures["sScrollY"] = "100%"\n    powerTable.dtfeatures["sScrollX"] = "100%"\n    #powerTable.virtualfields = Virtual()\n    powerTable.headers = "labels"\n    powerTable.showkeycolumn = False\n    powerTable.dtfeatures["bJQueryUI"] = request.vars.get("jqueryui",True)\n    ## powerTable.uitheme = request.vars.get("theme","cupertino")\n    powerTable.uitheme = request.vars.get("theme","smoothness")\n    powerTable.dtfeatures["iDisplayLength"] = 25\n    powerTable.dtfeatures["aaSorting"] = [[6,\'desc\']]\n    powerTable.dtfeatures["sPaginationType"] = request.vars.get(\n        "pager","full_numbers"\n        ) # two_button scrolling\n    powerTable.columns = ["stree.id",\n                          "virtual.clade",\n                          "virtual.study_url",\n                          "virtual.tree_url",\n                          "virtual.ntax",\n                          ## "stree.contributor",\n                          "stree.uploaded"]\n    powerTable.hiddencolumns = ["stree.type"]\n\n    ## details = dict(detailscallback=URL(c="stree",f="details"))\n    powerTable.extra = dict(autoresize=True)\n   \n    return dict(table=powerTable.create())\n\ndef details():\n    return DIV()\n\ndef delete():\n    i = int(request.args(0) or 0)\n    rec = db.stree(i)\n    assert rec\n    db(db.snode.tree==i).delete()\n    rec.delete_record()\n\ndef _lookup_taxa(nodes):\n    def f(x):\n        try: float(x.label or "x"); return False\n        except: return True\n    v = [ (n.label or "").replace("_", " ") for n in filter(f, nodes) ]\n    t = db.taxon\n    rows = db(t.name.belongs(v)).select(t.name, t.id)\n    return dict([ (x.name, x.id) for x in rows ])\n\ndef _study_otus(study):\n    q = ((db.otu.study==db.study.id)&(db.study.id==study))\n    return db(q).select(db.otu.ALL)\n\ndef _insert_stree(study, data):\n    """\n    given form submission data, insert a source tree\n    \n    root = ivy.tree.read(data.newick)\n    assert root, data.newick\n    ivy.tree.index(root)\n    nodes = list(root)\n    lab2tax = _lookup_taxa(nodes)\n    lab2otu = dict([ (x.label, x) for x in _study_otus(study) ])\n    stree = db.stree.insert(**data)\n    db.stree[stree].update_record(study=study)\n    i2n = {}\n    for n in nodes:\n        label = (n.label or "").replace("_", " ")\n        taxid = lab2tax.get(label)\n        otu = None\n        if n.isleaf:\n            otu = lab2otu.get(label)\n            if otu and otu.taxon: taxid = otu.taxon\n            if not otu:\n                otu = db.otu.insert(study=study, label=label, taxon=taxid)\n\n        i = db.snode.insert(label=n.label, isleaf=n.isleaf, otu=otu,\n                            next=n.next, back=n.back, depth=n.depth,\n                            length=n.length, tree=stree, taxon=taxid,\n                            pruned=False)\n        n.id = i\n        i2n[i] = n\n    ##     n.rec = Storage(taxon=taxid)\n\n    ## node2anc, node2desc = link.suggest(db, root)\n    ## for n, s in node2anc.items():\n    ##     if s:\n    ##         taxid = sorted(s)[-1][1]\n    ##         db.snode[n.id].update_record(taxon=taxid)\n\n    t = db.snode\n    if data.clade_labels_represent == "bootstrap values":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        if n2sup:\n            m = max(n2sup.values())\n            if 1 <= m <= 101:\n                for n, sup in n2sup.items(): n2sup[n] = sup/100.\n            for n, sup in n2sup.items():\n                t[n.id].update_record(bootstrap_support=sup, label=None)\n\n    elif data.clade_labels_represent == "posterior support":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        for n, sup in n2sup.items():\n            t[n.id].update_record(posterior_support=sup, label=None)\n                \n    for n in nodes:\n        if n.parent:\n            t[n.id].update_record(parent=n.parent.id)\n        n.label = str(n.id)\n        n.length = None\n    db.stree[stree].update_record(newick_idstr=root.write())\n    return stree"""\n\n    datey = time.strftime( "%Y%m%d" )\n    ##print \'Remember this code for search: \' + datey\n\n\n    db = GraphDatabase(\'Test\')\n    print \'Your input is \' + data.newick\n\n    newickstring = StringIO(data.newick)\n\n    STRING = 1\n    stringdata = list(token[STRING] for token\n         in generate_tokens(newickstring.readline)\n         if token[STRING])\n\n    exists = db.node.indexes.exists(\'tree\')\n\n    if exists == 0:\n        with db.transaction:\n            tree_idx = db.node.indexes.create(\'tree\')\n\n    elif exists == 1:\n        tree_idx = db.node.indexes.get(\'tree\')\n\n    ##i is counter\n    i=0\n    value = stringdata[i]\n    nextvalue = stringdata[i+1]\n\n    ##print value\n    ##print nextvalue\n\n    first = 0\n    mynodelist=[]\n    with db.transaction:\n        node = db.node()\n        root = db.node(name="Root")\n        root[\'date\'] = nowdate  \n        root[\'uID\'] = newID\n        relationship = root.is_root(node)\n        ID = root.id\n\n    ##print ID\n\n    lp = 0\n    rp = 0\n\n    for i in range(0, len(stringdata)):\n        if value == \'(\':\n            first+=1\n            lp += 1\n            with db.transaction:\n                newnode = db.node()\n                relationship = newnode.has_parent(node)\n                ##print node\n                node = newnode\n                ##print newnode\n        elif value == \')\':\n            rp += 1\n            if i==len(stringdata)-1:\n                continue\n            else:\n                check = stringdata[i+1]\n                if re.match("^[A-Za-z]*$", check):\n                    with db.transaction:\n                        for rel in newnode.has_parent.outgoing:\n                            ##print node\n                            node = rel.end\n                            node[\'label\']=check           \n                else:\n                    with db.transaction:\n                        for rel in newnode.has_parent.outgoing:\n                            ##print node\n                            node = rel.end\n                            ##print node\n        elif value == \',\':\n            with db.transaction:\n                for rel in node.has_parent.outgoing:\n                    node = rel.end\n                    ##print node\n        elif value == \';\':\n            break\n        elif value == \':\':\n           ## print stringdata[i+1]\n            branchlength = float(stringdata[i+1])\n            with db.transaction:\n                node[\'length\'] = branchlength\n        else:\n            try:\n                ##print float(value)               \n            except ValueError:\n                if lp == rp:\n                    continue\n                elif oldvalue == \')\':\n                    continue\n                else:\n                    if first == 1:\n                        with db.transaction:\n                            node[\'label\']=value\n                            ##print node\n                            ##print value\n                            first += 1\n                    else:\n                        with db.transaction:\n                            newnode = db.node()\n                            relationship = newnode.has_parent(node)\n                            mynodelist.append(db.node(name=value))\n                            newnode[\'label\']=value\n                            node = newnode\n                            ##print newnode\n                            ##print value                \n        if i <= len(stringdata)-2:\n            nextvalue = stringdata[i+1]\n        i+=1\n        oldvalue = value\n        value = nextvalue\n\n    db.shutdown()\n\n#@auth.requires_membership(\'contributor\')\n@auth.requires_login()\n\ndef create():\n    study = db.study(request.args(0)) or redirect(URL("index"))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    \n    fields = ["study", "contributor", "newick",\n              "author_contributed",\n              "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    form = SQLFORM(db.stree, fields=fields)\n    form.vars.study=int(study)\n\n    name = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    form.vars.contributor = name\n    ## form.vars.newick = "(a,(b,((c,d),(e,f))));"\n    ## form.vars.comment = "test test"\n    ## base = "/home/rree/Dropbox/phylografter/private/Jansen-2007-PNAS/"\n    ## form.vars.newick = file(base+"Jansen_2007.newick").read()\n    ## form.vars.comment = "RAxML bootstrap tree; re-analysis of published data"\n    ## form.vars.type = "RAxML 7.2.6 bootstrap"\n    \n    treestr = ""\n    if form.accepts(request.vars, session, dbio=False):\n        response.flash ="accepted"\n        session.contributor = form.vars.contributor\n        i = _insert_stree(study, form.vars)\n        redirect(URL("v", args=[i]))\n\n    return dict(form=form)\n    \ndef edit():\n    rec = db.stree(request.args(0))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[v])\n        return A(_study_rep(db.study(v)), _href=u)\n    db.stree.study.widget = w\n    response.subtitle = "Edit source tree %s" % rec.id\n    fields = ["study", "contributor", "newick", "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    readonly = not auth.has_membership(role="contributor")\n    form = SQLFORM(db.stree, int(rec), fields=fields, showid=False,\n                   deletable=False, submit_button="Update record",\n                   readonly=readonly)\n    form.vars.study = rec.id\n    if form.accepts(request.vars, session):\n        response.flash = "record updated"\n    return dict(form=form)\n\ndef view():\n    return dict()\n\ndef sunburst():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef d3():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\n\ndef svgView():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef editOTUs():\n    response.title = \'Edit OTUs\'\n    return dict()\n\ndef getNodeInfo():\n    i = int(request.vars.nodeId)\n    node = db.snode[i]\n    color = "black"\n    label = node.label or "[%s]" % node.id\n    if node.taxon:\n        label = node.taxon.name\n        color = "green"\n    return {\'nodeId\': node.id, \'label\': label, \'labelcolor\': color}\n\ndef v():\n    rec = db.stree(request.args(0) or 0)\n    study = db.study(rec.study)\n    u = URL(c="study",f="view",args=[study.id])\n    study = A(_study_rep(study), _href=u, _target="_blank")\n    wscale = float(request.vars.wscale or 0.9)\n    wider = wscale+0.1; narrower = max(0.1, wscale-0.1)\n    wider = A("wider", _href=URL(args=request.args,\n                                 vars=dict(wscale="%0.1f" % wider)))\n    narrower = A("narrower", _href=URL(args=request.args,\n                                       vars=dict(wscale="%0.1f" % narrower)))\n    \n    treeurl = URL(c=\'stree\',f=\'treediv\',args=request.args,vars=request.vars)\n    return dict(treeurl=treeurl, wider=wider, narrower=narrower, study=study)\n\ndef load_html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n    return dict(tree=div)\n\ndef treediv():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    wscale = float(request.vars.wscale or 0.9)\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f,\n                                          wscale=wscale)\n    return div.xml()\n\ndef html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n\n    modal = PluginMModal(id="mymodal", title="Edit node properties", content="")\n    mid = modal.id; cid = "c"+mid\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return "hbranch_clicked(%s, \'%s\', \'%s\', \'%s\');" % (nid, u, mid, cid)\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n\n    return dict(tree=div, root=root, modal=modal, w=w, h=h)\n\n\ndef modalTreeObj():\n    return dict( tree = build.stree( db, request.args[0] ) )\n\n\ndef suggest():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    \n@auth.requires_membership(\'contributor\')\ndef import_cached_nexml():\n    key = "uploaded_nexml_%s" % auth.user.id\n    contributor = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    ## nexml = cache.ram(key, lambda:None, time_expire=10000)\n    nexml = cache.ram(key, lambda:None, time_expire=10000)\n    if not nexml:\n        session.flash = "Please upload the Nexml file again"\n        redirect(URL(\'study\',\'tbimport\'))\n    cache.ram(key, lambda:nexml, time_expire=10000)\n    get = lambda x: nexml.meta.get(x) or None\n    treebase_id = int(get(\'tb:identifier.study\'))\n    study = db(db.study.treebase_id==treebase_id).select().first()\n    if not study:\n        session.flash = \'Study record needed!\'\n        redirect(URL(\'study\',\'tbimport2\'))\n    d = dict([ (x.attrib.id, x) for x in nexml.trees ])\n    t = d.get(request.args(0))\n    if not t:\n        session.flash = \'Cannot find tree in cache\'\n        redirect(URL(\'study\',\'tbimport2\'))\n\n    ivy.tree.index(t.root)\n\n    for n in t.root.leaves():\n        if not n.otu.otu:\n            session.flash = \'Leaf node %s lacks OTU record\' % (n.label or n.id)\n            redirect(URL(\'study\',\'tbimport2\'))\n\n    ## for leaf in t.root.leaves():\n    ##     print leaf.__dict__\n    ## for k, v in nexml.otus.items():\n    ##     print v\n\n    #print t.root.write()\n    ## print t.attrib\n    \n    sdata = dict(study=study.id,\n                 contributor=contributor,\n                 newick=t.root.write().replace(" ", "_"),\n                 author_contributed=True,\n                 tb_tree_id=t.attrib.id,\n                 type=t.attrib.label)\n\n    for k,v in sdata.items():\n        db.stree[k].default=v\n\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    db.stree.uploaded.readable=False\n    form = SQLFORM(db.stree)\n    if form.accepts(request.vars, session):\n\n        bootstraps = {}\n        if form.vars.clade_labels_represent == "bootstrap values":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "bootstrap values":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.length = None\n\n        if bootstraps:\n            m = max(bootstraps.values())\n            if 1 <= m <= 101:\n                for n, sup in bootstraps.items():\n                    bootstraps[n] = sup/100.\n\n        posteriors = {}\n        if form.vars.clade_labels_represent == "posterior support":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: posteriors[n] = float(n.label)\n                except ValueError: pass\n            for n in posteriors:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "posterior support":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                posteriors[n] = n.length\n            for n in posteriors:\n                n.length = None\n\n        for d in filter(None, (bootstraps, posteriors)):\n            m = max(d.values())\n            if 1 <= m <= 101:\n                for n, sup in d.items():\n                    d[n] = sup/100.\n\n        i2n = {}\n        for n in t.root.iternodes():\n            taxid = None\n            label = n.otu.otu.label if n.isleaf and n.otu.otu else n.label\n            if n.isleaf and n.otu.otu and n.otu.otu.taxon:\n                taxid = n.otu.otu.taxon\n            else:\n                taxon = db(db.taxon.name==label).select().first()\n                if taxon: taxid=taxon.id\n\n            i = db.snode.insert(label=label,\n                                isleaf=n.isleaf,\n                                otu=n.otu.otu.id if n.isleaf and n.otu else None,\n                                next=n.next, back=n.back, depth=n.depth,\n                                length=n.length,\n                                bootstrap_support=bootstraps.get(n),\n                                posterior_support=posteriors.get(n),\n                                tree=form.vars.id,\n                                taxon=taxid,\n                                pruned=False)\n            n.id = i\n            i2n[i] = n\n\n        for n in t.root.iternodes():\n            if n.parent:\n                db.snode[n.id].update_record(parent=n.parent.id)\n            n.label = str(n.id)\n            n.length = None\n        db.stree[form.vars.id].update_record(newick_idstr=t.root.write())\n\n        session.flash = \'tree %s inserted\' % t.attrib.id\n        redirect(URL(\'study\',\'tbimport_trees\'))\n\n    return dict(study=study, tree=t, form=form)\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.IndentationError object>"
p13
sS'text'
p14
S"'            except ValueError:\\n'"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.IndentationError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.IndentationError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.IndentationError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.IndentationError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.IndentationError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.IndentationError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.IndentationError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.IndentationError'>"
p35
sS'filename'
p36
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p37
sS'lineno'
p38
S'269'
p39
sS'msg'
p40
S"'expected an indented block'"
p41
sS'__doc__'
p42
S"'Improper indentation.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.IndentationError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.IndentationError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.IndentationError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S"('expected an indented block', (r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py', 269, 18, '            except ValueError:\\n'))"
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'18'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.IndentationError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.IndentationError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.IndentationError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.IndentationError object>"
p65
ssS'evalue'
p66
S'expected an indented block (controllers/stree.py, line 269)'
p67
sS'request'
p68
ccopy_reg
_reconstructor
p69
(cgluon.html
BEAUTIFY
p70
c__builtin__
object
p71
NtRp72
(dp73
S'attributes'
p74
(dp75
sS'components'
p76
(lp77
g69
(cgluon.html
TABLE
p78
g71
NtRp79
(dp80
g74
(dp81
S'level'
p82
I5
ssS'parent'
p83
Nsg76
(lp84
g69
(cgluon.html
TR
p85
g71
NtRp86
(dp87
g74
(dp88
sg83
g79
sg76
(lp89
g69
(cgluon.html
TD
p90
g71
NtRp91
(dp92
g74
(dp93
S'_style'
p94
S'font-weight:bold;vertical-align:top'
p95
ssg83
g86
sg76
(lp96
S'ajax'
p97
asbag69
(g90
g71
NtRp98
(dp99
g74
(dp100
S'_valign'
p101
S'top'
p102
ssg83
g86
sg76
(lp103
S':'
asbag69
(g90
g71
NtRp104
(dp105
g74
(dp106
sg83
g86
sg76
(lp107
g69
(g70
g71
NtRp108
(dp109
g74
(dp110
g82
I5
ssg83
g104
sg76
(lp111
S'False'
p112
asbasbasbag69
(g85
g71
NtRp113
(dp114
g74
(dp115
sg83
g79
sg76
(lp116
g69
(g90
g71
NtRp117
(dp118
g74
(dp119
g94
g95
ssg83
g113
sg76
(lp120
S'application'
p121
asbag69
(g90
g71
NtRp122
(dp123
g74
(dp124
g101
g102
ssg83
g113
sg76
(lp125
S':'
asbag69
(g90
g71
NtRp126
(dp127
g74
(dp128
sg83
g113
sg76
(lp129
g69
(g70
g71
NtRp130
(dp131
g74
(dp132
g82
I5
ssg83
g126
sg76
(lp133
S'Phylografter'
p134
asbasbasbag69
(g85
g71
NtRp135
(dp136
g74
(dp137
sg83
g79
sg76
(lp138
g69
(g90
g71
NtRp139
(dp140
g74
(dp141
g94
g95
ssg83
g135
sg76
(lp142
g52
asbag69
(g90
g71
NtRp143
(dp144
g74
(dp145
g101
g102
ssg83
g135
sg76
(lp146
S':'
asbag69
(g90
g71
NtRp147
(dp148
g74
(dp149
sg83
g135
sg76
(lp150
g69
(g70
g71
NtRp151
(dp152
g74
(dp153
g82
I5
ssg83
g147
sg76
(lp154
g69
(g78
g71
NtRp155
(dp156
g74
(dp157
g82
I4
ssg83
Nsg76
(lp158
sbasbasbasbag69
(g85
g71
NtRp159
(dp160
g74
(dp161
sg83
g79
sg76
(lp162
g69
(g90
g71
NtRp163
(dp164
g74
(dp165
g94
g95
ssg83
g159
sg76
(lp166
S'body'
p167
asbag69
(g90
g71
NtRp168
(dp169
g74
(dp170
g101
g102
ssg83
g159
sg76
(lp171
S':'
asbag69
(g90
g71
NtRp172
(dp173
g74
(dp174
sg83
g159
sg76
(lp175
g69
(g70
g71
NtRp176
(dp177
g74
(dp178
g82
I5
ssg83
g172
sg76
(lp179
S'<cStringIO.StringO object at 0x049E7640>'
p180
asbasbasbag69
(g85
g71
NtRp181
(dp182
g74
(dp183
sg83
g79
sg76
(lp184
g69
(g90
g71
NtRp185
(dp186
g74
(dp187
g94
g95
ssg83
g181
sg76
(lp188
S'client'
p189
asbag69
(g90
g71
NtRp190
(dp191
g74
(dp192
g101
g102
ssg83
g181
sg76
(lp193
S':'
asbag69
(g90
g71
NtRp194
(dp195
g74
(dp196
sg83
g181
sg76
(lp197
g69
(g70
g71
NtRp198
(dp199
g74
(dp200
g82
I5
ssg83
g194
sg76
(lp201
S'127.0.0.1'
p202
asbasbasbag69
(g85
g71
NtRp203
(dp204
g74
(dp205
sg83
g79
sg76
(lp206
g69
(g90
g71
NtRp207
(dp208
g74
(dp209
g94
g95
ssg83
g203
sg76
(lp210
S'controller'
p211
asbag69
(g90
g71
NtRp212
(dp213
g74
(dp214
g101
g102
ssg83
g203
sg76
(lp215
S':'
asbag69
(g90
g71
NtRp216
(dp217
g74
(dp218
sg83
g203
sg76
(lp219
g69
(g70
g71
NtRp220
(dp221
g74
(dp222
g82
I5
ssg83
g216
sg76
(lp223
S'stree'
p224
asbasbasbag69
(g85
g71
NtRp225
(dp226
g74
(dp227
sg83
g79
sg76
(lp228
g69
(g90
g71
NtRp229
(dp230
g74
(dp231
g94
g95
ssg83
g225
sg76
(lp232
S'cookies'
p233
asbag69
(g90
g71
NtRp234
(dp235
g74
(dp236
g101
g102
ssg83
g225
sg76
(lp237
S':'
asbag69
(g90
g71
NtRp238
(dp239
g74
(dp240
sg83
g225
sg76
(lp241
g69
(g70
g71
NtRp242
(dp243
g74
(dp244
g82
I5
ssg83
g238
sg76
(lp245
g69
(g78
g71
NtRp246
(dp247
g74
(dp248
g82
I4
ssg83
Nsg76
(lp249
g69
(g85
g71
NtRp250
(dp251
g74
(dp252
sg83
g246
sg76
(lp253
g69
(g90
g71
NtRp254
(dp255
g74
(dp256
g94
g95
ssg83
g250
sg76
(lp257
S'session_id_phylografter'
p258
asbag69
(g90
g71
NtRp259
(dp260
g74
(dp261
g101
g102
ssg83
g250
sg76
(lp262
S':'
asbag69
(g90
g71
NtRp263
(dp264
g74
(dp265
sg83
g250
sg76
(lp266
g69
(g70
g71
NtRp267
(dp268
g74
(dp269
g82
I4
ssg83
g263
sg76
(lp270
g69
(g78
g71
NtRp271
(dp272
g74
(dp273
g82
I3
ssg83
Nsg76
(lp274
g69
(g85
g71
NtRp275
(dp276
g74
(dp277
sg83
g271
sg76
(lp278
g69
(g90
g71
NtRp279
(dp280
g74
(dp281
g94
g95
ssg83
g275
sg76
(lp282
S'comment'
p283
asbag69
(g90
g71
NtRp284
(dp285
g74
(dp286
g101
g102
ssg83
g275
sg76
(lp287
S':'
asbag69
(g90
g71
NtRp288
(dp289
g74
(dp290
sg83
g275
sg76
(lp291
g69
(g70
g71
NtRp292
(dp293
g74
(dp294
g82
I3
ssg83
g288
sg76
(lp295
S''
asbasbasbag69
(g85
g71
NtRp296
(dp297
g74
(dp298
sg83
g271
sg76
(lp299
g69
(g90
g71
NtRp300
(dp301
g74
(dp302
g94
g95
ssg83
g296
sg76
(lp303
S'domain'
p304
asbag69
(g90
g71
NtRp305
(dp306
g74
(dp307
g101
g102
ssg83
g296
sg76
(lp308
S':'
asbag69
(g90
g71
NtRp309
(dp310
g74
(dp311
sg83
g296
sg76
(lp312
g69
(g70
g71
NtRp313
(dp314
g74
(dp315
g82
I3
ssg83
g309
sg76
(lp316
S''
asbasbasbag69
(g85
g71
NtRp317
(dp318
g74
(dp319
sg83
g271
sg76
(lp320
g69
(g90
g71
NtRp321
(dp322
g74
(dp323
g94
g95
ssg83
g317
sg76
(lp324
S'expires'
p325
asbag69
(g90
g71
NtRp326
(dp327
g74
(dp328
g101
g102
ssg83
g317
sg76
(lp329
S':'
asbag69
(g90
g71
NtRp330
(dp331
g74
(dp332
sg83
g317
sg76
(lp333
g69
(g70
g71
NtRp334
(dp335
g74
(dp336
g82
I3
ssg83
g330
sg76
(lp337
S''
asbasbasbag69
(g85
g71
NtRp338
(dp339
g74
(dp340
sg83
g271
sg76
(lp341
g69
(g90
g71
NtRp342
(dp343
g74
(dp344
g94
g95
ssg83
g338
sg76
(lp345
S'httponly'
p346
asbag69
(g90
g71
NtRp347
(dp348
g74
(dp349
g101
g102
ssg83
g338
sg76
(lp350
S':'
asbag69
(g90
g71
NtRp351
(dp352
g74
(dp353
sg83
g338
sg76
(lp354
g69
(g70
g71
NtRp355
(dp356
g74
(dp357
g82
I3
ssg83
g351
sg76
(lp358
S''
asbasbasbag69
(g85
g71
NtRp359
(dp360
g74
(dp361
sg83
g271
sg76
(lp362
g69
(g90
g71
NtRp363
(dp364
g74
(dp365
g94
g95
ssg83
g359
sg76
(lp366
S'max-age'
p367
asbag69
(g90
g71
NtRp368
(dp369
g74
(dp370
g101
g102
ssg83
g359
sg76
(lp371
S':'
asbag69
(g90
g71
NtRp372
(dp373
g74
(dp374
sg83
g359
sg76
(lp375
g69
(g70
g71
NtRp376
(dp377
g74
(dp378
g82
I3
ssg83
g372
sg76
(lp379
S''
asbasbasbag69
(g85
g71
NtRp380
(dp381
g74
(dp382
sg83
g271
sg76
(lp383
g69
(g90
g71
NtRp384
(dp385
g74
(dp386
g94
g95
ssg83
g380
sg76
(lp387
S'path'
p388
asbag69
(g90
g71
NtRp389
(dp390
g74
(dp391
g101
g102
ssg83
g380
sg76
(lp392
S':'
asbag69
(g90
g71
NtRp393
(dp394
g74
(dp395
sg83
g380
sg76
(lp396
g69
(g70
g71
NtRp397
(dp398
g74
(dp399
g82
I3
ssg83
g393
sg76
(lp400
S''
asbasbasbag69
(g85
g71
NtRp401
(dp402
g74
(dp403
sg83
g271
sg76
(lp404
g69
(g90
g71
NtRp405
(dp406
g74
(dp407
g94
g95
ssg83
g401
sg76
(lp408
S'secure'
p409
asbag69
(g90
g71
NtRp410
(dp411
g74
(dp412
g101
g102
ssg83
g401
sg76
(lp413
S':'
asbag69
(g90
g71
NtRp414
(dp415
g74
(dp416
sg83
g401
sg76
(lp417
g69
(g70
g71
NtRp418
(dp419
g74
(dp420
g82
I3
ssg83
g414
sg76
(lp421
S''
asbasbasbag69
(g85
g71
NtRp422
(dp423
g74
(dp424
sg83
g271
sg76
(lp425
g69
(g90
g71
NtRp426
(dp427
g74
(dp428
g94
g95
ssg83
g422
sg76
(lp429
S'version'
p430
asbag69
(g90
g71
NtRp431
(dp432
g74
(dp433
g101
g102
ssg83
g422
sg76
(lp434
S':'
asbag69
(g90
g71
NtRp435
(dp436
g74
(dp437
sg83
g422
sg76
(lp438
g69
(g70
g71
NtRp439
(dp440
g74
(dp441
g82
I3
ssg83
g435
sg76
(lp442
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp443
(dp444
g74
(dp445
sg83
g246
sg76
(lp446
g69
(g90
g71
NtRp447
(dp448
g74
(dp449
g94
g95
ssg83
g443
sg76
(lp450
S'session_id_welcome'
p451
asbag69
(g90
g71
NtRp452
(dp453
g74
(dp454
g101
g102
ssg83
g443
sg76
(lp455
S':'
asbag69
(g90
g71
NtRp456
(dp457
g74
(dp458
sg83
g443
sg76
(lp459
g69
(g70
g71
NtRp460
(dp461
g74
(dp462
g82
I4
ssg83
g456
sg76
(lp463
g69
(g78
g71
NtRp464
(dp465
g74
(dp466
g82
I3
ssg83
Nsg76
(lp467
g69
(g85
g71
NtRp468
(dp469
g74
(dp470
sg83
g464
sg76
(lp471
g69
(g90
g71
NtRp472
(dp473
g74
(dp474
g94
g95
ssg83
g468
sg76
(lp475
g283
asbag69
(g90
g71
NtRp476
(dp477
g74
(dp478
g101
g102
ssg83
g468
sg76
(lp479
S':'
asbag69
(g90
g71
NtRp480
(dp481
g74
(dp482
sg83
g468
sg76
(lp483
g69
(g70
g71
NtRp484
(dp485
g74
(dp486
g82
I3
ssg83
g480
sg76
(lp487
S''
asbasbasbag69
(g85
g71
NtRp488
(dp489
g74
(dp490
sg83
g464
sg76
(lp491
g69
(g90
g71
NtRp492
(dp493
g74
(dp494
g94
g95
ssg83
g488
sg76
(lp495
g304
asbag69
(g90
g71
NtRp496
(dp497
g74
(dp498
g101
g102
ssg83
g488
sg76
(lp499
S':'
asbag69
(g90
g71
NtRp500
(dp501
g74
(dp502
sg83
g488
sg76
(lp503
g69
(g70
g71
NtRp504
(dp505
g74
(dp506
g82
I3
ssg83
g500
sg76
(lp507
S''
asbasbasbag69
(g85
g71
NtRp508
(dp509
g74
(dp510
sg83
g464
sg76
(lp511
g69
(g90
g71
NtRp512
(dp513
g74
(dp514
g94
g95
ssg83
g508
sg76
(lp515
g325
asbag69
(g90
g71
NtRp516
(dp517
g74
(dp518
g101
g102
ssg83
g508
sg76
(lp519
S':'
asbag69
(g90
g71
NtRp520
(dp521
g74
(dp522
sg83
g508
sg76
(lp523
g69
(g70
g71
NtRp524
(dp525
g74
(dp526
g82
I3
ssg83
g520
sg76
(lp527
S''
asbasbasbag69
(g85
g71
NtRp528
(dp529
g74
(dp530
sg83
g464
sg76
(lp531
g69
(g90
g71
NtRp532
(dp533
g74
(dp534
g94
g95
ssg83
g528
sg76
(lp535
g346
asbag69
(g90
g71
NtRp536
(dp537
g74
(dp538
g101
g102
ssg83
g528
sg76
(lp539
S':'
asbag69
(g90
g71
NtRp540
(dp541
g74
(dp542
sg83
g528
sg76
(lp543
g69
(g70
g71
NtRp544
(dp545
g74
(dp546
g82
I3
ssg83
g540
sg76
(lp547
S''
asbasbasbag69
(g85
g71
NtRp548
(dp549
g74
(dp550
sg83
g464
sg76
(lp551
g69
(g90
g71
NtRp552
(dp553
g74
(dp554
g94
g95
ssg83
g548
sg76
(lp555
g367
asbag69
(g90
g71
NtRp556
(dp557
g74
(dp558
g101
g102
ssg83
g548
sg76
(lp559
S':'
asbag69
(g90
g71
NtRp560
(dp561
g74
(dp562
sg83
g548
sg76
(lp563
g69
(g70
g71
NtRp564
(dp565
g74
(dp566
g82
I3
ssg83
g560
sg76
(lp567
S''
asbasbasbag69
(g85
g71
NtRp568
(dp569
g74
(dp570
sg83
g464
sg76
(lp571
g69
(g90
g71
NtRp572
(dp573
g74
(dp574
g94
g95
ssg83
g568
sg76
(lp575
g388
asbag69
(g90
g71
NtRp576
(dp577
g74
(dp578
g101
g102
ssg83
g568
sg76
(lp579
S':'
asbag69
(g90
g71
NtRp580
(dp581
g74
(dp582
sg83
g568
sg76
(lp583
g69
(g70
g71
NtRp584
(dp585
g74
(dp586
g82
I3
ssg83
g580
sg76
(lp587
S''
asbasbasbag69
(g85
g71
NtRp588
(dp589
g74
(dp590
sg83
g464
sg76
(lp591
g69
(g90
g71
NtRp592
(dp593
g74
(dp594
g94
g95
ssg83
g588
sg76
(lp595
g409
asbag69
(g90
g71
NtRp596
(dp597
g74
(dp598
g101
g102
ssg83
g588
sg76
(lp599
S':'
asbag69
(g90
g71
NtRp600
(dp601
g74
(dp602
sg83
g588
sg76
(lp603
g69
(g70
g71
NtRp604
(dp605
g74
(dp606
g82
I3
ssg83
g600
sg76
(lp607
S''
asbasbasbag69
(g85
g71
NtRp608
(dp609
g74
(dp610
sg83
g464
sg76
(lp611
g69
(g90
g71
NtRp612
(dp613
g74
(dp614
g94
g95
ssg83
g608
sg76
(lp615
g430
asbag69
(g90
g71
NtRp616
(dp617
g74
(dp618
g101
g102
ssg83
g608
sg76
(lp619
S':'
asbag69
(g90
g71
NtRp620
(dp621
g74
(dp622
sg83
g608
sg76
(lp623
g69
(g70
g71
NtRp624
(dp625
g74
(dp626
g82
I3
ssg83
g620
sg76
(lp627
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp628
(dp629
g74
(dp630
sg83
g79
sg76
(lp631
g69
(g90
g71
NtRp632
(dp633
g74
(dp634
g94
g95
ssg83
g628
sg76
(lp635
S'env'
p636
asbag69
(g90
g71
NtRp637
(dp638
g74
(dp639
g101
g102
ssg83
g628
sg76
(lp640
S':'
asbag69
(g90
g71
NtRp641
(dp642
g74
(dp643
sg83
g628
sg76
(lp644
g69
(g70
g71
NtRp645
(dp646
g74
(dp647
g82
I5
ssg83
g641
sg76
(lp648
g69
(g78
g71
NtRp649
(dp650
g74
(dp651
g82
I4
ssg83
Nsg76
(lp652
g69
(g85
g71
NtRp653
(dp654
g74
(dp655
sg83
g649
sg76
(lp656
g69
(g90
g71
NtRp657
(dp658
g74
(dp659
g94
g95
ssg83
g653
sg76
(lp660
S'app_folders'
p661
asbag69
(g90
g71
NtRp662
(dp663
g74
(dp664
g101
g102
ssg83
g653
sg76
(lp665
S':'
asbag69
(g90
g71
NtRp666
(dp667
g74
(dp668
sg83
g653
sg76
(lp669
g69
(g70
g71
NtRp670
(dp671
g74
(dp672
g82
I4
ssg83
g666
sg76
(lp673
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p674
asbasbasbag69
(g85
g71
NtRp675
(dp676
g74
(dp677
sg83
g649
sg76
(lp678
g69
(g90
g71
NtRp679
(dp680
g74
(dp681
g94
g95
ssg83
g675
sg76
(lp682
S'applications_parent'
p683
asbag69
(g90
g71
NtRp684
(dp685
g74
(dp686
g101
g102
ssg83
g675
sg76
(lp687
S':'
asbag69
(g90
g71
NtRp688
(dp689
g74
(dp690
sg83
g675
sg76
(lp691
g69
(g70
g71
NtRp692
(dp693
g74
(dp694
g82
I4
ssg83
g688
sg76
(lp695
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p696
asbasbasbag69
(g85
g71
NtRp697
(dp698
g74
(dp699
sg83
g649
sg76
(lp700
g69
(g90
g71
NtRp701
(dp702
g74
(dp703
g94
g95
ssg83
g697
sg76
(lp704
S'cmd_args'
p705
asbag69
(g90
g71
NtRp706
(dp707
g74
(dp708
g101
g102
ssg83
g697
sg76
(lp709
S':'
asbag69
(g90
g71
NtRp710
(dp711
g74
(dp712
sg83
g697
sg76
(lp713
g69
(g70
g71
NtRp714
(dp715
g74
(dp716
g82
I4
ssg83
g710
sg76
(lp717
g69
(g78
g71
NtRp718
(dp719
g74
(dp720
g82
I3
ssg83
Nsg76
(lp721
sbasbasbasbag69
(g85
g71
NtRp722
(dp723
g74
(dp724
sg83
g649
sg76
(lp725
g69
(g90
g71
NtRp726
(dp727
g74
(dp728
g94
g95
ssg83
g722
sg76
(lp729
S'cmd_options'
p730
asbag69
(g90
g71
NtRp731
(dp732
g74
(dp733
g101
g102
ssg83
g722
sg76
(lp734
S':'
asbag69
(g90
g71
NtRp735
(dp736
g74
(dp737
sg83
g722
sg76
(lp738
g69
(g70
g71
NtRp739
(dp740
g74
(dp741
g82
I4
ssg83
g735
sg76
(lp742
S"<Values at 0x1750f08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p743
asbasbasbag69
(g85
g71
NtRp744
(dp745
g74
(dp746
sg83
g649
sg76
(lp747
g69
(g90
g71
NtRp748
(dp749
g74
(dp750
g94
g95
ssg83
g744
sg76
(lp751
S'db_sessions'
p752
asbag69
(g90
g71
NtRp753
(dp754
g74
(dp755
g101
g102
ssg83
g744
sg76
(lp756
S':'
asbag69
(g90
g71
NtRp757
(dp758
g74
(dp759
sg83
g744
sg76
(lp760
g69
(g70
g71
NtRp761
(dp762
g74
(dp763
g82
I4
ssg83
g757
sg76
(lp764
S'set([])'
p765
asbasbasbag69
(g85
g71
NtRp766
(dp767
g74
(dp768
sg83
g649
sg76
(lp769
g69
(g90
g71
NtRp770
(dp771
g74
(dp772
g94
g95
ssg83
g766
sg76
(lp773
S'debugging'
p774
asbag69
(g90
g71
NtRp775
(dp776
g74
(dp777
g101
g102
ssg83
g766
sg76
(lp778
S':'
asbag69
(g90
g71
NtRp779
(dp780
g74
(dp781
sg83
g766
sg76
(lp782
g69
(g70
g71
NtRp783
(dp784
g74
(dp785
g82
I4
ssg83
g779
sg76
(lp786
g112
asbasbasbag69
(g85
g71
NtRp787
(dp788
g74
(dp789
sg83
g649
sg76
(lp790
g69
(g90
g71
NtRp791
(dp792
g74
(dp793
g94
g95
ssg83
g787
sg76
(lp794
S'gluon_parent'
p795
asbag69
(g90
g71
NtRp796
(dp797
g74
(dp798
g101
g102
ssg83
g787
sg76
(lp799
S':'
asbag69
(g90
g71
NtRp800
(dp801
g74
(dp802
sg83
g787
sg76
(lp803
g69
(g70
g71
NtRp804
(dp805
g74
(dp806
g82
I4
ssg83
g800
sg76
(lp807
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p808
asbasbasbag69
(g85
g71
NtRp809
(dp810
g74
(dp811
sg83
g649
sg76
(lp812
g69
(g90
g71
NtRp813
(dp814
g74
(dp815
g94
g95
ssg83
g809
sg76
(lp816
S'http_accept'
p817
asbag69
(g90
g71
NtRp818
(dp819
g74
(dp820
g101
g102
ssg83
g809
sg76
(lp821
S':'
asbag69
(g90
g71
NtRp822
(dp823
g74
(dp824
sg83
g809
sg76
(lp825
g69
(g70
g71
NtRp826
(dp827
g74
(dp828
g82
I4
ssg83
g822
sg76
(lp829
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p830
asbasbasbag69
(g85
g71
NtRp831
(dp832
g74
(dp833
sg83
g649
sg76
(lp834
g69
(g90
g71
NtRp835
(dp836
g74
(dp837
g94
g95
ssg83
g831
sg76
(lp838
S'http_accept_encoding'
p839
asbag69
(g90
g71
NtRp840
(dp841
g74
(dp842
g101
g102
ssg83
g831
sg76
(lp843
S':'
asbag69
(g90
g71
NtRp844
(dp845
g74
(dp846
sg83
g831
sg76
(lp847
g69
(g70
g71
NtRp848
(dp849
g74
(dp850
g82
I4
ssg83
g844
sg76
(lp851
S'gzip, deflate'
p852
asbasbasbag69
(g85
g71
NtRp853
(dp854
g74
(dp855
sg83
g649
sg76
(lp856
g69
(g90
g71
NtRp857
(dp858
g74
(dp859
g94
g95
ssg83
g853
sg76
(lp860
S'http_accept_language'
p861
asbag69
(g90
g71
NtRp862
(dp863
g74
(dp864
g101
g102
ssg83
g853
sg76
(lp865
S':'
asbag69
(g90
g71
NtRp866
(dp867
g74
(dp868
sg83
g853
sg76
(lp869
g69
(g70
g71
NtRp870
(dp871
g74
(dp872
g82
I4
ssg83
g866
sg76
(lp873
S'en-us,en;q=0.5'
p874
asbasbasbag69
(g85
g71
NtRp875
(dp876
g74
(dp877
sg83
g649
sg76
(lp878
g69
(g90
g71
NtRp879
(dp880
g74
(dp881
g94
g95
ssg83
g875
sg76
(lp882
S'http_connection'
p883
asbag69
(g90
g71
NtRp884
(dp885
g74
(dp886
g101
g102
ssg83
g875
sg76
(lp887
S':'
asbag69
(g90
g71
NtRp888
(dp889
g74
(dp890
sg83
g875
sg76
(lp891
g69
(g70
g71
NtRp892
(dp893
g74
(dp894
g82
I4
ssg83
g888
sg76
(lp895
S'keep-alive'
p896
asbasbasbag69
(g85
g71
NtRp897
(dp898
g74
(dp899
sg83
g649
sg76
(lp900
g69
(g90
g71
NtRp901
(dp902
g74
(dp903
g94
g95
ssg83
g897
sg76
(lp904
S'http_cookie'
p905
asbag69
(g90
g71
NtRp906
(dp907
g74
(dp908
g101
g102
ssg83
g897
sg76
(lp909
S':'
asbag69
(g90
g71
NtRp910
(dp911
g74
(dp912
sg83
g897
sg76
(lp913
g69
(g70
g71
NtRp914
(dp915
g74
(dp916
g82
I4
ssg83
g910
sg76
(lp917
S'session_id_welcome=127.0.0.1-19155b33-56c3-47ea-ad19-d1509a41985b; session_id_phylografter=127.0.0.1-90c20702-e455-4386-b647-23f5f1b84c7a'
p918
asbasbasbag69
(g85
g71
NtRp919
(dp920
g74
(dp921
sg83
g649
sg76
(lp922
g69
(g90
g71
NtRp923
(dp924
g74
(dp925
g94
g95
ssg83
g919
sg76
(lp926
S'http_host'
p927
asbag69
(g90
g71
NtRp928
(dp929
g74
(dp930
g101
g102
ssg83
g919
sg76
(lp931
S':'
asbag69
(g90
g71
NtRp932
(dp933
g74
(dp934
sg83
g919
sg76
(lp935
g69
(g70
g71
NtRp936
(dp937
g74
(dp938
g82
I4
ssg83
g932
sg76
(lp939
S'127.0.0.1:8000'
p940
asbasbasbag69
(g85
g71
NtRp941
(dp942
g74
(dp943
sg83
g649
sg76
(lp944
g69
(g90
g71
NtRp945
(dp946
g74
(dp947
g94
g95
ssg83
g941
sg76
(lp948
S'http_referer'
p949
asbag69
(g90
g71
NtRp950
(dp951
g74
(dp952
g101
g102
ssg83
g941
sg76
(lp953
S':'
asbag69
(g90
g71
NtRp954
(dp955
g74
(dp956
sg83
g941
sg76
(lp957
g69
(g70
g71
NtRp958
(dp959
g74
(dp960
g82
I4
ssg83
g954
sg76
(lp961
S'http://127.0.0.1:8000/Phylografter/default/index'
p962
asbasbasbag69
(g85
g71
NtRp963
(dp964
g74
(dp965
sg83
g649
sg76
(lp966
g69
(g90
g71
NtRp967
(dp968
g74
(dp969
g94
g95
ssg83
g963
sg76
(lp970
S'http_user_agent'
p971
asbag69
(g90
g71
NtRp972
(dp973
g74
(dp974
g101
g102
ssg83
g963
sg76
(lp975
S':'
asbag69
(g90
g71
NtRp976
(dp977
g74
(dp978
sg83
g963
sg76
(lp979
g69
(g70
g71
NtRp980
(dp981
g74
(dp982
g82
I4
ssg83
g976
sg76
(lp983
S'Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1'
p984
asbasbasbag69
(g85
g71
NtRp985
(dp986
g74
(dp987
sg83
g649
sg76
(lp988
g69
(g90
g71
NtRp989
(dp990
g74
(dp991
g94
g95
ssg83
g985
sg76
(lp992
S'is_jython'
p993
asbag69
(g90
g71
NtRp994
(dp995
g74
(dp996
g101
g102
ssg83
g985
sg76
(lp997
S':'
asbag69
(g90
g71
NtRp998
(dp999
g74
(dp1000
sg83
g985
sg76
(lp1001
g69
(g70
g71
NtRp1002
(dp1003
g74
(dp1004
g82
I4
ssg83
g998
sg76
(lp1005
g112
asbasbasbag69
(g85
g71
NtRp1006
(dp1007
g74
(dp1008
sg83
g649
sg76
(lp1009
g69
(g90
g71
NtRp1010
(dp1011
g74
(dp1012
g94
g95
ssg83
g1006
sg76
(lp1013
S'is_pypy'
p1014
asbag69
(g90
g71
NtRp1015
(dp1016
g74
(dp1017
g101
g102
ssg83
g1006
sg76
(lp1018
S':'
asbag69
(g90
g71
NtRp1019
(dp1020
g74
(dp1021
sg83
g1006
sg76
(lp1022
g69
(g70
g71
NtRp1023
(dp1024
g74
(dp1025
g82
I4
ssg83
g1019
sg76
(lp1026
g112
asbasbasbag69
(g85
g71
NtRp1027
(dp1028
g74
(dp1029
sg83
g649
sg76
(lp1030
g69
(g90
g71
NtRp1031
(dp1032
g74
(dp1033
g94
g95
ssg83
g1027
sg76
(lp1034
S'path_info'
p1035
asbag69
(g90
g71
NtRp1036
(dp1037
g74
(dp1038
g101
g102
ssg83
g1027
sg76
(lp1039
S':'
asbag69
(g90
g71
NtRp1040
(dp1041
g74
(dp1042
sg83
g1027
sg76
(lp1043
g69
(g70
g71
NtRp1044
(dp1045
g74
(dp1046
g82
I4
ssg83
g1040
sg76
(lp1047
S'/Phylografter/stree/index'
p1048
asbasbasbag69
(g85
g71
NtRp1049
(dp1050
g74
(dp1051
sg83
g649
sg76
(lp1052
g69
(g90
g71
NtRp1053
(dp1054
g74
(dp1055
g94
g95
ssg83
g1049
sg76
(lp1056
S'query_string'
p1057
asbag69
(g90
g71
NtRp1058
(dp1059
g74
(dp1060
g101
g102
ssg83
g1049
sg76
(lp1061
S':'
asbag69
(g90
g71
NtRp1062
(dp1063
g74
(dp1064
sg83
g1049
sg76
(lp1065
g69
(g70
g71
NtRp1066
(dp1067
g74
(dp1068
g82
I4
ssg83
g1062
sg76
(lp1069
S''
asbasbasbag69
(g85
g71
NtRp1070
(dp1071
g74
(dp1072
sg83
g649
sg76
(lp1073
g69
(g90
g71
NtRp1074
(dp1075
g74
(dp1076
g94
g95
ssg83
g1070
sg76
(lp1077
S'remote_addr'
p1078
asbag69
(g90
g71
NtRp1079
(dp1080
g74
(dp1081
g101
g102
ssg83
g1070
sg76
(lp1082
S':'
asbag69
(g90
g71
NtRp1083
(dp1084
g74
(dp1085
sg83
g1070
sg76
(lp1086
g69
(g70
g71
NtRp1087
(dp1088
g74
(dp1089
g82
I4
ssg83
g1083
sg76
(lp1090
g202
asbasbasbag69
(g85
g71
NtRp1091
(dp1092
g74
(dp1093
sg83
g649
sg76
(lp1094
g69
(g90
g71
NtRp1095
(dp1096
g74
(dp1097
g94
g95
ssg83
g1091
sg76
(lp1098
S'remote_port'
p1099
asbag69
(g90
g71
NtRp1100
(dp1101
g74
(dp1102
g101
g102
ssg83
g1091
sg76
(lp1103
S':'
asbag69
(g90
g71
NtRp1104
(dp1105
g74
(dp1106
sg83
g1091
sg76
(lp1107
g69
(g70
g71
NtRp1108
(dp1109
g74
(dp1110
g82
I4
ssg83
g1104
sg76
(lp1111
S'1154'
p1112
asbasbasbag69
(g85
g71
NtRp1113
(dp1114
g74
(dp1115
sg83
g649
sg76
(lp1116
g69
(g90
g71
NtRp1117
(dp1118
g74
(dp1119
g94
g95
ssg83
g1113
sg76
(lp1120
S'request_method'
p1121
asbag69
(g90
g71
NtRp1122
(dp1123
g74
(dp1124
g101
g102
ssg83
g1113
sg76
(lp1125
S':'
asbag69
(g90
g71
NtRp1126
(dp1127
g74
(dp1128
sg83
g1113
sg76
(lp1129
g69
(g70
g71
NtRp1130
(dp1131
g74
(dp1132
g82
I4
ssg83
g1126
sg76
(lp1133
S'GET'
p1134
asbasbasbag69
(g85
g71
NtRp1135
(dp1136
g74
(dp1137
sg83
g649
sg76
(lp1138
g69
(g90
g71
NtRp1139
(dp1140
g74
(dp1141
g94
g95
ssg83
g1135
sg76
(lp1142
S'script_name'
p1143
asbag69
(g90
g71
NtRp1144
(dp1145
g74
(dp1146
g101
g102
ssg83
g1135
sg76
(lp1147
S':'
asbag69
(g90
g71
NtRp1148
(dp1149
g74
(dp1150
sg83
g1135
sg76
(lp1151
g69
(g70
g71
NtRp1152
(dp1153
g74
(dp1154
g82
I4
ssg83
g1148
sg76
(lp1155
S''
asbasbasbag69
(g85
g71
NtRp1156
(dp1157
g74
(dp1158
sg83
g649
sg76
(lp1159
g69
(g90
g71
NtRp1160
(dp1161
g74
(dp1162
g94
g95
ssg83
g1156
sg76
(lp1163
S'server_name'
p1164
asbag69
(g90
g71
NtRp1165
(dp1166
g74
(dp1167
g101
g102
ssg83
g1156
sg76
(lp1168
S':'
asbag69
(g90
g71
NtRp1169
(dp1170
g74
(dp1171
sg83
g1156
sg76
(lp1172
g69
(g70
g71
NtRp1173
(dp1174
g74
(dp1175
g82
I4
ssg83
g1169
sg76
(lp1176
S'fm-biosync-int1'
p1177
asbasbasbag69
(g85
g71
NtRp1178
(dp1179
g74
(dp1180
sg83
g649
sg76
(lp1181
g69
(g90
g71
NtRp1182
(dp1183
g74
(dp1184
g94
g95
ssg83
g1178
sg76
(lp1185
S'server_port'
p1186
asbag69
(g90
g71
NtRp1187
(dp1188
g74
(dp1189
g101
g102
ssg83
g1178
sg76
(lp1190
S':'
asbag69
(g90
g71
NtRp1191
(dp1192
g74
(dp1193
sg83
g1178
sg76
(lp1194
g69
(g70
g71
NtRp1195
(dp1196
g74
(dp1197
g82
I4
ssg83
g1191
sg76
(lp1198
S'8000'
p1199
asbasbasbag69
(g85
g71
NtRp1200
(dp1201
g74
(dp1202
sg83
g649
sg76
(lp1203
g69
(g90
g71
NtRp1204
(dp1205
g74
(dp1206
g94
g95
ssg83
g1200
sg76
(lp1207
S'server_protocol'
p1208
asbag69
(g90
g71
NtRp1209
(dp1210
g74
(dp1211
g101
g102
ssg83
g1200
sg76
(lp1212
S':'
asbag69
(g90
g71
NtRp1213
(dp1214
g74
(dp1215
sg83
g1200
sg76
(lp1216
g69
(g70
g71
NtRp1217
(dp1218
g74
(dp1219
g82
I4
ssg83
g1213
sg76
(lp1220
S'HTTP/1.1'
p1221
asbasbasbag69
(g85
g71
NtRp1222
(dp1223
g74
(dp1224
sg83
g649
sg76
(lp1225
g69
(g90
g71
NtRp1226
(dp1227
g74
(dp1228
g94
g95
ssg83
g1222
sg76
(lp1229
S'server_software'
p1230
asbag69
(g90
g71
NtRp1231
(dp1232
g74
(dp1233
g101
g102
ssg83
g1222
sg76
(lp1234
S':'
asbag69
(g90
g71
NtRp1235
(dp1236
g74
(dp1237
sg83
g1222
sg76
(lp1238
g69
(g70
g71
NtRp1239
(dp1240
g74
(dp1241
g82
I4
ssg83
g1235
sg76
(lp1242
S'Rocket 1.2.4'
p1243
asbasbasbag69
(g85
g71
NtRp1244
(dp1245
g74
(dp1246
sg83
g649
sg76
(lp1247
g69
(g90
g71
NtRp1248
(dp1249
g74
(dp1250
g94
g95
ssg83
g1244
sg76
(lp1251
S'web2py_crontype'
p1252
asbag69
(g90
g71
NtRp1253
(dp1254
g74
(dp1255
g101
g102
ssg83
g1244
sg76
(lp1256
S':'
asbag69
(g90
g71
NtRp1257
(dp1258
g74
(dp1259
sg83
g1244
sg76
(lp1260
g69
(g70
g71
NtRp1261
(dp1262
g74
(dp1263
g82
I4
ssg83
g1257
sg76
(lp1264
S'hard'
p1265
asbasbasbag69
(g85
g71
NtRp1266
(dp1267
g74
(dp1268
sg83
g649
sg76
(lp1269
g69
(g90
g71
NtRp1270
(dp1271
g74
(dp1272
g94
g95
ssg83
g1266
sg76
(lp1273
S'web2py_path'
p1274
asbag69
(g90
g71
NtRp1275
(dp1276
g74
(dp1277
g101
g102
ssg83
g1266
sg76
(lp1278
S':'
asbag69
(g90
g71
NtRp1279
(dp1280
g74
(dp1281
sg83
g1266
sg76
(lp1282
g69
(g70
g71
NtRp1283
(dp1284
g74
(dp1285
g82
I4
ssg83
g1279
sg76
(lp1286
g696
asbasbasbag69
(g85
g71
NtRp1287
(dp1288
g74
(dp1289
sg83
g649
sg76
(lp1290
g69
(g90
g71
NtRp1291
(dp1292
g74
(dp1293
g94
g95
ssg83
g1287
sg76
(lp1294
S'web2py_version'
p1295
asbag69
(g90
g71
NtRp1296
(dp1297
g74
(dp1298
g101
g102
ssg83
g1287
sg76
(lp1299
S':'
asbag69
(g90
g71
NtRp1300
(dp1301
g74
(dp1302
sg83
g1287
sg76
(lp1303
g69
(g70
g71
NtRp1304
(dp1305
g74
(dp1306
g82
I4
ssg83
g1300
sg76
(lp1307
g69
(g78
g71
NtRp1308
(dp1309
g74
(dp1310
g82
I3
ssg83
Nsg76
(lp1311
g69
(g85
g71
NtRp1312
(dp1313
g74
(dp1314
sg83
g1308
sg76
(lp1315
g69
(g90
g71
NtRp1316
(dp1317
g74
(dp1318
sg83
g1312
sg76
(lp1319
g69
(g70
g71
NtRp1320
(dp1321
g74
(dp1322
g82
I3
ssg83
g1316
sg76
(lp1323
S'1'
asbasbasbag69
(g85
g71
NtRp1324
(dp1325
g74
(dp1326
sg83
g1308
sg76
(lp1327
g69
(g90
g71
NtRp1328
(dp1329
g74
(dp1330
sg83
g1324
sg76
(lp1331
g69
(g70
g71
NtRp1332
(dp1333
g74
(dp1334
g82
I3
ssg83
g1328
sg76
(lp1335
S'99'
p1336
asbasbasbag69
(g85
g71
NtRp1337
(dp1338
g74
(dp1339
sg83
g1308
sg76
(lp1340
g69
(g90
g71
NtRp1341
(dp1342
g74
(dp1343
sg83
g1337
sg76
(lp1344
g69
(g70
g71
NtRp1345
(dp1346
g74
(dp1347
g82
I3
ssg83
g1341
sg76
(lp1348
S'7'
asbasbasbag69
(g85
g71
NtRp1349
(dp1350
g74
(dp1351
sg83
g1308
sg76
(lp1352
g69
(g90
g71
NtRp1353
(dp1354
g74
(dp1355
sg83
g1349
sg76
(lp1356
g69
(g70
g71
NtRp1357
(dp1358
g74
(dp1359
g82
I3
ssg83
g1353
sg76
(lp1360
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1361
asbasbasbag69
(g85
g71
NtRp1362
(dp1363
g74
(dp1364
sg83
g1308
sg76
(lp1365
g69
(g90
g71
NtRp1366
(dp1367
g74
(dp1368
sg83
g1362
sg76
(lp1369
g69
(g70
g71
NtRp1370
(dp1371
g74
(dp1372
g82
I3
ssg83
g1366
sg76
(lp1373
S'stable'
p1374
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1375
(dp1376
g74
(dp1377
sg83
g649
sg76
(lp1378
g69
(g90
g71
NtRp1379
(dp1380
g74
(dp1381
g94
g95
ssg83
g1375
sg76
(lp1382
S'wsgi_errors'
p1383
asbag69
(g90
g71
NtRp1384
(dp1385
g74
(dp1386
g101
g102
ssg83
g1375
sg76
(lp1387
S':'
asbag69
(g90
g71
NtRp1388
(dp1389
g74
(dp1390
sg83
g1375
sg76
(lp1391
g69
(g70
g71
NtRp1392
(dp1393
g74
(dp1394
g82
I4
ssg83
g1388
sg76
(lp1395
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p1396
asbasbasbag69
(g85
g71
NtRp1397
(dp1398
g74
(dp1399
sg83
g649
sg76
(lp1400
g69
(g90
g71
NtRp1401
(dp1402
g74
(dp1403
g94
g95
ssg83
g1397
sg76
(lp1404
S'wsgi_file_wrapper'
p1405
asbag69
(g90
g71
NtRp1406
(dp1407
g74
(dp1408
g101
g102
ssg83
g1397
sg76
(lp1409
S':'
asbag69
(g90
g71
NtRp1410
(dp1411
g74
(dp1412
sg83
g1397
sg76
(lp1413
g69
(g70
g71
NtRp1414
(dp1415
g74
(dp1416
g82
I4
ssg83
g1410
sg76
(lp1417
S'<class wsgiref.util.FileWrapper at 0x0164ADF8>'
p1418
asbasbasbag69
(g85
g71
NtRp1419
(dp1420
g74
(dp1421
sg83
g649
sg76
(lp1422
g69
(g90
g71
NtRp1423
(dp1424
g74
(dp1425
g94
g95
ssg83
g1419
sg76
(lp1426
S'wsgi_input'
p1427
asbag69
(g90
g71
NtRp1428
(dp1429
g74
(dp1430
g101
g102
ssg83
g1419
sg76
(lp1431
S':'
asbag69
(g90
g71
NtRp1432
(dp1433
g74
(dp1434
sg83
g1419
sg76
(lp1435
g69
(g70
g71
NtRp1436
(dp1437
g74
(dp1438
g82
I4
ssg83
g1432
sg76
(lp1439
S'<socket._fileobject object at 0x0649E730>'
p1440
asbasbasbag69
(g85
g71
NtRp1441
(dp1442
g74
(dp1443
sg83
g649
sg76
(lp1444
g69
(g90
g71
NtRp1445
(dp1446
g74
(dp1447
g94
g95
ssg83
g1441
sg76
(lp1448
S'wsgi_multiprocess'
p1449
asbag69
(g90
g71
NtRp1450
(dp1451
g74
(dp1452
g101
g102
ssg83
g1441
sg76
(lp1453
S':'
asbag69
(g90
g71
NtRp1454
(dp1455
g74
(dp1456
sg83
g1441
sg76
(lp1457
g69
(g70
g71
NtRp1458
(dp1459
g74
(dp1460
g82
I4
ssg83
g1454
sg76
(lp1461
g112
asbasbasbag69
(g85
g71
NtRp1462
(dp1463
g74
(dp1464
sg83
g649
sg76
(lp1465
g69
(g90
g71
NtRp1466
(dp1467
g74
(dp1468
g94
g95
ssg83
g1462
sg76
(lp1469
S'wsgi_multithread'
p1470
asbag69
(g90
g71
NtRp1471
(dp1472
g74
(dp1473
g101
g102
ssg83
g1462
sg76
(lp1474
S':'
asbag69
(g90
g71
NtRp1475
(dp1476
g74
(dp1477
sg83
g1462
sg76
(lp1478
g69
(g70
g71
NtRp1479
(dp1480
g74
(dp1481
g82
I4
ssg83
g1475
sg76
(lp1482
S'True'
p1483
asbasbasbag69
(g85
g71
NtRp1484
(dp1485
g74
(dp1486
sg83
g649
sg76
(lp1487
g69
(g90
g71
NtRp1488
(dp1489
g74
(dp1490
g94
g95
ssg83
g1484
sg76
(lp1491
S'wsgi_run_once'
p1492
asbag69
(g90
g71
NtRp1493
(dp1494
g74
(dp1495
g101
g102
ssg83
g1484
sg76
(lp1496
S':'
asbag69
(g90
g71
NtRp1497
(dp1498
g74
(dp1499
sg83
g1484
sg76
(lp1500
g69
(g70
g71
NtRp1501
(dp1502
g74
(dp1503
g82
I4
ssg83
g1497
sg76
(lp1504
g112
asbasbasbag69
(g85
g71
NtRp1505
(dp1506
g74
(dp1507
sg83
g649
sg76
(lp1508
g69
(g90
g71
NtRp1509
(dp1510
g74
(dp1511
g94
g95
ssg83
g1505
sg76
(lp1512
S'wsgi_url_scheme'
p1513
asbag69
(g90
g71
NtRp1514
(dp1515
g74
(dp1516
g101
g102
ssg83
g1505
sg76
(lp1517
S':'
asbag69
(g90
g71
NtRp1518
(dp1519
g74
(dp1520
sg83
g1505
sg76
(lp1521
g69
(g70
g71
NtRp1522
(dp1523
g74
(dp1524
g82
I4
ssg83
g1518
sg76
(lp1525
S'http'
p1526
asbasbasbag69
(g85
g71
NtRp1527
(dp1528
g74
(dp1529
sg83
g649
sg76
(lp1530
g69
(g90
g71
NtRp1531
(dp1532
g74
(dp1533
g94
g95
ssg83
g1527
sg76
(lp1534
S'wsgi_version'
p1535
asbag69
(g90
g71
NtRp1536
(dp1537
g74
(dp1538
g101
g102
ssg83
g1527
sg76
(lp1539
S':'
asbag69
(g90
g71
NtRp1540
(dp1541
g74
(dp1542
sg83
g1527
sg76
(lp1543
g69
(g70
g71
NtRp1544
(dp1545
g74
(dp1546
g82
I4
ssg83
g1540
sg76
(lp1547
g69
(g78
g71
NtRp1548
(dp1549
g74
(dp1550
g82
I3
ssg83
Nsg76
(lp1551
g69
(g85
g71
NtRp1552
(dp1553
g74
(dp1554
sg83
g1548
sg76
(lp1555
g69
(g90
g71
NtRp1556
(dp1557
g74
(dp1558
sg83
g1552
sg76
(lp1559
g69
(g70
g71
NtRp1560
(dp1561
g74
(dp1562
g82
I3
ssg83
g1556
sg76
(lp1563
S'1'
asbasbasbag69
(g85
g71
NtRp1564
(dp1565
g74
(dp1566
sg83
g1548
sg76
(lp1567
g69
(g90
g71
NtRp1568
(dp1569
g74
(dp1570
sg83
g1564
sg76
(lp1571
g69
(g70
g71
NtRp1572
(dp1573
g74
(dp1574
g82
I3
ssg83
g1568
sg76
(lp1575
S'0'
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp1576
(dp1577
g74
(dp1578
sg83
g79
sg76
(lp1579
g69
(g90
g71
NtRp1580
(dp1581
g74
(dp1582
g94
g95
ssg83
g1576
sg76
(lp1583
S'extension'
p1584
asbag69
(g90
g71
NtRp1585
(dp1586
g74
(dp1587
g101
g102
ssg83
g1576
sg76
(lp1588
S':'
asbag69
(g90
g71
NtRp1589
(dp1590
g74
(dp1591
sg83
g1576
sg76
(lp1592
g69
(g70
g71
NtRp1593
(dp1594
g74
(dp1595
g82
I5
ssg83
g1589
sg76
(lp1596
S'html'
p1597
asbasbasbag69
(g85
g71
NtRp1598
(dp1599
g74
(dp1600
sg83
g79
sg76
(lp1601
g69
(g90
g71
NtRp1602
(dp1603
g74
(dp1604
g94
g95
ssg83
g1598
sg76
(lp1605
S'folder'
p1606
asbag69
(g90
g71
NtRp1607
(dp1608
g74
(dp1609
g101
g102
ssg83
g1598
sg76
(lp1610
S':'
asbag69
(g90
g71
NtRp1611
(dp1612
g74
(dp1613
sg83
g1598
sg76
(lp1614
g69
(g70
g71
NtRp1615
(dp1616
g74
(dp1617
g82
I5
ssg83
g1611
sg76
(lp1618
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\'
p1619
asbasbasbag69
(g85
g71
NtRp1620
(dp1621
g74
(dp1622
sg83
g79
sg76
(lp1623
g69
(g90
g71
NtRp1624
(dp1625
g74
(dp1626
g94
g95
ssg83
g1620
sg76
(lp1627
S'function'
p1628
asbag69
(g90
g71
NtRp1629
(dp1630
g74
(dp1631
g101
g102
ssg83
g1620
sg76
(lp1632
S':'
asbag69
(g90
g71
NtRp1633
(dp1634
g74
(dp1635
sg83
g1620
sg76
(lp1636
g69
(g70
g71
NtRp1637
(dp1638
g74
(dp1639
g82
I5
ssg83
g1633
sg76
(lp1640
S'index'
p1641
asbasbasbag69
(g85
g71
NtRp1642
(dp1643
g74
(dp1644
sg83
g79
sg76
(lp1645
g69
(g90
g71
NtRp1646
(dp1647
g74
(dp1648
g94
g95
ssg83
g1642
sg76
(lp1649
S'get_vars'
p1650
asbag69
(g90
g71
NtRp1651
(dp1652
g74
(dp1653
g101
g102
ssg83
g1642
sg76
(lp1654
S':'
asbag69
(g90
g71
NtRp1655
(dp1656
g74
(dp1657
sg83
g1642
sg76
(lp1658
g69
(g70
g71
NtRp1659
(dp1660
g74
(dp1661
g82
I5
ssg83
g1655
sg76
(lp1662
g69
(g78
g71
NtRp1663
(dp1664
g74
(dp1665
g82
I4
ssg83
Nsg76
(lp1666
sbasbasbasbag69
(g85
g71
NtRp1667
(dp1668
g74
(dp1669
sg83
g79
sg76
(lp1670
g69
(g90
g71
NtRp1671
(dp1672
g74
(dp1673
g94
g95
ssg83
g1667
sg76
(lp1674
S'global_settings'
p1675
asbag69
(g90
g71
NtRp1676
(dp1677
g74
(dp1678
g101
g102
ssg83
g1667
sg76
(lp1679
S':'
asbag69
(g90
g71
NtRp1680
(dp1681
g74
(dp1682
sg83
g1667
sg76
(lp1683
g69
(g70
g71
NtRp1684
(dp1685
g74
(dp1686
g82
I5
ssg83
g1680
sg76
(lp1687
g69
(g78
g71
NtRp1688
(dp1689
g74
(dp1690
g82
I4
ssg83
Nsg76
(lp1691
g69
(g85
g71
NtRp1692
(dp1693
g74
(dp1694
sg83
g1688
sg76
(lp1695
g69
(g90
g71
NtRp1696
(dp1697
g74
(dp1698
g94
g95
ssg83
g1692
sg76
(lp1699
g661
asbag69
(g90
g71
NtRp1700
(dp1701
g74
(dp1702
g101
g102
ssg83
g1692
sg76
(lp1703
S':'
asbag69
(g90
g71
NtRp1704
(dp1705
g74
(dp1706
sg83
g1692
sg76
(lp1707
g69
(g70
g71
NtRp1708
(dp1709
g74
(dp1710
g82
I4
ssg83
g1704
sg76
(lp1711
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p1712
asbasbasbag69
(g85
g71
NtRp1713
(dp1714
g74
(dp1715
sg83
g1688
sg76
(lp1716
g69
(g90
g71
NtRp1717
(dp1718
g74
(dp1719
g94
g95
ssg83
g1713
sg76
(lp1720
g683
asbag69
(g90
g71
NtRp1721
(dp1722
g74
(dp1723
g101
g102
ssg83
g1713
sg76
(lp1724
S':'
asbag69
(g90
g71
NtRp1725
(dp1726
g74
(dp1727
sg83
g1713
sg76
(lp1728
g69
(g70
g71
NtRp1729
(dp1730
g74
(dp1731
g82
I4
ssg83
g1725
sg76
(lp1732
g696
asbasbasbag69
(g85
g71
NtRp1733
(dp1734
g74
(dp1735
sg83
g1688
sg76
(lp1736
g69
(g90
g71
NtRp1737
(dp1738
g74
(dp1739
g94
g95
ssg83
g1733
sg76
(lp1740
g705
asbag69
(g90
g71
NtRp1741
(dp1742
g74
(dp1743
g101
g102
ssg83
g1733
sg76
(lp1744
S':'
asbag69
(g90
g71
NtRp1745
(dp1746
g74
(dp1747
sg83
g1733
sg76
(lp1748
g69
(g70
g71
NtRp1749
(dp1750
g74
(dp1751
g82
I4
ssg83
g1745
sg76
(lp1752
g69
(g78
g71
NtRp1753
(dp1754
g74
(dp1755
g82
I3
ssg83
Nsg76
(lp1756
sbasbasbasbag69
(g85
g71
NtRp1757
(dp1758
g74
(dp1759
sg83
g1688
sg76
(lp1760
g69
(g90
g71
NtRp1761
(dp1762
g74
(dp1763
g94
g95
ssg83
g1757
sg76
(lp1764
g730
asbag69
(g90
g71
NtRp1765
(dp1766
g74
(dp1767
g101
g102
ssg83
g1757
sg76
(lp1768
S':'
asbag69
(g90
g71
NtRp1769
(dp1770
g74
(dp1771
sg83
g1757
sg76
(lp1772
g69
(g70
g71
NtRp1773
(dp1774
g74
(dp1775
g82
I4
ssg83
g1769
sg76
(lp1776
S"<Values at 0x1750f08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1777
asbasbasbag69
(g85
g71
NtRp1778
(dp1779
g74
(dp1780
sg83
g1688
sg76
(lp1781
g69
(g90
g71
NtRp1782
(dp1783
g74
(dp1784
g94
g95
ssg83
g1778
sg76
(lp1785
g752
asbag69
(g90
g71
NtRp1786
(dp1787
g74
(dp1788
g101
g102
ssg83
g1778
sg76
(lp1789
S':'
asbag69
(g90
g71
NtRp1790
(dp1791
g74
(dp1792
sg83
g1778
sg76
(lp1793
g69
(g70
g71
NtRp1794
(dp1795
g74
(dp1796
g82
I4
ssg83
g1790
sg76
(lp1797
S'set([])'
p1798
asbasbasbag69
(g85
g71
NtRp1799
(dp1800
g74
(dp1801
sg83
g1688
sg76
(lp1802
g69
(g90
g71
NtRp1803
(dp1804
g74
(dp1805
g94
g95
ssg83
g1799
sg76
(lp1806
g774
asbag69
(g90
g71
NtRp1807
(dp1808
g74
(dp1809
g101
g102
ssg83
g1799
sg76
(lp1810
S':'
asbag69
(g90
g71
NtRp1811
(dp1812
g74
(dp1813
sg83
g1799
sg76
(lp1814
g69
(g70
g71
NtRp1815
(dp1816
g74
(dp1817
g82
I4
ssg83
g1811
sg76
(lp1818
g112
asbasbasbag69
(g85
g71
NtRp1819
(dp1820
g74
(dp1821
sg83
g1688
sg76
(lp1822
g69
(g90
g71
NtRp1823
(dp1824
g74
(dp1825
g94
g95
ssg83
g1819
sg76
(lp1826
g795
asbag69
(g90
g71
NtRp1827
(dp1828
g74
(dp1829
g101
g102
ssg83
g1819
sg76
(lp1830
S':'
asbag69
(g90
g71
NtRp1831
(dp1832
g74
(dp1833
sg83
g1819
sg76
(lp1834
g69
(g70
g71
NtRp1835
(dp1836
g74
(dp1837
g82
I4
ssg83
g1831
sg76
(lp1838
g808
asbasbasbag69
(g85
g71
NtRp1839
(dp1840
g74
(dp1841
sg83
g1688
sg76
(lp1842
g69
(g90
g71
NtRp1843
(dp1844
g74
(dp1845
g94
g95
ssg83
g1839
sg76
(lp1846
g993
asbag69
(g90
g71
NtRp1847
(dp1848
g74
(dp1849
g101
g102
ssg83
g1839
sg76
(lp1850
S':'
asbag69
(g90
g71
NtRp1851
(dp1852
g74
(dp1853
sg83
g1839
sg76
(lp1854
g69
(g70
g71
NtRp1855
(dp1856
g74
(dp1857
g82
I4
ssg83
g1851
sg76
(lp1858
g112
asbasbasbag69
(g85
g71
NtRp1859
(dp1860
g74
(dp1861
sg83
g1688
sg76
(lp1862
g69
(g90
g71
NtRp1863
(dp1864
g74
(dp1865
g94
g95
ssg83
g1859
sg76
(lp1866
g1014
asbag69
(g90
g71
NtRp1867
(dp1868
g74
(dp1869
g101
g102
ssg83
g1859
sg76
(lp1870
S':'
asbag69
(g90
g71
NtRp1871
(dp1872
g74
(dp1873
sg83
g1859
sg76
(lp1874
g69
(g70
g71
NtRp1875
(dp1876
g74
(dp1877
g82
I4
ssg83
g1871
sg76
(lp1878
g112
asbasbasbag69
(g85
g71
NtRp1879
(dp1880
g74
(dp1881
sg83
g1688
sg76
(lp1882
g69
(g90
g71
NtRp1883
(dp1884
g74
(dp1885
g94
g95
ssg83
g1879
sg76
(lp1886
g1252
asbag69
(g90
g71
NtRp1887
(dp1888
g74
(dp1889
g101
g102
ssg83
g1879
sg76
(lp1890
S':'
asbag69
(g90
g71
NtRp1891
(dp1892
g74
(dp1893
sg83
g1879
sg76
(lp1894
g69
(g70
g71
NtRp1895
(dp1896
g74
(dp1897
g82
I4
ssg83
g1891
sg76
(lp1898
g1265
asbasbasbag69
(g85
g71
NtRp1899
(dp1900
g74
(dp1901
sg83
g1688
sg76
(lp1902
g69
(g90
g71
NtRp1903
(dp1904
g74
(dp1905
g94
g95
ssg83
g1899
sg76
(lp1906
g1295
asbag69
(g90
g71
NtRp1907
(dp1908
g74
(dp1909
g101
g102
ssg83
g1899
sg76
(lp1910
S':'
asbag69
(g90
g71
NtRp1911
(dp1912
g74
(dp1913
sg83
g1899
sg76
(lp1914
g69
(g70
g71
NtRp1915
(dp1916
g74
(dp1917
g82
I4
ssg83
g1911
sg76
(lp1918
g69
(g78
g71
NtRp1919
(dp1920
g74
(dp1921
g82
I3
ssg83
Nsg76
(lp1922
g69
(g85
g71
NtRp1923
(dp1924
g74
(dp1925
sg83
g1919
sg76
(lp1926
g69
(g90
g71
NtRp1927
(dp1928
g74
(dp1929
sg83
g1923
sg76
(lp1930
g69
(g70
g71
NtRp1931
(dp1932
g74
(dp1933
g82
I3
ssg83
g1927
sg76
(lp1934
S'1'
asbasbasbag69
(g85
g71
NtRp1935
(dp1936
g74
(dp1937
sg83
g1919
sg76
(lp1938
g69
(g90
g71
NtRp1939
(dp1940
g74
(dp1941
sg83
g1935
sg76
(lp1942
g69
(g70
g71
NtRp1943
(dp1944
g74
(dp1945
g82
I3
ssg83
g1939
sg76
(lp1946
S'99'
p1947
asbasbasbag69
(g85
g71
NtRp1948
(dp1949
g74
(dp1950
sg83
g1919
sg76
(lp1951
g69
(g90
g71
NtRp1952
(dp1953
g74
(dp1954
sg83
g1948
sg76
(lp1955
g69
(g70
g71
NtRp1956
(dp1957
g74
(dp1958
g82
I3
ssg83
g1952
sg76
(lp1959
S'7'
asbasbasbag69
(g85
g71
NtRp1960
(dp1961
g74
(dp1962
sg83
g1919
sg76
(lp1963
g69
(g90
g71
NtRp1964
(dp1965
g74
(dp1966
sg83
g1960
sg76
(lp1967
g69
(g70
g71
NtRp1968
(dp1969
g74
(dp1970
g82
I3
ssg83
g1964
sg76
(lp1971
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1972
asbasbasbag69
(g85
g71
NtRp1973
(dp1974
g74
(dp1975
sg83
g1919
sg76
(lp1976
g69
(g90
g71
NtRp1977
(dp1978
g74
(dp1979
sg83
g1973
sg76
(lp1980
g69
(g70
g71
NtRp1981
(dp1982
g74
(dp1983
g82
I3
ssg83
g1977
sg76
(lp1984
g1374
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp1985
(dp1986
g74
(dp1987
sg83
g79
sg76
(lp1988
g69
(g90
g71
NtRp1989
(dp1990
g74
(dp1991
g94
g95
ssg83
g1985
sg76
(lp1992
S'is_https'
p1993
asbag69
(g90
g71
NtRp1994
(dp1995
g74
(dp1996
g101
g102
ssg83
g1985
sg76
(lp1997
S':'
asbag69
(g90
g71
NtRp1998
(dp1999
g74
(dp2000
sg83
g1985
sg76
(lp2001
g69
(g70
g71
NtRp2002
(dp2003
g74
(dp2004
g82
I5
ssg83
g1998
sg76
(lp2005
g112
asbasbasbag69
(g85
g71
NtRp2006
(dp2007
g74
(dp2008
sg83
g79
sg76
(lp2009
g69
(g90
g71
NtRp2010
(dp2011
g74
(dp2012
g94
g95
ssg83
g2006
sg76
(lp2013
S'is_local'
p2014
asbag69
(g90
g71
NtRp2015
(dp2016
g74
(dp2017
g101
g102
ssg83
g2006
sg76
(lp2018
S':'
asbag69
(g90
g71
NtRp2019
(dp2020
g74
(dp2021
sg83
g2006
sg76
(lp2022
g69
(g70
g71
NtRp2023
(dp2024
g74
(dp2025
g82
I5
ssg83
g2019
sg76
(lp2026
g1483
asbasbasbag69
(g85
g71
NtRp2027
(dp2028
g74
(dp2029
sg83
g79
sg76
(lp2030
g69
(g90
g71
NtRp2031
(dp2032
g74
(dp2033
g94
g95
ssg83
g2027
sg76
(lp2034
S'is_restful'
p2035
asbag69
(g90
g71
NtRp2036
(dp2037
g74
(dp2038
g101
g102
ssg83
g2027
sg76
(lp2039
S':'
asbag69
(g90
g71
NtRp2040
(dp2041
g74
(dp2042
sg83
g2027
sg76
(lp2043
g69
(g70
g71
NtRp2044
(dp2045
g74
(dp2046
g82
I5
ssg83
g2040
sg76
(lp2047
g112
asbasbasbag69
(g85
g71
NtRp2048
(dp2049
g74
(dp2050
sg83
g79
sg76
(lp2051
g69
(g90
g71
NtRp2052
(dp2053
g74
(dp2054
g94
g95
ssg83
g2048
sg76
(lp2055
S'now'
p2056
asbag69
(g90
g71
NtRp2057
(dp2058
g74
(dp2059
g101
g102
ssg83
g2048
sg76
(lp2060
S':'
asbag69
(g90
g71
NtRp2061
(dp2062
g74
(dp2063
sg83
g2048
sg76
(lp2064
g69
(g70
g71
NtRp2065
(dp2066
g74
(dp2067
g82
I5
ssg83
g2061
sg76
(lp2068
S'datetime.datetime(2012, 7, 16, 15, 6, 20, 87000)'
p2069
asbasbasbag69
(g85
g71
NtRp2070
(dp2071
g74
(dp2072
sg83
g79
sg76
(lp2073
g69
(g90
g71
NtRp2074
(dp2075
g74
(dp2076
g94
g95
ssg83
g2070
sg76
(lp2077
S'post_vars'
p2078
asbag69
(g90
g71
NtRp2079
(dp2080
g74
(dp2081
g101
g102
ssg83
g2070
sg76
(lp2082
S':'
asbag69
(g90
g71
NtRp2083
(dp2084
g74
(dp2085
sg83
g2070
sg76
(lp2086
g69
(g70
g71
NtRp2087
(dp2088
g74
(dp2089
g82
I5
ssg83
g2083
sg76
(lp2090
g69
(g78
g71
NtRp2091
(dp2092
g74
(dp2093
g82
I4
ssg83
Nsg76
(lp2094
sbasbasbasbag69
(g85
g71
NtRp2095
(dp2096
g74
(dp2097
sg83
g79
sg76
(lp2098
g69
(g90
g71
NtRp2099
(dp2100
g74
(dp2101
g94
g95
ssg83
g2095
sg76
(lp2102
S'url'
p2103
asbag69
(g90
g71
NtRp2104
(dp2105
g74
(dp2106
g101
g102
ssg83
g2095
sg76
(lp2107
S':'
asbag69
(g90
g71
NtRp2108
(dp2109
g74
(dp2110
sg83
g2095
sg76
(lp2111
g69
(g70
g71
NtRp2112
(dp2113
g74
(dp2114
g82
I5
ssg83
g2108
sg76
(lp2115
S'/Phylografter/stree/index'
p2116
asbasbasbag69
(g85
g71
NtRp2117
(dp2118
g74
(dp2119
sg83
g79
sg76
(lp2120
g69
(g90
g71
NtRp2121
(dp2122
g74
(dp2123
g94
g95
ssg83
g2117
sg76
(lp2124
S'utcnow'
p2125
asbag69
(g90
g71
NtRp2126
(dp2127
g74
(dp2128
g101
g102
ssg83
g2117
sg76
(lp2129
S':'
asbag69
(g90
g71
NtRp2130
(dp2131
g74
(dp2132
sg83
g2117
sg76
(lp2133
g69
(g70
g71
NtRp2134
(dp2135
g74
(dp2136
g82
I5
ssg83
g2130
sg76
(lp2137
S'datetime.datetime(2012, 7, 16, 20, 6, 20, 87000)'
p2138
asbasbasbag69
(g85
g71
NtRp2139
(dp2140
g74
(dp2141
sg83
g79
sg76
(lp2142
g69
(g90
g71
NtRp2143
(dp2144
g74
(dp2145
g94
g95
ssg83
g2139
sg76
(lp2146
S'uuid'
p2147
asbag69
(g90
g71
NtRp2148
(dp2149
g74
(dp2150
g101
g102
ssg83
g2139
sg76
(lp2151
S':'
asbag69
(g90
g71
NtRp2152
(dp2153
g74
(dp2154
sg83
g2139
sg76
(lp2155
g69
(g70
g71
NtRp2156
(dp2157
g74
(dp2158
g82
I5
ssg83
g2152
sg76
(lp2159
S'Phylografter/127.0.0.1.2012-07-16.15-06-20.f2305e89-96fa-48a5-bfa9-dec350c627f6'
p2160
asbasbasbag69
(g85
g71
NtRp2161
(dp2162
g74
(dp2163
sg83
g79
sg76
(lp2164
g69
(g90
g71
NtRp2165
(dp2166
g74
(dp2167
g94
g95
ssg83
g2161
sg76
(lp2168
S'vars'
p2169
asbag69
(g90
g71
NtRp2170
(dp2171
g74
(dp2172
g101
g102
ssg83
g2161
sg76
(lp2173
S':'
asbag69
(g90
g71
NtRp2174
(dp2175
g74
(dp2176
sg83
g2161
sg76
(lp2177
g69
(g70
g71
NtRp2178
(dp2179
g74
(dp2180
g82
I5
ssg83
g2174
sg76
(lp2181
g69
(g78
g71
NtRp2182
(dp2183
g74
(dp2184
g82
I4
ssg83
Nsg76
(lp2185
sbasbasbasbag69
(g85
g71
NtRp2186
(dp2187
g74
(dp2188
sg83
g79
sg76
(lp2189
g69
(g90
g71
NtRp2190
(dp2191
g74
(dp2192
g94
g95
ssg83
g2186
sg76
(lp2193
S'wsgi'
p2194
asbag69
(g90
g71
NtRp2195
(dp2196
g74
(dp2197
g101
g102
ssg83
g2186
sg76
(lp2198
S':'
asbag69
(g90
g71
NtRp2199
(dp2200
g74
(dp2201
sg83
g2186
sg76
(lp2202
g69
(g70
g71
NtRp2203
(dp2204
g74
(dp2205
g82
I5
ssg83
g2199
sg76
(lp2206
g69
(g78
g71
NtRp2207
(dp2208
g74
(dp2209
g82
I4
ssg83
Nsg76
(lp2210
g69
(g85
g71
NtRp2211
(dp2212
g74
(dp2213
sg83
g2207
sg76
(lp2214
g69
(g90
g71
NtRp2215
(dp2216
g74
(dp2217
g94
g95
ssg83
g2211
sg76
(lp2218
S'environ'
p2219
asbag69
(g90
g71
NtRp2220
(dp2221
g74
(dp2222
g101
g102
ssg83
g2211
sg76
(lp2223
S':'
asbag69
(g90
g71
NtRp2224
(dp2225
g74
(dp2226
sg83
g2211
sg76
(lp2227
g69
(g70
g71
NtRp2228
(dp2229
g74
(dp2230
g82
I4
ssg83
g2224
sg76
(lp2231
g69
(g78
g71
NtRp2232
(dp2233
g74
(dp2234
g82
I3
ssg83
Nsg76
(lp2235
g69
(g85
g71
NtRp2236
(dp2237
g74
(dp2238
sg83
g2232
sg76
(lp2239
g69
(g90
g71
NtRp2240
(dp2241
g74
(dp2242
g94
g95
ssg83
g2236
sg76
(lp2243
S'HTTP_ACCEPT'
p2244
asbag69
(g90
g71
NtRp2245
(dp2246
g74
(dp2247
g101
g102
ssg83
g2236
sg76
(lp2248
S':'
asbag69
(g90
g71
NtRp2249
(dp2250
g74
(dp2251
sg83
g2236
sg76
(lp2252
g69
(g70
g71
NtRp2253
(dp2254
g74
(dp2255
g82
I3
ssg83
g2249
sg76
(lp2256
g830
asbasbasbag69
(g85
g71
NtRp2257
(dp2258
g74
(dp2259
sg83
g2232
sg76
(lp2260
g69
(g90
g71
NtRp2261
(dp2262
g74
(dp2263
g94
g95
ssg83
g2257
sg76
(lp2264
S'HTTP_ACCEPT_ENCODING'
p2265
asbag69
(g90
g71
NtRp2266
(dp2267
g74
(dp2268
g101
g102
ssg83
g2257
sg76
(lp2269
S':'
asbag69
(g90
g71
NtRp2270
(dp2271
g74
(dp2272
sg83
g2257
sg76
(lp2273
g69
(g70
g71
NtRp2274
(dp2275
g74
(dp2276
g82
I3
ssg83
g2270
sg76
(lp2277
g852
asbasbasbag69
(g85
g71
NtRp2278
(dp2279
g74
(dp2280
sg83
g2232
sg76
(lp2281
g69
(g90
g71
NtRp2282
(dp2283
g74
(dp2284
g94
g95
ssg83
g2278
sg76
(lp2285
S'HTTP_ACCEPT_LANGUAGE'
p2286
asbag69
(g90
g71
NtRp2287
(dp2288
g74
(dp2289
g101
g102
ssg83
g2278
sg76
(lp2290
S':'
asbag69
(g90
g71
NtRp2291
(dp2292
g74
(dp2293
sg83
g2278
sg76
(lp2294
g69
(g70
g71
NtRp2295
(dp2296
g74
(dp2297
g82
I3
ssg83
g2291
sg76
(lp2298
g874
asbasbasbag69
(g85
g71
NtRp2299
(dp2300
g74
(dp2301
sg83
g2232
sg76
(lp2302
g69
(g90
g71
NtRp2303
(dp2304
g74
(dp2305
g94
g95
ssg83
g2299
sg76
(lp2306
S'HTTP_CONNECTION'
p2307
asbag69
(g90
g71
NtRp2308
(dp2309
g74
(dp2310
g101
g102
ssg83
g2299
sg76
(lp2311
S':'
asbag69
(g90
g71
NtRp2312
(dp2313
g74
(dp2314
sg83
g2299
sg76
(lp2315
g69
(g70
g71
NtRp2316
(dp2317
g74
(dp2318
g82
I3
ssg83
g2312
sg76
(lp2319
g896
asbasbasbag69
(g85
g71
NtRp2320
(dp2321
g74
(dp2322
sg83
g2232
sg76
(lp2323
g69
(g90
g71
NtRp2324
(dp2325
g74
(dp2326
g94
g95
ssg83
g2320
sg76
(lp2327
S'HTTP_COOKIE'
p2328
asbag69
(g90
g71
NtRp2329
(dp2330
g74
(dp2331
g101
g102
ssg83
g2320
sg76
(lp2332
S':'
asbag69
(g90
g71
NtRp2333
(dp2334
g74
(dp2335
sg83
g2320
sg76
(lp2336
g69
(g70
g71
NtRp2337
(dp2338
g74
(dp2339
g82
I3
ssg83
g2333
sg76
(lp2340
g918
asbasbasbag69
(g85
g71
NtRp2341
(dp2342
g74
(dp2343
sg83
g2232
sg76
(lp2344
g69
(g90
g71
NtRp2345
(dp2346
g74
(dp2347
g94
g95
ssg83
g2341
sg76
(lp2348
S'HTTP_HOST'
p2349
asbag69
(g90
g71
NtRp2350
(dp2351
g74
(dp2352
g101
g102
ssg83
g2341
sg76
(lp2353
S':'
asbag69
(g90
g71
NtRp2354
(dp2355
g74
(dp2356
sg83
g2341
sg76
(lp2357
g69
(g70
g71
NtRp2358
(dp2359
g74
(dp2360
g82
I3
ssg83
g2354
sg76
(lp2361
g940
asbasbasbag69
(g85
g71
NtRp2362
(dp2363
g74
(dp2364
sg83
g2232
sg76
(lp2365
g69
(g90
g71
NtRp2366
(dp2367
g74
(dp2368
g94
g95
ssg83
g2362
sg76
(lp2369
S'HTTP_REFERER'
p2370
asbag69
(g90
g71
NtRp2371
(dp2372
g74
(dp2373
g101
g102
ssg83
g2362
sg76
(lp2374
S':'
asbag69
(g90
g71
NtRp2375
(dp2376
g74
(dp2377
sg83
g2362
sg76
(lp2378
g69
(g70
g71
NtRp2379
(dp2380
g74
(dp2381
g82
I3
ssg83
g2375
sg76
(lp2382
g962
asbasbasbag69
(g85
g71
NtRp2383
(dp2384
g74
(dp2385
sg83
g2232
sg76
(lp2386
g69
(g90
g71
NtRp2387
(dp2388
g74
(dp2389
g94
g95
ssg83
g2383
sg76
(lp2390
S'HTTP_USER_AGENT'
p2391
asbag69
(g90
g71
NtRp2392
(dp2393
g74
(dp2394
g101
g102
ssg83
g2383
sg76
(lp2395
S':'
asbag69
(g90
g71
NtRp2396
(dp2397
g74
(dp2398
sg83
g2383
sg76
(lp2399
g69
(g70
g71
NtRp2400
(dp2401
g74
(dp2402
g82
I3
ssg83
g2396
sg76
(lp2403
g984
asbasbasbag69
(g85
g71
NtRp2404
(dp2405
g74
(dp2406
sg83
g2232
sg76
(lp2407
g69
(g90
g71
NtRp2408
(dp2409
g74
(dp2410
g94
g95
ssg83
g2404
sg76
(lp2411
S'PATH_INFO'
p2412
asbag69
(g90
g71
NtRp2413
(dp2414
g74
(dp2415
g101
g102
ssg83
g2404
sg76
(lp2416
S':'
asbag69
(g90
g71
NtRp2417
(dp2418
g74
(dp2419
sg83
g2404
sg76
(lp2420
g69
(g70
g71
NtRp2421
(dp2422
g74
(dp2423
g82
I3
ssg83
g2417
sg76
(lp2424
g1048
asbasbasbag69
(g85
g71
NtRp2425
(dp2426
g74
(dp2427
sg83
g2232
sg76
(lp2428
g69
(g90
g71
NtRp2429
(dp2430
g74
(dp2431
g94
g95
ssg83
g2425
sg76
(lp2432
S'QUERY_STRING'
p2433
asbag69
(g90
g71
NtRp2434
(dp2435
g74
(dp2436
g101
g102
ssg83
g2425
sg76
(lp2437
S':'
asbag69
(g90
g71
NtRp2438
(dp2439
g74
(dp2440
sg83
g2425
sg76
(lp2441
g69
(g70
g71
NtRp2442
(dp2443
g74
(dp2444
g82
I3
ssg83
g2438
sg76
(lp2445
S''
asbasbasbag69
(g85
g71
NtRp2446
(dp2447
g74
(dp2448
sg83
g2232
sg76
(lp2449
g69
(g90
g71
NtRp2450
(dp2451
g74
(dp2452
g94
g95
ssg83
g2446
sg76
(lp2453
S'REMOTE_ADDR'
p2454
asbag69
(g90
g71
NtRp2455
(dp2456
g74
(dp2457
g101
g102
ssg83
g2446
sg76
(lp2458
S':'
asbag69
(g90
g71
NtRp2459
(dp2460
g74
(dp2461
sg83
g2446
sg76
(lp2462
g69
(g70
g71
NtRp2463
(dp2464
g74
(dp2465
g82
I3
ssg83
g2459
sg76
(lp2466
g202
asbasbasbag69
(g85
g71
NtRp2467
(dp2468
g74
(dp2469
sg83
g2232
sg76
(lp2470
g69
(g90
g71
NtRp2471
(dp2472
g74
(dp2473
g94
g95
ssg83
g2467
sg76
(lp2474
S'REMOTE_PORT'
p2475
asbag69
(g90
g71
NtRp2476
(dp2477
g74
(dp2478
g101
g102
ssg83
g2467
sg76
(lp2479
S':'
asbag69
(g90
g71
NtRp2480
(dp2481
g74
(dp2482
sg83
g2467
sg76
(lp2483
g69
(g70
g71
NtRp2484
(dp2485
g74
(dp2486
g82
I3
ssg83
g2480
sg76
(lp2487
g1112
asbasbasbag69
(g85
g71
NtRp2488
(dp2489
g74
(dp2490
sg83
g2232
sg76
(lp2491
g69
(g90
g71
NtRp2492
(dp2493
g74
(dp2494
g94
g95
ssg83
g2488
sg76
(lp2495
S'REQUEST_METHOD'
p2496
asbag69
(g90
g71
NtRp2497
(dp2498
g74
(dp2499
g101
g102
ssg83
g2488
sg76
(lp2500
S':'
asbag69
(g90
g71
NtRp2501
(dp2502
g74
(dp2503
sg83
g2488
sg76
(lp2504
g69
(g70
g71
NtRp2505
(dp2506
g74
(dp2507
g82
I3
ssg83
g2501
sg76
(lp2508
g1134
asbasbasbag69
(g85
g71
NtRp2509
(dp2510
g74
(dp2511
sg83
g2232
sg76
(lp2512
g69
(g90
g71
NtRp2513
(dp2514
g74
(dp2515
g94
g95
ssg83
g2509
sg76
(lp2516
S'SCRIPT_NAME'
p2517
asbag69
(g90
g71
NtRp2518
(dp2519
g74
(dp2520
g101
g102
ssg83
g2509
sg76
(lp2521
S':'
asbag69
(g90
g71
NtRp2522
(dp2523
g74
(dp2524
sg83
g2509
sg76
(lp2525
g69
(g70
g71
NtRp2526
(dp2527
g74
(dp2528
g82
I3
ssg83
g2522
sg76
(lp2529
S''
asbasbasbag69
(g85
g71
NtRp2530
(dp2531
g74
(dp2532
sg83
g2232
sg76
(lp2533
g69
(g90
g71
NtRp2534
(dp2535
g74
(dp2536
g94
g95
ssg83
g2530
sg76
(lp2537
S'SERVER_NAME'
p2538
asbag69
(g90
g71
NtRp2539
(dp2540
g74
(dp2541
g101
g102
ssg83
g2530
sg76
(lp2542
S':'
asbag69
(g90
g71
NtRp2543
(dp2544
g74
(dp2545
sg83
g2530
sg76
(lp2546
g69
(g70
g71
NtRp2547
(dp2548
g74
(dp2549
g82
I3
ssg83
g2543
sg76
(lp2550
g1177
asbasbasbag69
(g85
g71
NtRp2551
(dp2552
g74
(dp2553
sg83
g2232
sg76
(lp2554
g69
(g90
g71
NtRp2555
(dp2556
g74
(dp2557
g94
g95
ssg83
g2551
sg76
(lp2558
S'SERVER_PORT'
p2559
asbag69
(g90
g71
NtRp2560
(dp2561
g74
(dp2562
g101
g102
ssg83
g2551
sg76
(lp2563
S':'
asbag69
(g90
g71
NtRp2564
(dp2565
g74
(dp2566
sg83
g2551
sg76
(lp2567
g69
(g70
g71
NtRp2568
(dp2569
g74
(dp2570
g82
I3
ssg83
g2564
sg76
(lp2571
g1199
asbasbasbag69
(g85
g71
NtRp2572
(dp2573
g74
(dp2574
sg83
g2232
sg76
(lp2575
g69
(g90
g71
NtRp2576
(dp2577
g74
(dp2578
g94
g95
ssg83
g2572
sg76
(lp2579
S'SERVER_PROTOCOL'
p2580
asbag69
(g90
g71
NtRp2581
(dp2582
g74
(dp2583
g101
g102
ssg83
g2572
sg76
(lp2584
S':'
asbag69
(g90
g71
NtRp2585
(dp2586
g74
(dp2587
sg83
g2572
sg76
(lp2588
g69
(g70
g71
NtRp2589
(dp2590
g74
(dp2591
g82
I3
ssg83
g2585
sg76
(lp2592
g1221
asbasbasbag69
(g85
g71
NtRp2593
(dp2594
g74
(dp2595
sg83
g2232
sg76
(lp2596
g69
(g90
g71
NtRp2597
(dp2598
g74
(dp2599
g94
g95
ssg83
g2593
sg76
(lp2600
S'SERVER_SOFTWARE'
p2601
asbag69
(g90
g71
NtRp2602
(dp2603
g74
(dp2604
g101
g102
ssg83
g2593
sg76
(lp2605
S':'
asbag69
(g90
g71
NtRp2606
(dp2607
g74
(dp2608
sg83
g2593
sg76
(lp2609
g69
(g70
g71
NtRp2610
(dp2611
g74
(dp2612
g82
I3
ssg83
g2606
sg76
(lp2613
g1243
asbasbasbag69
(g85
g71
NtRp2614
(dp2615
g74
(dp2616
sg83
g2232
sg76
(lp2617
g69
(g90
g71
NtRp2618
(dp2619
g74
(dp2620
g94
g95
ssg83
g2614
sg76
(lp2621
S'wsgi.errors'
p2622
asbag69
(g90
g71
NtRp2623
(dp2624
g74
(dp2625
g101
g102
ssg83
g2614
sg76
(lp2626
S':'
asbag69
(g90
g71
NtRp2627
(dp2628
g74
(dp2629
sg83
g2614
sg76
(lp2630
g69
(g70
g71
NtRp2631
(dp2632
g74
(dp2633
g82
I3
ssg83
g2627
sg76
(lp2634
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p2635
asbasbasbag69
(g85
g71
NtRp2636
(dp2637
g74
(dp2638
sg83
g2232
sg76
(lp2639
g69
(g90
g71
NtRp2640
(dp2641
g74
(dp2642
g94
g95
ssg83
g2636
sg76
(lp2643
S'wsgi.file_wrapper'
p2644
asbag69
(g90
g71
NtRp2645
(dp2646
g74
(dp2647
g101
g102
ssg83
g2636
sg76
(lp2648
S':'
asbag69
(g90
g71
NtRp2649
(dp2650
g74
(dp2651
sg83
g2636
sg76
(lp2652
g69
(g70
g71
NtRp2653
(dp2654
g74
(dp2655
g82
I3
ssg83
g2649
sg76
(lp2656
S'<class wsgiref.util.FileWrapper at 0x0164ADF8>'
p2657
asbasbasbag69
(g85
g71
NtRp2658
(dp2659
g74
(dp2660
sg83
g2232
sg76
(lp2661
g69
(g90
g71
NtRp2662
(dp2663
g74
(dp2664
g94
g95
ssg83
g2658
sg76
(lp2665
S'wsgi.input'
p2666
asbag69
(g90
g71
NtRp2667
(dp2668
g74
(dp2669
g101
g102
ssg83
g2658
sg76
(lp2670
S':'
asbag69
(g90
g71
NtRp2671
(dp2672
g74
(dp2673
sg83
g2658
sg76
(lp2674
g69
(g70
g71
NtRp2675
(dp2676
g74
(dp2677
g82
I3
ssg83
g2671
sg76
(lp2678
S'<cStringIO.StringO object at 0x049E7640>'
p2679
asbasbasbag69
(g85
g71
NtRp2680
(dp2681
g74
(dp2682
sg83
g2232
sg76
(lp2683
g69
(g90
g71
NtRp2684
(dp2685
g74
(dp2686
g94
g95
ssg83
g2680
sg76
(lp2687
S'wsgi.multiprocess'
p2688
asbag69
(g90
g71
NtRp2689
(dp2690
g74
(dp2691
g101
g102
ssg83
g2680
sg76
(lp2692
S':'
asbag69
(g90
g71
NtRp2693
(dp2694
g74
(dp2695
sg83
g2680
sg76
(lp2696
g69
(g70
g71
NtRp2697
(dp2698
g74
(dp2699
g82
I3
ssg83
g2693
sg76
(lp2700
g112
asbasbasbag69
(g85
g71
NtRp2701
(dp2702
g74
(dp2703
sg83
g2232
sg76
(lp2704
g69
(g90
g71
NtRp2705
(dp2706
g74
(dp2707
g94
g95
ssg83
g2701
sg76
(lp2708
S'wsgi.multithread'
p2709
asbag69
(g90
g71
NtRp2710
(dp2711
g74
(dp2712
g101
g102
ssg83
g2701
sg76
(lp2713
S':'
asbag69
(g90
g71
NtRp2714
(dp2715
g74
(dp2716
sg83
g2701
sg76
(lp2717
g69
(g70
g71
NtRp2718
(dp2719
g74
(dp2720
g82
I3
ssg83
g2714
sg76
(lp2721
g1483
asbasbasbag69
(g85
g71
NtRp2722
(dp2723
g74
(dp2724
sg83
g2232
sg76
(lp2725
g69
(g90
g71
NtRp2726
(dp2727
g74
(dp2728
g94
g95
ssg83
g2722
sg76
(lp2729
S'wsgi.run_once'
p2730
asbag69
(g90
g71
NtRp2731
(dp2732
g74
(dp2733
g101
g102
ssg83
g2722
sg76
(lp2734
S':'
asbag69
(g90
g71
NtRp2735
(dp2736
g74
(dp2737
sg83
g2722
sg76
(lp2738
g69
(g70
g71
NtRp2739
(dp2740
g74
(dp2741
g82
I3
ssg83
g2735
sg76
(lp2742
g112
asbasbasbag69
(g85
g71
NtRp2743
(dp2744
g74
(dp2745
sg83
g2232
sg76
(lp2746
g69
(g90
g71
NtRp2747
(dp2748
g74
(dp2749
g94
g95
ssg83
g2743
sg76
(lp2750
S'wsgi.url_scheme'
p2751
asbag69
(g90
g71
NtRp2752
(dp2753
g74
(dp2754
g101
g102
ssg83
g2743
sg76
(lp2755
S':'
asbag69
(g90
g71
NtRp2756
(dp2757
g74
(dp2758
sg83
g2743
sg76
(lp2759
g69
(g70
g71
NtRp2760
(dp2761
g74
(dp2762
g82
I3
ssg83
g2756
sg76
(lp2763
g1526
asbasbasbag69
(g85
g71
NtRp2764
(dp2765
g74
(dp2766
sg83
g2232
sg76
(lp2767
g69
(g90
g71
NtRp2768
(dp2769
g74
(dp2770
g94
g95
ssg83
g2764
sg76
(lp2771
S'wsgi.version'
p2772
asbag69
(g90
g71
NtRp2773
(dp2774
g74
(dp2775
g101
g102
ssg83
g2764
sg76
(lp2776
S':'
asbag69
(g90
g71
NtRp2777
(dp2778
g74
(dp2779
sg83
g2764
sg76
(lp2780
g69
(g70
g71
NtRp2781
(dp2782
g74
(dp2783
g82
I3
ssg83
g2777
sg76
(lp2784
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2785
(lp2786
(dp2787
S'file'
p2788
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py'
p2789
sS'dump'
p2790
(dp2791
S'code'
p2792
S'\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\''
p2793
sS'layer'
p2794
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p2795
sS'global compile2'
p2796
S'<function compile2>'
p2797
sS'ccode'
p2798
S'undefined'
p2799
ssS'lnum'
p2800
I204
sS'lines'
p2801
(dp2802
I199
S"    environment['__name__'] = '__restricted__'"
p2803
sI200
S'    try:'
p2804
sI201
S'        if type(code) == types.CodeType:'
p2805
sI202
S'            ccode = code'
p2806
sI203
S'        else:'
p2807
sI204
S'            ccode = compile2(code,layer)'
p2808
sI205
S'        exec ccode in environment'
p2809
sI206
S'    except HTTP:'
p2810
sI207
S'        raise'
p2811
sI208
S'    except RestrictedError:'
p2812
ssS'call'
p2813
S'(code=\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, ...}, layer=r\'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py\')'
p2814
sS'func'
p2815
S'restricted'
p2816
sa(dp2817
g2788
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py'
p2818
sg2790
(dp2819
S'builtincompile'
p2820
S'<built-in function compile>'
p2821
sS'code'
p2822
S'\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\''
p2823
sS'code.rstrip'
p2824
S'<built-in method rstrip of str object>'
p2825
sS').replace'
p2826
g2799
sS'layer'
p2827
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p2828
ssg2800
I189
sg2801
(dp2829
I192
S'    """'
p2830
sI193
S'    runs code in environment and returns the output. if an exception occurs'
p2831
sI184
S''
sI185
S'def compile2(code,layer):'
p2832
sI186
S'    """'
p2833
sI187
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p2834
sI188
S'    """'
p2835
sI189
S"    return compile(code.rstrip().replace('\\r\\n','\\n')+'\\n', layer, 'exec')"
p2836
sI190
S''
sI191
S"def restricted(code, environment=None, layer='Unknown'):"
p2837
ssg2813
S'(code=\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\', layer=r\'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py\')'
p2838
sg2815
S'compile2'
p2839
sasS'pyver'
p2840
S'Python 2.7.3: C:\\Python27\\python.exe'
p2841
sS'session'
p2842
g69
(g70
g71
NtRp2843
(dp2844
g74
(dp2845
sg76
(lp2846
g69
(g78
g71
NtRp2847
(dp2848
g74
(dp2849
g82
I5
ssg83
Nsg76
(lp2850
g69
(g85
g71
NtRp2851
(dp2852
g74
(dp2853
sg83
g2847
sg76
(lp2854
g69
(g90
g71
NtRp2855
(dp2856
g74
(dp2857
g94
g95
ssg83
g2851
sg76
(lp2858
S'scrollbarWidth'
p2859
asbag69
(g90
g71
NtRp2860
(dp2861
g74
(dp2862
g101
g102
ssg83
g2851
sg76
(lp2863
S':'
asbag69
(g90
g71
NtRp2864
(dp2865
g74
(dp2866
sg83
g2851
sg76
(lp2867
g69
(g70
g71
NtRp2868
(dp2869
g74
(dp2870
g82
I5
ssg83
g2864
sg76
(lp2871
S'17'
p2872
asbasbasbag69
(g85
g71
NtRp2873
(dp2874
g74
(dp2875
sg83
g2847
sg76
(lp2876
g69
(g90
g71
NtRp2877
(dp2878
g74
(dp2879
g94
g95
ssg83
g2873
sg76
(lp2880
S'textWidthMetric'
p2881
asbag69
(g90
g71
NtRp2882
(dp2883
g74
(dp2884
g101
g102
ssg83
g2873
sg76
(lp2885
S':'
asbag69
(g90
g71
NtRp2886
(dp2887
g74
(dp2888
sg83
g2873
sg76
(lp2889
g69
(g70
g71
NtRp2890
(dp2891
g74
(dp2892
g82
I5
ssg83
g2886
sg76
(lp2893
S'10.25'
p2894
asbasbasbag69
(g85
g71
NtRp2895
(dp2896
g74
(dp2897
sg83
g2847
sg76
(lp2898
g69
(g90
g71
NtRp2899
(dp2900
g74
(dp2901
g94
g95
ssg83
g2895
sg76
(lp2902
S'windowHeight'
p2903
asbag69
(g90
g71
NtRp2904
(dp2905
g74
(dp2906
g101
g102
ssg83
g2895
sg76
(lp2907
S':'
asbag69
(g90
g71
NtRp2908
(dp2909
g74
(dp2910
sg83
g2895
sg76
(lp2911
g69
(g70
g71
NtRp2912
(dp2913
g74
(dp2914
g82
I5
ssg83
g2908
sg76
(lp2915
S'957'
p2916
asbasbasbag69
(g85
g71
NtRp2917
(dp2918
g74
(dp2919
sg83
g2847
sg76
(lp2920
g69
(g90
g71
NtRp2921
(dp2922
g74
(dp2923
g94
g95
ssg83
g2917
sg76
(lp2924
S'windowWidth'
p2925
asbag69
(g90
g71
NtRp2926
(dp2927
g74
(dp2928
g101
g102
ssg83
g2917
sg76
(lp2929
S':'
asbag69
(g90
g71
NtRp2930
(dp2931
g74
(dp2932
sg83
g2917
sg76
(lp2933
g69
(g70
g71
NtRp2934
(dp2935
g74
(dp2936
g82
I5
ssg83
g2930
sg76
(lp2937
S'1680'
p2938
asbasbasbasbasbsS'etype'
p2939
S"<type 'exceptions.IndentationError'>"
p2940
sS'date'
p2941
S'Mon Jul 16 15:06:20 2012'
p2942
sS'response'
p2943
g69
(g70
g71
NtRp2944
(dp2945
g74
(dp2946
sg76
(lp2947
g69
(g78
g71
NtRp2948
(dp2949
g74
(dp2950
g82
I5
ssg83
Nsg76
(lp2951
g69
(g85
g71
NtRp2952
(dp2953
g74
(dp2954
sg83
g2948
sg76
(lp2955
g69
(g90
g71
NtRp2956
(dp2957
g74
(dp2958
g94
g95
ssg83
g2952
sg76
(lp2959
g167
asbag69
(g90
g71
NtRp2960
(dp2961
g74
(dp2962
g101
g102
ssg83
g2952
sg76
(lp2963
S':'
asbag69
(g90
g71
NtRp2964
(dp2965
g74
(dp2966
sg83
g2952
sg76
(lp2967
g69
(g70
g71
NtRp2968
(dp2969
g74
(dp2970
g82
I5
ssg83
g2964
sg76
(lp2971
S'<cStringIO.StringO object at 0x049E71C0>'
p2972
asbasbasbag69
(g85
g71
NtRp2973
(dp2974
g74
(dp2975
sg83
g2948
sg76
(lp2976
g69
(g90
g71
NtRp2977
(dp2978
g74
(dp2979
g94
g95
ssg83
g2973
sg76
(lp2980
g233
asbag69
(g90
g71
NtRp2981
(dp2982
g74
(dp2983
g101
g102
ssg83
g2973
sg76
(lp2984
S':'
asbag69
(g90
g71
NtRp2985
(dp2986
g74
(dp2987
sg83
g2973
sg76
(lp2988
g69
(g70
g71
NtRp2989
(dp2990
g74
(dp2991
g82
I5
ssg83
g2985
sg76
(lp2992
g69
(g78
g71
NtRp2993
(dp2994
g74
(dp2995
g82
I4
ssg83
Nsg76
(lp2996
g69
(g85
g71
NtRp2997
(dp2998
g74
(dp2999
sg83
g2993
sg76
(lp3000
g69
(g90
g71
NtRp3001
(dp3002
g74
(dp3003
g94
g95
ssg83
g2997
sg76
(lp3004
S'session_id_phylografter'
p3005
asbag69
(g90
g71
NtRp3006
(dp3007
g74
(dp3008
g101
g102
ssg83
g2997
sg76
(lp3009
S':'
asbag69
(g90
g71
NtRp3010
(dp3011
g74
(dp3012
sg83
g2997
sg76
(lp3013
g69
(g70
g71
NtRp3014
(dp3015
g74
(dp3016
g82
I4
ssg83
g3010
sg76
(lp3017
g69
(g78
g71
NtRp3018
(dp3019
g74
(dp3020
g82
I3
ssg83
Nsg76
(lp3021
g69
(g85
g71
NtRp3022
(dp3023
g74
(dp3024
sg83
g3018
sg76
(lp3025
g69
(g90
g71
NtRp3026
(dp3027
g74
(dp3028
g94
g95
ssg83
g3022
sg76
(lp3029
g283
asbag69
(g90
g71
NtRp3030
(dp3031
g74
(dp3032
g101
g102
ssg83
g3022
sg76
(lp3033
S':'
asbag69
(g90
g71
NtRp3034
(dp3035
g74
(dp3036
sg83
g3022
sg76
(lp3037
g69
(g70
g71
NtRp3038
(dp3039
g74
(dp3040
g82
I3
ssg83
g3034
sg76
(lp3041
S''
asbasbasbag69
(g85
g71
NtRp3042
(dp3043
g74
(dp3044
sg83
g3018
sg76
(lp3045
g69
(g90
g71
NtRp3046
(dp3047
g74
(dp3048
g94
g95
ssg83
g3042
sg76
(lp3049
g304
asbag69
(g90
g71
NtRp3050
(dp3051
g74
(dp3052
g101
g102
ssg83
g3042
sg76
(lp3053
S':'
asbag69
(g90
g71
NtRp3054
(dp3055
g74
(dp3056
sg83
g3042
sg76
(lp3057
g69
(g70
g71
NtRp3058
(dp3059
g74
(dp3060
g82
I3
ssg83
g3054
sg76
(lp3061
S''
asbasbasbag69
(g85
g71
NtRp3062
(dp3063
g74
(dp3064
sg83
g3018
sg76
(lp3065
g69
(g90
g71
NtRp3066
(dp3067
g74
(dp3068
g94
g95
ssg83
g3062
sg76
(lp3069
g325
asbag69
(g90
g71
NtRp3070
(dp3071
g74
(dp3072
g101
g102
ssg83
g3062
sg76
(lp3073
S':'
asbag69
(g90
g71
NtRp3074
(dp3075
g74
(dp3076
sg83
g3062
sg76
(lp3077
g69
(g70
g71
NtRp3078
(dp3079
g74
(dp3080
g82
I3
ssg83
g3074
sg76
(lp3081
S''
asbasbasbag69
(g85
g71
NtRp3082
(dp3083
g74
(dp3084
sg83
g3018
sg76
(lp3085
g69
(g90
g71
NtRp3086
(dp3087
g74
(dp3088
g94
g95
ssg83
g3082
sg76
(lp3089
g346
asbag69
(g90
g71
NtRp3090
(dp3091
g74
(dp3092
g101
g102
ssg83
g3082
sg76
(lp3093
S':'
asbag69
(g90
g71
NtRp3094
(dp3095
g74
(dp3096
sg83
g3082
sg76
(lp3097
g69
(g70
g71
NtRp3098
(dp3099
g74
(dp3100
g82
I3
ssg83
g3094
sg76
(lp3101
S''
asbasbasbag69
(g85
g71
NtRp3102
(dp3103
g74
(dp3104
sg83
g3018
sg76
(lp3105
g69
(g90
g71
NtRp3106
(dp3107
g74
(dp3108
g94
g95
ssg83
g3102
sg76
(lp3109
g367
asbag69
(g90
g71
NtRp3110
(dp3111
g74
(dp3112
g101
g102
ssg83
g3102
sg76
(lp3113
S':'
asbag69
(g90
g71
NtRp3114
(dp3115
g74
(dp3116
sg83
g3102
sg76
(lp3117
g69
(g70
g71
NtRp3118
(dp3119
g74
(dp3120
g82
I3
ssg83
g3114
sg76
(lp3121
S''
asbasbasbag69
(g85
g71
NtRp3122
(dp3123
g74
(dp3124
sg83
g3018
sg76
(lp3125
g69
(g90
g71
NtRp3126
(dp3127
g74
(dp3128
g94
g95
ssg83
g3122
sg76
(lp3129
g388
asbag69
(g90
g71
NtRp3130
(dp3131
g74
(dp3132
g101
g102
ssg83
g3122
sg76
(lp3133
S':'
asbag69
(g90
g71
NtRp3134
(dp3135
g74
(dp3136
sg83
g3122
sg76
(lp3137
g69
(g70
g71
NtRp3138
(dp3139
g74
(dp3140
g82
I3
ssg83
g3134
sg76
(lp3141
S'/'
asbasbasbag69
(g85
g71
NtRp3142
(dp3143
g74
(dp3144
sg83
g3018
sg76
(lp3145
g69
(g90
g71
NtRp3146
(dp3147
g74
(dp3148
g94
g95
ssg83
g3142
sg76
(lp3149
g409
asbag69
(g90
g71
NtRp3150
(dp3151
g74
(dp3152
g101
g102
ssg83
g3142
sg76
(lp3153
S':'
asbag69
(g90
g71
NtRp3154
(dp3155
g74
(dp3156
sg83
g3142
sg76
(lp3157
g69
(g70
g71
NtRp3158
(dp3159
g74
(dp3160
g82
I3
ssg83
g3154
sg76
(lp3161
S''
asbasbasbag69
(g85
g71
NtRp3162
(dp3163
g74
(dp3164
sg83
g3018
sg76
(lp3165
g69
(g90
g71
NtRp3166
(dp3167
g74
(dp3168
g94
g95
ssg83
g3162
sg76
(lp3169
g430
asbag69
(g90
g71
NtRp3170
(dp3171
g74
(dp3172
g101
g102
ssg83
g3162
sg76
(lp3173
S':'
asbag69
(g90
g71
NtRp3174
(dp3175
g74
(dp3176
sg83
g3162
sg76
(lp3177
g69
(g70
g71
NtRp3178
(dp3179
g74
(dp3180
g82
I3
ssg83
g3174
sg76
(lp3181
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3182
(dp3183
g74
(dp3184
sg83
g2948
sg76
(lp3185
g69
(g90
g71
NtRp3186
(dp3187
g74
(dp3188
g94
g95
ssg83
g3182
sg76
(lp3189
S'delimiters'
p3190
asbag69
(g90
g71
NtRp3191
(dp3192
g74
(dp3193
g101
g102
ssg83
g3182
sg76
(lp3194
S':'
asbag69
(g90
g71
NtRp3195
(dp3196
g74
(dp3197
sg83
g3182
sg76
(lp3198
g69
(g70
g71
NtRp3199
(dp3200
g74
(dp3201
g82
I5
ssg83
g3195
sg76
(lp3202
g69
(g78
g71
NtRp3203
(dp3204
g74
(dp3205
g82
I4
ssg83
Nsg76
(lp3206
g69
(g85
g71
NtRp3207
(dp3208
g74
(dp3209
sg83
g3203
sg76
(lp3210
g69
(g90
g71
NtRp3211
(dp3212
g74
(dp3213
sg83
g3207
sg76
(lp3214
g69
(g70
g71
NtRp3215
(dp3216
g74
(dp3217
g82
I4
ssg83
g3211
sg76
(lp3218
S'{{'
p3219
asbasbasbag69
(g85
g71
NtRp3220
(dp3221
g74
(dp3222
sg83
g3203
sg76
(lp3223
g69
(g90
g71
NtRp3224
(dp3225
g74
(dp3226
sg83
g3220
sg76
(lp3227
g69
(g70
g71
NtRp3228
(dp3229
g74
(dp3230
g82
I4
ssg83
g3224
sg76
(lp3231
S'}}'
p3232
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3233
(dp3234
g74
(dp3235
sg83
g2948
sg76
(lp3236
g69
(g90
g71
NtRp3237
(dp3238
g74
(dp3239
g94
g95
ssg83
g3233
sg76
(lp3240
S'files'
p3241
asbag69
(g90
g71
NtRp3242
(dp3243
g74
(dp3244
g101
g102
ssg83
g3233
sg76
(lp3245
S':'
asbag69
(g90
g71
NtRp3246
(dp3247
g74
(dp3248
sg83
g3233
sg76
(lp3249
g69
(g70
g71
NtRp3250
(dp3251
g74
(dp3252
g82
I5
ssg83
g3246
sg76
(lp3253
g69
(g78
g71
NtRp3254
(dp3255
g74
(dp3256
g82
I4
ssg83
Nsg76
(lp3257
sbasbasbasbag69
(g85
g71
NtRp3258
(dp3259
g74
(dp3260
sg83
g2948
sg76
(lp3261
g69
(g90
g71
NtRp3262
(dp3263
g74
(dp3264
g94
g95
ssg83
g3258
sg76
(lp3265
S'flash'
p3266
asbag69
(g90
g71
NtRp3267
(dp3268
g74
(dp3269
g101
g102
ssg83
g3258
sg76
(lp3270
S':'
asbag69
(g90
g71
NtRp3271
(dp3272
g74
(dp3273
sg83
g3258
sg76
(lp3274
g69
(g70
g71
NtRp3275
(dp3276
g74
(dp3277
g82
I5
ssg83
g3271
sg76
(lp3278
S''
asbasbasbag69
(g85
g71
NtRp3279
(dp3280
g74
(dp3281
sg83
g2948
sg76
(lp3282
g69
(g90
g71
NtRp3283
(dp3284
g74
(dp3285
g94
g95
ssg83
g3279
sg76
(lp3286
S'generic_patterns'
p3287
asbag69
(g90
g71
NtRp3288
(dp3289
g74
(dp3290
g101
g102
ssg83
g3279
sg76
(lp3291
S':'
asbag69
(g90
g71
NtRp3292
(dp3293
g74
(dp3294
sg83
g3279
sg76
(lp3295
g69
(g70
g71
NtRp3296
(dp3297
g74
(dp3298
g82
I5
ssg83
g3292
sg76
(lp3299
g69
(g78
g71
NtRp3300
(dp3301
g74
(dp3302
g82
I4
ssg83
Nsg76
(lp3303
sbasbasbasbag69
(g85
g71
NtRp3304
(dp3305
g74
(dp3306
sg83
g2948
sg76
(lp3307
g69
(g90
g71
NtRp3308
(dp3309
g74
(dp3310
g94
g95
ssg83
g3304
sg76
(lp3311
S'headers'
p3312
asbag69
(g90
g71
NtRp3313
(dp3314
g74
(dp3315
g101
g102
ssg83
g3304
sg76
(lp3316
S':'
asbag69
(g90
g71
NtRp3317
(dp3318
g74
(dp3319
sg83
g3304
sg76
(lp3320
g69
(g70
g71
NtRp3321
(dp3322
g74
(dp3323
g82
I5
ssg83
g3317
sg76
(lp3324
g69
(g78
g71
NtRp3325
(dp3326
g74
(dp3327
g82
I4
ssg83
Nsg76
(lp3328
g69
(g85
g71
NtRp3329
(dp3330
g74
(dp3331
sg83
g3325
sg76
(lp3332
g69
(g90
g71
NtRp3333
(dp3334
g74
(dp3335
g94
g95
ssg83
g3329
sg76
(lp3336
S'Cache-Control'
p3337
asbag69
(g90
g71
NtRp3338
(dp3339
g74
(dp3340
g101
g102
ssg83
g3329
sg76
(lp3341
S':'
asbag69
(g90
g71
NtRp3342
(dp3343
g74
(dp3344
sg83
g3329
sg76
(lp3345
g69
(g70
g71
NtRp3346
(dp3347
g74
(dp3348
g82
I4
ssg83
g3342
sg76
(lp3349
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3350
asbasbasbag69
(g85
g71
NtRp3351
(dp3352
g74
(dp3353
sg83
g3325
sg76
(lp3354
g69
(g90
g71
NtRp3355
(dp3356
g74
(dp3357
g94
g95
ssg83
g3351
sg76
(lp3358
S'Content-Type'
p3359
asbag69
(g90
g71
NtRp3360
(dp3361
g74
(dp3362
g101
g102
ssg83
g3351
sg76
(lp3363
S':'
asbag69
(g90
g71
NtRp3364
(dp3365
g74
(dp3366
sg83
g3351
sg76
(lp3367
g69
(g70
g71
NtRp3368
(dp3369
g74
(dp3370
g82
I4
ssg83
g3364
sg76
(lp3371
S'text/html; charset=utf-8'
p3372
asbasbasbag69
(g85
g71
NtRp3373
(dp3374
g74
(dp3375
sg83
g3325
sg76
(lp3376
g69
(g90
g71
NtRp3377
(dp3378
g74
(dp3379
g94
g95
ssg83
g3373
sg76
(lp3380
S'Expires'
p3381
asbag69
(g90
g71
NtRp3382
(dp3383
g74
(dp3384
g101
g102
ssg83
g3373
sg76
(lp3385
S':'
asbag69
(g90
g71
NtRp3386
(dp3387
g74
(dp3388
sg83
g3373
sg76
(lp3389
g69
(g70
g71
NtRp3390
(dp3391
g74
(dp3392
g82
I4
ssg83
g3386
sg76
(lp3393
S'Mon, 16 Jul 2012 20:06:20 GMT'
p3394
asbasbasbag69
(g85
g71
NtRp3395
(dp3396
g74
(dp3397
sg83
g3325
sg76
(lp3398
g69
(g90
g71
NtRp3399
(dp3400
g74
(dp3401
g94
g95
ssg83
g3395
sg76
(lp3402
S'Pragma'
p3403
asbag69
(g90
g71
NtRp3404
(dp3405
g74
(dp3406
g101
g102
ssg83
g3395
sg76
(lp3407
S':'
asbag69
(g90
g71
NtRp3408
(dp3409
g74
(dp3410
sg83
g3395
sg76
(lp3411
g69
(g70
g71
NtRp3412
(dp3413
g74
(dp3414
g82
I4
ssg83
g3408
sg76
(lp3415
S'no-cache'
p3416
asbasbasbag69
(g85
g71
NtRp3417
(dp3418
g74
(dp3419
sg83
g3325
sg76
(lp3420
g69
(g90
g71
NtRp3421
(dp3422
g74
(dp3423
g94
g95
ssg83
g3417
sg76
(lp3424
S'X-Powered-By'
p3425
asbag69
(g90
g71
NtRp3426
(dp3427
g74
(dp3428
g101
g102
ssg83
g3417
sg76
(lp3429
S':'
asbag69
(g90
g71
NtRp3430
(dp3431
g74
(dp3432
sg83
g3417
sg76
(lp3433
g69
(g70
g71
NtRp3434
(dp3435
g74
(dp3436
g82
I4
ssg83
g3430
sg76
(lp3437
S'web2py'
p3438
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3439
(dp3440
g74
(dp3441
sg83
g2948
sg76
(lp3442
g69
(g90
g71
NtRp3443
(dp3444
g74
(dp3445
g94
g95
ssg83
g3439
sg76
(lp3446
S'menu'
p3447
asbag69
(g90
g71
NtRp3448
(dp3449
g74
(dp3450
g101
g102
ssg83
g3439
sg76
(lp3451
S':'
asbag69
(g90
g71
NtRp3452
(dp3453
g74
(dp3454
sg83
g3439
sg76
(lp3455
g69
(g70
g71
NtRp3456
(dp3457
g74
(dp3458
g82
I5
ssg83
g3452
sg76
(lp3459
g69
(g78
g71
NtRp3460
(dp3461
g74
(dp3462
g82
I4
ssg83
Nsg76
(lp3463
g69
(g85
g71
NtRp3464
(dp3465
g74
(dp3466
sg83
g3460
sg76
(lp3467
g69
(g90
g71
NtRp3468
(dp3469
g74
(dp3470
sg83
g3464
sg76
(lp3471
g69
(g70
g71
NtRp3472
(dp3473
g74
(dp3474
g82
I4
ssg83
g3468
sg76
(lp3475
g69
(g78
g71
NtRp3476
(dp3477
g74
(dp3478
g82
I3
ssg83
Nsg76
(lp3479
g69
(g85
g71
NtRp3480
(dp3481
g74
(dp3482
sg83
g3476
sg76
(lp3483
g69
(g90
g71
NtRp3484
(dp3485
g74
(dp3486
sg83
g3480
sg76
(lp3487
g69
(g70
g71
NtRp3488
(dp3489
g74
(dp3490
g82
I3
ssg83
g3484
sg76
(lp3491
cgluon.languages
lazyT_unpickle
p3492
(S't\x04\x00\x00\x00Home'
tRp3493
asbasbasbag69
(g85
g71
NtRp3494
(dp3495
g74
(dp3496
sg83
g3476
sg76
(lp3497
g69
(g90
g71
NtRp3498
(dp3499
g74
(dp3500
sg83
g3494
sg76
(lp3501
g69
(g70
g71
NtRp3502
(dp3503
g74
(dp3504
g82
I3
ssg83
g3498
sg76
(lp3505
g112
asbasbasbag69
(g85
g71
NtRp3506
(dp3507
g74
(dp3508
sg83
g3476
sg76
(lp3509
g69
(g90
g71
NtRp3510
(dp3511
g74
(dp3512
sg83
g3506
sg76
(lp3513
g69
(g70
g71
NtRp3514
(dp3515
g74
(dp3516
g82
I3
ssg83
g3510
sg76
(lp3517
S'/Phylografter/default/index'
p3518
asbasbasbag69
(g85
g71
NtRp3519
(dp3520
g74
(dp3521
sg83
g3476
sg76
(lp3522
g69
(g90
g71
NtRp3523
(dp3524
g74
(dp3525
sg83
g3519
sg76
(lp3526
g69
(g70
g71
NtRp3527
(dp3528
g74
(dp3529
g82
I3
ssg83
g3523
sg76
(lp3530
g69
(g78
g71
NtRp3531
(dp3532
g74
(dp3533
g82
I2
ssg83
Nsg76
(lp3534
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3535
(dp3536
g74
(dp3537
sg83
g3460
sg76
(lp3538
g69
(g90
g71
NtRp3539
(dp3540
g74
(dp3541
sg83
g3535
sg76
(lp3542
g69
(g70
g71
NtRp3543
(dp3544
g74
(dp3545
g82
I4
ssg83
g3539
sg76
(lp3546
g69
(g78
g71
NtRp3547
(dp3548
g74
(dp3549
g82
I3
ssg83
Nsg76
(lp3550
g69
(g85
g71
NtRp3551
(dp3552
g74
(dp3553
sg83
g3547
sg76
(lp3554
g69
(g90
g71
NtRp3555
(dp3556
g74
(dp3557
sg83
g3551
sg76
(lp3558
g69
(g70
g71
NtRp3559
(dp3560
g74
(dp3561
g82
I3
ssg83
g3555
sg76
(lp3562
g3492
(S't\x04\x00\x00\x00Taxa'
tRp3563
asbasbasbag69
(g85
g71
NtRp3564
(dp3565
g74
(dp3566
sg83
g3547
sg76
(lp3567
g69
(g90
g71
NtRp3568
(dp3569
g74
(dp3570
sg83
g3564
sg76
(lp3571
g69
(g70
g71
NtRp3572
(dp3573
g74
(dp3574
g82
I3
ssg83
g3568
sg76
(lp3575
g112
asbasbasbag69
(g85
g71
NtRp3576
(dp3577
g74
(dp3578
sg83
g3547
sg76
(lp3579
g69
(g90
g71
NtRp3580
(dp3581
g74
(dp3582
sg83
g3576
sg76
(lp3583
g69
(g70
g71
NtRp3584
(dp3585
g74
(dp3586
g82
I3
ssg83
g3580
sg76
(lp3587
S'/Phylografter/taxon/index'
p3588
asbasbasbag69
(g85
g71
NtRp3589
(dp3590
g74
(dp3591
sg83
g3547
sg76
(lp3592
g69
(g90
g71
NtRp3593
(dp3594
g74
(dp3595
sg83
g3589
sg76
(lp3596
g69
(g70
g71
NtRp3597
(dp3598
g74
(dp3599
g82
I3
ssg83
g3593
sg76
(lp3600
g69
(g78
g71
NtRp3601
(dp3602
g74
(dp3603
g82
I2
ssg83
Nsg76
(lp3604
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3605
(dp3606
g74
(dp3607
sg83
g3460
sg76
(lp3608
g69
(g90
g71
NtRp3609
(dp3610
g74
(dp3611
sg83
g3605
sg76
(lp3612
g69
(g70
g71
NtRp3613
(dp3614
g74
(dp3615
g82
I4
ssg83
g3609
sg76
(lp3616
g69
(g78
g71
NtRp3617
(dp3618
g74
(dp3619
g82
I3
ssg83
Nsg76
(lp3620
g69
(g85
g71
NtRp3621
(dp3622
g74
(dp3623
sg83
g3617
sg76
(lp3624
g69
(g90
g71
NtRp3625
(dp3626
g74
(dp3627
sg83
g3621
sg76
(lp3628
g69
(g70
g71
NtRp3629
(dp3630
g74
(dp3631
g82
I3
ssg83
g3625
sg76
(lp3632
g3492
(S't\x07\x00\x00\x00Studies'
tRp3633
asbasbasbag69
(g85
g71
NtRp3634
(dp3635
g74
(dp3636
sg83
g3617
sg76
(lp3637
g69
(g90
g71
NtRp3638
(dp3639
g74
(dp3640
sg83
g3634
sg76
(lp3641
g69
(g70
g71
NtRp3642
(dp3643
g74
(dp3644
g82
I3
ssg83
g3638
sg76
(lp3645
g112
asbasbasbag69
(g85
g71
NtRp3646
(dp3647
g74
(dp3648
sg83
g3617
sg76
(lp3649
g69
(g90
g71
NtRp3650
(dp3651
g74
(dp3652
sg83
g3646
sg76
(lp3653
g69
(g70
g71
NtRp3654
(dp3655
g74
(dp3656
g82
I3
ssg83
g3650
sg76
(lp3657
S'/Phylografter/study/index'
p3658
asbasbasbag69
(g85
g71
NtRp3659
(dp3660
g74
(dp3661
sg83
g3617
sg76
(lp3662
g69
(g90
g71
NtRp3663
(dp3664
g74
(dp3665
sg83
g3659
sg76
(lp3666
g69
(g70
g71
NtRp3667
(dp3668
g74
(dp3669
g82
I3
ssg83
g3663
sg76
(lp3670
g69
(g78
g71
NtRp3671
(dp3672
g74
(dp3673
g82
I2
ssg83
Nsg76
(lp3674
g69
(g85
g71
NtRp3675
(dp3676
g74
(dp3677
sg83
g3671
sg76
(lp3678
g69
(g90
g71
NtRp3679
(dp3680
g74
(dp3681
sg83
g3675
sg76
(lp3682
g69
(g70
g71
NtRp3683
(dp3684
g74
(dp3685
g82
I2
ssg83
g3679
sg76
(lp3686
g69
(g78
g71
NtRp3687
(dp3688
g74
(dp3689
g82
I1
ssg83
Nsg76
(lp3690
g69
(g85
g71
NtRp3691
(dp3692
g74
(dp3693
sg83
g3687
sg76
(lp3694
g69
(g90
g71
NtRp3695
(dp3696
g74
(dp3697
sg83
g3691
sg76
(lp3698
g69
(g70
g71
NtRp3699
(dp3700
g74
(dp3701
g82
I1
ssg83
g3695
sg76
(lp3702
S'New study'
p3703
asbasbasbag69
(g85
g71
NtRp3704
(dp3705
g74
(dp3706
sg83
g3687
sg76
(lp3707
g69
(g90
g71
NtRp3708
(dp3709
g74
(dp3710
sg83
g3704
sg76
(lp3711
g69
(g70
g71
NtRp3712
(dp3713
g74
(dp3714
g82
I1
ssg83
g3708
sg76
(lp3715
I00
asbasbasbag69
(g85
g71
NtRp3716
(dp3717
g74
(dp3718
sg83
g3687
sg76
(lp3719
g69
(g90
g71
NtRp3720
(dp3721
g74
(dp3722
sg83
g3716
sg76
(lp3723
g69
(g70
g71
NtRp3724
(dp3725
g74
(dp3726
g82
I1
ssg83
g3720
sg76
(lp3727
S'/Phylografter/study/create'
p3728
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3729
(dp3730
g74
(dp3731
sg83
g3671
sg76
(lp3732
g69
(g90
g71
NtRp3733
(dp3734
g74
(dp3735
sg83
g3729
sg76
(lp3736
g69
(g70
g71
NtRp3737
(dp3738
g74
(dp3739
g82
I2
ssg83
g3733
sg76
(lp3740
g69
(g78
g71
NtRp3741
(dp3742
g74
(dp3743
g82
I1
ssg83
Nsg76
(lp3744
g69
(g85
g71
NtRp3745
(dp3746
g74
(dp3747
sg83
g3741
sg76
(lp3748
g69
(g90
g71
NtRp3749
(dp3750
g74
(dp3751
sg83
g3745
sg76
(lp3752
g69
(g70
g71
NtRp3753
(dp3754
g74
(dp3755
g82
I1
ssg83
g3749
sg76
(lp3756
S'Import from TreeBASE'
p3757
asbasbasbag69
(g85
g71
NtRp3758
(dp3759
g74
(dp3760
sg83
g3741
sg76
(lp3761
g69
(g90
g71
NtRp3762
(dp3763
g74
(dp3764
sg83
g3758
sg76
(lp3765
g69
(g70
g71
NtRp3766
(dp3767
g74
(dp3768
g82
I1
ssg83
g3762
sg76
(lp3769
I00
asbasbasbag69
(g85
g71
NtRp3770
(dp3771
g74
(dp3772
sg83
g3741
sg76
(lp3773
g69
(g90
g71
NtRp3774
(dp3775
g74
(dp3776
sg83
g3770
sg76
(lp3777
g69
(g70
g71
NtRp3778
(dp3779
g74
(dp3780
g82
I1
ssg83
g3774
sg76
(lp3781
S'/Phylografter/study/tbimport'
p3782
asbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3783
(dp3784
g74
(dp3785
sg83
g3460
sg76
(lp3786
g69
(g90
g71
NtRp3787
(dp3788
g74
(dp3789
sg83
g3783
sg76
(lp3790
g69
(g70
g71
NtRp3791
(dp3792
g74
(dp3793
g82
I4
ssg83
g3787
sg76
(lp3794
g69
(g78
g71
NtRp3795
(dp3796
g74
(dp3797
g82
I3
ssg83
Nsg76
(lp3798
g69
(g85
g71
NtRp3799
(dp3800
g74
(dp3801
sg83
g3795
sg76
(lp3802
g69
(g90
g71
NtRp3803
(dp3804
g74
(dp3805
sg83
g3799
sg76
(lp3806
g69
(g70
g71
NtRp3807
(dp3808
g74
(dp3809
g82
I3
ssg83
g3803
sg76
(lp3810
g3492
(S's\x0c\x00\x00\x00Source Trees'
tRp3811
asbasbasbag69
(g85
g71
NtRp3812
(dp3813
g74
(dp3814
sg83
g3795
sg76
(lp3815
g69
(g90
g71
NtRp3816
(dp3817
g74
(dp3818
sg83
g3812
sg76
(lp3819
g69
(g70
g71
NtRp3820
(dp3821
g74
(dp3822
g82
I3
ssg83
g3816
sg76
(lp3823
g112
asbasbasbag69
(g85
g71
NtRp3824
(dp3825
g74
(dp3826
sg83
g3795
sg76
(lp3827
g69
(g90
g71
NtRp3828
(dp3829
g74
(dp3830
sg83
g3824
sg76
(lp3831
g69
(g70
g71
NtRp3832
(dp3833
g74
(dp3834
g82
I3
ssg83
g3828
sg76
(lp3835
S'/Phylografter/stree/index'
p3836
asbasbasbag69
(g85
g71
NtRp3837
(dp3838
g74
(dp3839
sg83
g3795
sg76
(lp3840
g69
(g90
g71
NtRp3841
(dp3842
g74
(dp3843
sg83
g3837
sg76
(lp3844
g69
(g70
g71
NtRp3845
(dp3846
g74
(dp3847
g82
I3
ssg83
g3841
sg76
(lp3848
g69
(g78
g71
NtRp3849
(dp3850
g74
(dp3851
g82
I2
ssg83
Nsg76
(lp3852
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3853
(dp3854
g74
(dp3855
sg83
g3460
sg76
(lp3856
g69
(g90
g71
NtRp3857
(dp3858
g74
(dp3859
sg83
g3853
sg76
(lp3860
g69
(g70
g71
NtRp3861
(dp3862
g74
(dp3863
g82
I4
ssg83
g3857
sg76
(lp3864
g69
(g78
g71
NtRp3865
(dp3866
g74
(dp3867
g82
I3
ssg83
Nsg76
(lp3868
g69
(g85
g71
NtRp3869
(dp3870
g74
(dp3871
sg83
g3865
sg76
(lp3872
g69
(g90
g71
NtRp3873
(dp3874
g74
(dp3875
sg83
g3869
sg76
(lp3876
g69
(g70
g71
NtRp3877
(dp3878
g74
(dp3879
g82
I3
ssg83
g3873
sg76
(lp3880
g3492
(S's\r\x00\x00\x00Grafted Trees'
tRp3881
asbasbasbag69
(g85
g71
NtRp3882
(dp3883
g74
(dp3884
sg83
g3865
sg76
(lp3885
g69
(g90
g71
NtRp3886
(dp3887
g74
(dp3888
sg83
g3882
sg76
(lp3889
g69
(g70
g71
NtRp3890
(dp3891
g74
(dp3892
g82
I3
ssg83
g3886
sg76
(lp3893
g112
asbasbasbag69
(g85
g71
NtRp3894
(dp3895
g74
(dp3896
sg83
g3865
sg76
(lp3897
g69
(g90
g71
NtRp3898
(dp3899
g74
(dp3900
sg83
g3894
sg76
(lp3901
g69
(g70
g71
NtRp3902
(dp3903
g74
(dp3904
g82
I3
ssg83
g3898
sg76
(lp3905
S'/Phylografter/gtree/index'
p3906
asbasbasbag69
(g85
g71
NtRp3907
(dp3908
g74
(dp3909
sg83
g3865
sg76
(lp3910
g69
(g90
g71
NtRp3911
(dp3912
g74
(dp3913
sg83
g3907
sg76
(lp3914
g69
(g70
g71
NtRp3915
(dp3916
g74
(dp3917
g82
I3
ssg83
g3911
sg76
(lp3918
g69
(g78
g71
NtRp3919
(dp3920
g74
(dp3921
g82
I2
ssg83
Nsg76
(lp3922
sbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3923
(dp3924
g74
(dp3925
sg83
g2948
sg76
(lp3926
g69
(g90
g71
NtRp3927
(dp3928
g74
(dp3929
g94
g95
ssg83
g3923
sg76
(lp3930
S'meta'
p3931
asbag69
(g90
g71
NtRp3932
(dp3933
g74
(dp3934
g101
g102
ssg83
g3923
sg76
(lp3935
S':'
asbag69
(g90
g71
NtRp3936
(dp3937
g74
(dp3938
sg83
g3923
sg76
(lp3939
g69
(g70
g71
NtRp3940
(dp3941
g74
(dp3942
g82
I5
ssg83
g3936
sg76
(lp3943
g69
(g78
g71
NtRp3944
(dp3945
g74
(dp3946
g82
I4
ssg83
Nsg76
(lp3947
g69
(g85
g71
NtRp3948
(dp3949
g74
(dp3950
sg83
g3944
sg76
(lp3951
g69
(g90
g71
NtRp3952
(dp3953
g74
(dp3954
g94
g95
ssg83
g3948
sg76
(lp3955
S'author'
p3956
asbag69
(g90
g71
NtRp3957
(dp3958
g74
(dp3959
g101
g102
ssg83
g3948
sg76
(lp3960
S':'
asbag69
(g90
g71
NtRp3961
(dp3962
g74
(dp3963
sg83
g3948
sg76
(lp3964
g69
(g70
g71
NtRp3965
(dp3966
g74
(dp3967
g82
I4
ssg83
g3961
sg76
(lp3968
S'Richard Ree'
p3969
asbasbasbag69
(g85
g71
NtRp3970
(dp3971
g74
(dp3972
sg83
g3944
sg76
(lp3973
g69
(g90
g71
NtRp3974
(dp3975
g74
(dp3976
g94
g95
ssg83
g3970
sg76
(lp3977
S'copyright'
p3978
asbag69
(g90
g71
NtRp3979
(dp3980
g74
(dp3981
g101
g102
ssg83
g3970
sg76
(lp3982
S':'
asbag69
(g90
g71
NtRp3983
(dp3984
g74
(dp3985
sg83
g3970
sg76
(lp3986
g69
(g70
g71
NtRp3987
(dp3988
g74
(dp3989
g82
I4
ssg83
g3983
sg76
(lp3990
S'Copyright 2007-2010'
p3991
asbasbasbag69
(g85
g71
NtRp3992
(dp3993
g74
(dp3994
sg83
g3944
sg76
(lp3995
g69
(g90
g71
NtRp3996
(dp3997
g74
(dp3998
g94
g95
ssg83
g3992
sg76
(lp3999
S'description'
p4000
asbag69
(g90
g71
NtRp4001
(dp4002
g74
(dp4003
g101
g102
ssg83
g3992
sg76
(lp4004
S':'
asbag69
(g90
g71
NtRp4005
(dp4006
g74
(dp4007
sg83
g3992
sg76
(lp4008
g69
(g70
g71
NtRp4009
(dp4010
g74
(dp4011
g82
I4
ssg83
g4005
sg76
(lp4012
S'Phylografter: Angiosperm phylogeny database'
p4013
asbasbasbag69
(g85
g71
NtRp4014
(dp4015
g74
(dp4016
sg83
g3944
sg76
(lp4017
g69
(g90
g71
NtRp4018
(dp4019
g74
(dp4020
g94
g95
ssg83
g4014
sg76
(lp4021
S'generator'
p4022
asbag69
(g90
g71
NtRp4023
(dp4024
g74
(dp4025
g101
g102
ssg83
g4014
sg76
(lp4026
S':'
asbag69
(g90
g71
NtRp4027
(dp4028
g74
(dp4029
sg83
g4014
sg76
(lp4030
g69
(g70
g71
NtRp4031
(dp4032
g74
(dp4033
g82
I4
ssg83
g4027
sg76
(lp4034
S'Web2py Enterprise Framework'
p4035
asbasbasbag69
(g85
g71
NtRp4036
(dp4037
g74
(dp4038
sg83
g3944
sg76
(lp4039
g69
(g90
g71
NtRp4040
(dp4041
g74
(dp4042
g94
g95
ssg83
g4036
sg76
(lp4043
S'keywords'
p4044
asbag69
(g90
g71
NtRp4045
(dp4046
g74
(dp4047
g101
g102
ssg83
g4036
sg76
(lp4048
S':'
asbag69
(g90
g71
NtRp4049
(dp4050
g74
(dp4051
sg83
g4036
sg76
(lp4052
g69
(g70
g71
NtRp4053
(dp4054
g74
(dp4055
g82
I4
ssg83
g4049
sg76
(lp4056
S'flowering plants, phylogeny, web2py, python, framework'
p4057
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4058
(dp4059
g74
(dp4060
sg83
g2948
sg76
(lp4061
g69
(g90
g71
NtRp4062
(dp4063
g74
(dp4064
g94
g95
ssg83
g4058
sg76
(lp4065
S'postprocessing'
p4066
asbag69
(g90
g71
NtRp4067
(dp4068
g74
(dp4069
g101
g102
ssg83
g4058
sg76
(lp4070
S':'
asbag69
(g90
g71
NtRp4071
(dp4072
g74
(dp4073
sg83
g4058
sg76
(lp4074
g69
(g70
g71
NtRp4075
(dp4076
g74
(dp4077
g82
I5
ssg83
g4071
sg76
(lp4078
g69
(g78
g71
NtRp4079
(dp4080
g74
(dp4081
g82
I4
ssg83
Nsg76
(lp4082
sbasbasbasbag69
(g85
g71
NtRp4083
(dp4084
g74
(dp4085
sg83
g2948
sg76
(lp4086
g69
(g90
g71
NtRp4087
(dp4088
g74
(dp4089
g94
g95
ssg83
g4083
sg76
(lp4090
S'session_file'
p4091
asbag69
(g90
g71
NtRp4092
(dp4093
g74
(dp4094
g101
g102
ssg83
g4083
sg76
(lp4095
S':'
asbag69
(g90
g71
NtRp4096
(dp4097
g74
(dp4098
sg83
g4083
sg76
(lp4099
g69
(g70
g71
NtRp4100
(dp4101
g74
(dp4102
g82
I5
ssg83
g4096
sg76
(lp4103
S"<open file 'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-90c20702-e455-4386-b647-23f5f1b84c7a', mode 'rb+' at 0x01A78700>"
p4104
asbasbasbag69
(g85
g71
NtRp4105
(dp4106
g74
(dp4107
sg83
g2948
sg76
(lp4108
g69
(g90
g71
NtRp4109
(dp4110
g74
(dp4111
g94
g95
ssg83
g4105
sg76
(lp4112
S'session_filename'
p4113
asbag69
(g90
g71
NtRp4114
(dp4115
g74
(dp4116
g101
g102
ssg83
g4105
sg76
(lp4117
S':'
asbag69
(g90
g71
NtRp4118
(dp4119
g74
(dp4120
sg83
g4105
sg76
(lp4121
g69
(g70
g71
NtRp4122
(dp4123
g74
(dp4124
g82
I5
ssg83
g4118
sg76
(lp4125
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-90c20702-e455-4386-b647-23f5f1b84c7a'
p4126
asbasbasbag69
(g85
g71
NtRp4127
(dp4128
g74
(dp4129
sg83
g2948
sg76
(lp4130
g69
(g90
g71
NtRp4131
(dp4132
g74
(dp4133
g94
g95
ssg83
g4127
sg76
(lp4134
S'session_id'
p4135
asbag69
(g90
g71
NtRp4136
(dp4137
g74
(dp4138
g101
g102
ssg83
g4127
sg76
(lp4139
S':'
asbag69
(g90
g71
NtRp4140
(dp4141
g74
(dp4142
sg83
g4127
sg76
(lp4143
g69
(g70
g71
NtRp4144
(dp4145
g74
(dp4146
g82
I5
ssg83
g4140
sg76
(lp4147
S'127.0.0.1-90c20702-e455-4386-b647-23f5f1b84c7a'
p4148
asbasbasbag69
(g85
g71
NtRp4149
(dp4150
g74
(dp4151
sg83
g2948
sg76
(lp4152
g69
(g90
g71
NtRp4153
(dp4154
g74
(dp4155
g94
g95
ssg83
g4149
sg76
(lp4156
S'session_id_name'
p4157
asbag69
(g90
g71
NtRp4158
(dp4159
g74
(dp4160
g101
g102
ssg83
g4149
sg76
(lp4161
S':'
asbag69
(g90
g71
NtRp4162
(dp4163
g74
(dp4164
sg83
g4149
sg76
(lp4165
g69
(g70
g71
NtRp4166
(dp4167
g74
(dp4168
g82
I5
ssg83
g4162
sg76
(lp4169
g3005
asbasbasbag69
(g85
g71
NtRp4170
(dp4171
g74
(dp4172
sg83
g2948
sg76
(lp4173
g69
(g90
g71
NtRp4174
(dp4175
g74
(dp4176
g94
g95
ssg83
g4170
sg76
(lp4177
S'session_locked'
p4178
asbag69
(g90
g71
NtRp4179
(dp4180
g74
(dp4181
g101
g102
ssg83
g4170
sg76
(lp4182
S':'
asbag69
(g90
g71
NtRp4183
(dp4184
g74
(dp4185
sg83
g4170
sg76
(lp4186
g69
(g70
g71
NtRp4187
(dp4188
g74
(dp4189
g82
I5
ssg83
g4183
sg76
(lp4190
g1483
asbasbasbag69
(g85
g71
NtRp4191
(dp4192
g74
(dp4193
sg83
g2948
sg76
(lp4194
g69
(g90
g71
NtRp4195
(dp4196
g74
(dp4197
g94
g95
ssg83
g4191
sg76
(lp4198
S'session_new'
p4199
asbag69
(g90
g71
NtRp4200
(dp4201
g74
(dp4202
g101
g102
ssg83
g4191
sg76
(lp4203
S':'
asbag69
(g90
g71
NtRp4204
(dp4205
g74
(dp4206
sg83
g4191
sg76
(lp4207
g69
(g70
g71
NtRp4208
(dp4209
g74
(dp4210
g82
I5
ssg83
g4204
sg76
(lp4211
g112
asbasbasbag69
(g85
g71
NtRp4212
(dp4213
g74
(dp4214
sg83
g2948
sg76
(lp4215
g69
(g90
g71
NtRp4216
(dp4217
g74
(dp4218
g94
g95
ssg83
g4212
sg76
(lp4219
S'status'
p4220
asbag69
(g90
g71
NtRp4221
(dp4222
g74
(dp4223
g101
g102
ssg83
g4212
sg76
(lp4224
S':'
asbag69
(g90
g71
NtRp4225
(dp4226
g74
(dp4227
sg83
g4212
sg76
(lp4228
g69
(g70
g71
NtRp4229
(dp4230
g74
(dp4231
g82
I5
ssg83
g4225
sg76
(lp4232
S'200'
p4233
asbasbasbag69
(g85
g71
NtRp4234
(dp4235
g74
(dp4236
sg83
g2948
sg76
(lp4237
g69
(g90
g71
NtRp4238
(dp4239
g74
(dp4240
g94
g95
ssg83
g4234
sg76
(lp4241
S'subtitle'
p4242
asbag69
(g90
g71
NtRp4243
(dp4244
g74
(dp4245
g101
g102
ssg83
g4234
sg76
(lp4246
S':'
asbag69
(g90
g71
NtRp4247
(dp4248
g74
(dp4249
sg83
g4234
sg76
(lp4250
g69
(g70
g71
NtRp4251
(dp4252
g74
(dp4253
g82
I5
ssg83
g4247
sg76
(lp4254
g3492
(S't\x04\x00\x00\x00home'
tRp4255
asbasbasbag69
(g85
g71
NtRp4256
(dp4257
g74
(dp4258
sg83
g2948
sg76
(lp4259
g69
(g90
g71
NtRp4260
(dp4261
g74
(dp4262
g94
g95
ssg83
g4256
sg76
(lp4263
S'title'
p4264
asbag69
(g90
g71
NtRp4265
(dp4266
g74
(dp4267
g101
g102
ssg83
g4256
sg76
(lp4268
S':'
asbag69
(g90
g71
NtRp4269
(dp4270
g74
(dp4271
sg83
g4256
sg76
(lp4272
g69
(g70
g71
NtRp4273
(dp4274
g74
(dp4275
g82
I5
ssg83
g4269
sg76
(lp4276
g134
asbasbasbag69
(g85
g71
NtRp4277
(dp4278
g74
(dp4279
sg83
g2948
sg76
(lp4280
g69
(g90
g71
NtRp4281
(dp4282
g74
(dp4283
g94
g95
ssg83
g4277
sg76
(lp4284
g2147
asbag69
(g90
g71
NtRp4285
(dp4286
g74
(dp4287
g101
g102
ssg83
g4277
sg76
(lp4288
S':'
asbag69
(g90
g71
NtRp4289
(dp4290
g74
(dp4291
sg83
g4277
sg76
(lp4292
g69
(g70
g71
NtRp4293
(dp4294
g74
(dp4295
g82
I5
ssg83
g4289
sg76
(lp4296
g2160
asbasbasbag69
(g85
g71
NtRp4297
(dp4298
g74
(dp4299
sg83
g2948
sg76
(lp4300
g69
(g90
g71
NtRp4301
(dp4302
g74
(dp4303
g94
g95
ssg83
g4297
sg76
(lp4304
S'view'
p4305
asbag69
(g90
g71
NtRp4306
(dp4307
g74
(dp4308
g101
g102
ssg83
g4297
sg76
(lp4309
S':'
asbag69
(g90
g71
NtRp4310
(dp4311
g74
(dp4312
sg83
g4297
sg76
(lp4313
g69
(g70
g71
NtRp4314
(dp4315
g74
(dp4316
g82
I5
ssg83
g4310
sg76
(lp4317
S'stree/index.html'
p4318
asbasbasbasbasbsS'locals'
p4319
(dp4320
g4
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p4321
sg6
S'\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\''
p4322
sssS'traceback'
p4323
S'Traceback (most recent call last):\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py", line 204, in restricted\n    ccode = compile2(code,layer)\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py", line 189, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\', layer, \'exec\')\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 269\n    except ValueError:\n         ^\nIndentationError: expected an indented block\n'
p4324
s.