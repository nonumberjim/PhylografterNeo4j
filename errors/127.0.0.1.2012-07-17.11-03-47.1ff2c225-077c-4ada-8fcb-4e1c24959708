(dp1
S'output'
p2
S"<type 'exceptions.IndentationError'> unindent does not match any outer indentation level (controllers/stree.py, line 180)"
p3
sS'layer'
p4
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'
p5
sS'code'
p6
S'# coding: utf-8\n## tree = local_import("tree", reload=True)\n## build = local_import("build", reload=True)\n## link = local_import("link")\nimport sys\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules\')\nsys.path.append(\'/Users/cbaron/Desktop/web2py/applications/phylografter/modules/ivy\')\nimport tree\nimport build\nimport link\nimport ivy\nimport treeUtil\nimport re\nimport time\nimport os, types, string\nimport imp\nfrom tokenize import generate_tokens\nfrom cStringIO import StringIO\nfrom neo4j import GraphDatabase\n\n\n## ivy = local_import("ivy")\n\nfrom gluon.storage import Storage\n\nresponse.subtitle = "Source trees"\n\ndef index():\n    t = db.stree\n\n    class Virtual(object):\n        @virtualsettings(label=\'Study\')\n        def study_url(self):\n            study = t[self.stree.id].study\n            u = URL(c="study",f="view",args=[study.id])\n            s = study.citation\n            N = 50\n            if len(s)>N: s = s[:N-3]+" ..."\n            return A(s, _href=u, _title=study.citation)\n\n        @virtualsettings(label=\'Tree\')\n        def tree_url(self):\n            stree = t[self.stree.id]\n            u = URL(c="stree",f="svgView",args=[self.stree.id])\n            return A(stree.type, _href=u)\n\n        @virtualsettings(label=\'Focal Clade\')\n        def clade(self):\n            study = t[self.stree.id].study\n            fc = db.study[study].focal_clade\n            name = fc.name if fc else ""\n            return name\n            \n\n        @virtualsettings(label=\'OTUs\')\n        def ntax(self):\n            q = ((db.snode.tree==self.stree.id)&\n                 (db.snode.isleaf==True))\n            return db(q).count()\n\n    powerTable = plugins.powerTable\n    powerTable.datasource = t\n    powerTable.virtualfields = Virtual()\n    powerTable.dtfeatures["sScrollY"] = "100%"\n    powerTable.dtfeatures["sScrollX"] = "100%"\n    #powerTable.virtualfields = Virtual()\n    powerTable.headers = "labels"\n    powerTable.showkeycolumn = False\n    powerTable.dtfeatures["bJQueryUI"] = request.vars.get("jqueryui",True)\n    ## powerTable.uitheme = request.vars.get("theme","cupertino")\n    powerTable.uitheme = request.vars.get("theme","smoothness")\n    powerTable.dtfeatures["iDisplayLength"] = 25\n    powerTable.dtfeatures["aaSorting"] = [[6,\'desc\']]\n    powerTable.dtfeatures["sPaginationType"] = request.vars.get(\n        "pager","full_numbers"\n        ) # two_button scrolling\n    powerTable.columns = ["stree.id",\n                          "virtual.clade",\n                          "virtual.study_url",\n                          "virtual.tree_url",\n                          "virtual.ntax",\n                          ## "stree.contributor",\n                          "stree.uploaded"]\n    powerTable.hiddencolumns = ["stree.type"]\n\n    ## details = dict(detailscallback=URL(c="stree",f="details"))\n    powerTable.extra = dict(autoresize=True)\n   \n    return dict(table=powerTable.create())\n\ndef details():\n    return DIV()\n\ndef delete():\n    i = int(request.args(0) or 0)\n    rec = db.stree(i)\n    assert rec\n    db(db.snode.tree==i).delete()\n    rec.delete_record()\n\ndef _lookup_taxa(nodes):\n    def f(x):\n        try: float(x.label or "x"); return False\n        except: return True\n    v = [ (n.label or "").replace("_", " ") for n in filter(f, nodes) ]\n    t = db.taxon\n    rows = db(t.name.belongs(v)).select(t.name, t.id)\n    return dict([ (x.name, x.id) for x in rows ])\n\ndef _study_otus(study):\n    q = ((db.otu.study==db.study.id)&(db.study.id==study))\n    return db(q).select(db.otu.ALL)\n\ndef _insert_stree(study, data):\n    """\n    given form submission data, insert a source tree\n    \n    root = ivy.tree.read(data.newick)\n    assert root, data.newick\n    ivy.tree.index(root)\n    nodes = list(root)\n    lab2tax = _lookup_taxa(nodes)\n    lab2otu = dict([ (x.label, x) for x in _study_otus(study) ])\n    stree = db.stree.insert(**data)\n    db.stree[stree].update_record(study=study)\n    i2n = {}\n    for n in nodes:\n        label = (n.label or "").replace("_", " ")\n        taxid = lab2tax.get(label)\n        otu = None\n        if n.isleaf:\n            otu = lab2otu.get(label)\n            if otu and otu.taxon: taxid = otu.taxon\n            if not otu:\n                otu = db.otu.insert(study=study, label=label, taxon=taxid)\n\n        i = db.snode.insert(label=n.label, isleaf=n.isleaf, otu=otu,\n                            next=n.next, back=n.back, depth=n.depth,\n                            length=n.length, tree=stree, taxon=taxid,\n                            pruned=False)\n        n.id = i\n        i2n[i] = n\n    ##     n.rec = Storage(taxon=taxid)\n\n    ## node2anc, node2desc = link.suggest(db, root)\n    ## for n, s in node2anc.items():\n    ##     if s:\n    ##         taxid = sorted(s)[-1][1]\n    ##         db.snode[n.id].update_record(taxon=taxid)\n\n    t = db.snode\n    if data.clade_labels_represent == "bootstrap values":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        if n2sup:\n            m = max(n2sup.values())\n            if 1 <= m <= 101:\n                for n, sup in n2sup.items(): n2sup[n] = sup/100.\n            for n, sup in n2sup.items():\n                t[n.id].update_record(bootstrap_support=sup, label=None)\n\n    elif data.clade_labels_represent == "posterior support":\n        n2sup = {}\n        for n in filter(lambda x: x.children and x.label, nodes):\n            try: n2sup[n] = float(n.label)\n            except ValueError: pass\n        for n, sup in n2sup.items():\n            t[n.id].update_record(posterior_support=sup, label=None)\n                \n    for n in nodes:\n        if n.parent:\n            t[n.id].update_record(parent=n.parent.id)\n        n.label = str(n.id)\n        n.length = None\n    db.stree[stree].update_record(newick_idstr=root.write())\n    return stree"""\n    pass\n """   datey = time.strftime( "%Y%m%d" )\n    ##print \'Remember this code for search: \' + datey\n\n\n    db = GraphDatabase(\'Test\')\n    print \'Your input is \' + data.newick\n\n    newickstring = StringIO(data.newick)\n\n    STRING = 1\n    stringdata = list(token[STRING] for token\n         in generate_tokens(newickstring.readline)\n         if token[STRING])\n\n    exists = db.node.indexes.exists(\'tree\')\n\n    if exists == 0:\n        with db.transaction:\n            tree_idx = db.node.indexes.create(\'tree\')\n\n    elif exists == 1:\n        tree_idx = db.node.indexes.get(\'tree\')\n\n    ##i is counter\n    i=0\n    value = stringdata[i]\n    nextvalue = stringdata[i+1]\n\n    ##print value\n    ##print nextvalue\n\n    first = 0\n    mynodelist=[]\n    with db.transaction:\n        node = db.node()\n        root = db.node(name="Root")\n        root[\'date\'] = nowdate  \n        root[\'uID\'] = newID\n        relationship = root.is_root(node)\n        ID = root.id\n\n    ##print ID\n\n    lp = 0\n    rp = 0\n\n    for i in range(0, len(stringdata)):\n        if value == \'(\':\n            first+=1\n            lp += 1\n            with db.transaction:\n                newnode = db.node()\n                relationship = newnode.has_parent(node)\n                ##print node\n                node = newnode\n                ##print newnode\n        elif value == \')\':\n            rp += 1\n            if i==len(stringdata)-1:\n                continue\n            else:\n                check = stringdata[i+1]\n                if re.match("^[A-Za-z]*$", check):\n                    with db.transaction:\n                        for rel in newnode.has_parent.outgoing:\n                            ##print node\n                            node = rel.end\n                            node[\'label\']=check           \n                else:\n                    with db.transaction:\n                        for rel in newnode.has_parent.outgoing:\n                            ##print node\n                            node = rel.end\n                            ##print node\n        elif value == \',\':\n            with db.transaction:\n                for rel in node.has_parent.outgoing:\n                    node = rel.end\n                    ##print node\n        elif value == \';\':\n            break\n        elif value == \':\':\n           ## print stringdata[i+1]\n            branchlength = float(stringdata[i+1])\n            with db.transaction:\n                node[\'length\'] = branchlength\n        else:\n            try:\n                float(value)               \n            except ValueError:\n                if lp == rp:\n                    continue\n                elif oldvalue == \')\':\n                    continue\n                else:\n                    if first == 1:\n                        with db.transaction:\n                            node[\'label\']=value\n                            ##print node\n                            ##print value\n                            first += 1\n                    else:\n                        with db.transaction:\n                            newnode = db.node()\n                            relationship = newnode.has_parent(node)\n                            mynodelist.append(db.node(name=value))\n                            newnode[\'label\']=value\n                            node = newnode\n                            ##print newnode\n                            ##print value                \n        if i <= len(stringdata)-2:\n            nextvalue = stringdata[i+1]\n        i+=1\n        oldvalue = value\n        value = nextvalue\n\n    db.shutdown()"""\n\n#@auth.requires_membership(\'contributor\')\n@auth.requires_login()\n\ndef create():\n    study = db.study(request.args(0)) or redirect(URL("index"))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    \n    fields = ["study", "contributor", "newick",\n              "author_contributed",\n              "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    form = SQLFORM(db.stree, fields=fields)\n    form.vars.study=int(study)\n\n    name = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    form.vars.contributor = name\n    ## form.vars.newick = "(a,(b,((c,d),(e,f))));"\n    ## form.vars.comment = "test test"\n    ## base = "/home/rree/Dropbox/phylografter/private/Jansen-2007-PNAS/"\n    ## form.vars.newick = file(base+"Jansen_2007.newick").read()\n    ## form.vars.comment = "RAxML bootstrap tree; re-analysis of published data"\n    ## form.vars.type = "RAxML 7.2.6 bootstrap"\n    \n    treestr = ""\n    if form.accepts(request.vars, session, dbio=False):\n        response.flash ="accepted"\n        session.contributor = form.vars.contributor\n        i = _insert_stree(study, form.vars)\n        redirect(URL("v", args=[i]))\n\n    return dict(form=form)\n    \ndef edit():\n    rec = db.stree(request.args(0))\n    def w(f,v):\n        u = URL(c="study",f="view",args=[v])\n        return A(_study_rep(db.study(v)), _href=u)\n    db.stree.study.widget = w\n    response.subtitle = "Edit source tree %s" % rec.id\n    fields = ["study", "contributor", "newick", "type",\n              "clade_labels_represent", "clade_labels_comment",\n              "branch_lengths_represent", "branch_lengths_comment",\n              "comment"]\n    readonly = not auth.has_membership(role="contributor")\n    form = SQLFORM(db.stree, int(rec), fields=fields, showid=False,\n                   deletable=False, submit_button="Update record",\n                   readonly=readonly)\n    form.vars.study = rec.id\n    if form.accepts(request.vars, session):\n        response.flash = "record updated"\n    return dict(form=form)\n\ndef view():\n    return dict()\n\ndef sunburst():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef d3():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\n\ndef svgView():\n    i = int(request.args(0))\n    if i:\n        rec = db.stree(i)\n    return dict(rec=rec)\n\ndef editOTUs():\n    response.title = \'Edit OTUs\'\n    return dict()\n\ndef getNodeInfo():\n    i = int(request.vars.nodeId)\n    node = db.snode[i]\n    color = "black"\n    label = node.label or "[%s]" % node.id\n    if node.taxon:\n        label = node.taxon.name\n        color = "green"\n    return {\'nodeId\': node.id, \'label\': label, \'labelcolor\': color}\n\ndef v():\n    rec = db.stree(request.args(0) or 0)\n    study = db.study(rec.study)\n    u = URL(c="study",f="view",args=[study.id])\n    study = A(_study_rep(study), _href=u, _target="_blank")\n    wscale = float(request.vars.wscale or 0.9)\n    wider = wscale+0.1; narrower = max(0.1, wscale-0.1)\n    wider = A("wider", _href=URL(args=request.args,\n                                 vars=dict(wscale="%0.1f" % wider)))\n    narrower = A("narrower", _href=URL(args=request.args,\n                                       vars=dict(wscale="%0.1f" % narrower)))\n    \n    treeurl = URL(c=\'stree\',f=\'treediv\',args=request.args,vars=request.vars)\n    return dict(treeurl=treeurl, wider=wider, narrower=narrower, study=study)\n\ndef load_html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n    return dict(tree=div)\n\ndef treediv():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return ("hbranch_clicked(%s, \'%s\', \'modal\', \'modal_content\');"\n                % (nid, u))\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    wscale = float(request.vars.wscale or 0.9)\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f,\n                                          wscale=wscale)\n    return div.xml()\n\ndef html():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    nodes = list(root.iternodes())\n    for node in nodes:\n        label = node.rec.label or node.label\n        if node.rec.taxon:\n            label = db.taxon[node.rec.taxon].name\n        node.label = label\n\n    modal = PluginMModal(id="mymodal", title="Edit node properties", content="")\n    mid = modal.id; cid = "c"+mid\n    def onclick(nid):\n        u = URL(c="snode",f="update_snode.load", args=[nid])\n        return "hbranch_clicked(%s, \'%s\', \'%s\', \'%s\');" % (nid, u, mid, cid)\n    if auth.has_membership(role="contributor"): f = onclick\n    else: f = ""\n    div, mapping, w, h = tree.render_html(root, session, request,\n                                          db, onclick=f)\n\n    return dict(tree=div, root=root, modal=modal, w=w, h=h)\n\n\ndef modalTreeObj():\n    return dict( tree = build.stree( db, request.args[0] ) )\n\n\ndef suggest():\n    i = int(request.args(0) or 0)\n    root = build.stree(db, i)\n    \n@auth.requires_membership(\'contributor\')\ndef import_cached_nexml():\n    key = "uploaded_nexml_%s" % auth.user.id\n    contributor = "%s %s" % (auth.user.first_name, auth.user.last_name)\n    ## nexml = cache.ram(key, lambda:None, time_expire=10000)\n    nexml = cache.ram(key, lambda:None, time_expire=10000)\n    if not nexml:\n        session.flash = "Please upload the Nexml file again"\n        redirect(URL(\'study\',\'tbimport\'))\n    cache.ram(key, lambda:nexml, time_expire=10000)\n    get = lambda x: nexml.meta.get(x) or None\n    treebase_id = int(get(\'tb:identifier.study\'))\n    study = db(db.study.treebase_id==treebase_id).select().first()\n    if not study:\n        session.flash = \'Study record needed!\'\n        redirect(URL(\'study\',\'tbimport2\'))\n    d = dict([ (x.attrib.id, x) for x in nexml.trees ])\n    t = d.get(request.args(0))\n    if not t:\n        session.flash = \'Cannot find tree in cache\'\n        redirect(URL(\'study\',\'tbimport2\'))\n\n    ivy.tree.index(t.root)\n\n    for n in t.root.leaves():\n        if not n.otu.otu:\n            session.flash = \'Leaf node %s lacks OTU record\' % (n.label or n.id)\n            redirect(URL(\'study\',\'tbimport2\'))\n\n    ## for leaf in t.root.leaves():\n    ##     print leaf.__dict__\n    ## for k, v in nexml.otus.items():\n    ##     print v\n\n    #print t.root.write()\n    ## print t.attrib\n    \n    sdata = dict(study=study.id,\n                 contributor=contributor,\n                 newick=t.root.write().replace(" ", "_"),\n                 author_contributed=True,\n                 tb_tree_id=t.attrib.id,\n                 type=t.attrib.label)\n\n    for k,v in sdata.items():\n        db.stree[k].default=v\n\n    def w(f,v):\n        u = URL(c="study",f="view",args=[study.id])\n        return A(_study_rep(study), _href=u)\n    db.stree.study.widget = w\n    db.stree.uploaded.readable=False\n    form = SQLFORM(db.stree)\n    if form.accepts(request.vars, session):\n\n        bootstraps = {}\n        if form.vars.clade_labels_represent == "bootstrap values":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "bootstrap values":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                try: bootstraps[n] = float(n.label)\n                except ValueError: pass\n            for n in bootstraps:\n                n.length = None\n\n        if bootstraps:\n            m = max(bootstraps.values())\n            if 1 <= m <= 101:\n                for n, sup in bootstraps.items():\n                    bootstraps[n] = sup/100.\n\n        posteriors = {}\n        if form.vars.clade_labels_represent == "posterior support":\n            for n in t.root.iternodes(lambda x: x.children and x.label):\n                try: posteriors[n] = float(n.label)\n                except ValueError: pass\n            for n in posteriors:\n                n.label = None\n\n        elif form.vars.branch_lengths_represent == "posterior support":\n            for n in t.root.iternodes(\n                lambda x: x.children and x.length is not None):\n                posteriors[n] = n.length\n            for n in posteriors:\n                n.length = None\n\n        for d in filter(None, (bootstraps, posteriors)):\n            m = max(d.values())\n            if 1 <= m <= 101:\n                for n, sup in d.items():\n                    d[n] = sup/100.\n\n        i2n = {}\n        for n in t.root.iternodes():\n            taxid = None\n            label = n.otu.otu.label if n.isleaf and n.otu.otu else n.label\n            if n.isleaf and n.otu.otu and n.otu.otu.taxon:\n                taxid = n.otu.otu.taxon\n            else:\n                taxon = db(db.taxon.name==label).select().first()\n                if taxon: taxid=taxon.id\n\n            i = db.snode.insert(label=label,\n                                isleaf=n.isleaf,\n                                otu=n.otu.otu.id if n.isleaf and n.otu else None,\n                                next=n.next, back=n.back, depth=n.depth,\n                                length=n.length,\n                                bootstrap_support=bootstraps.get(n),\n                                posterior_support=posteriors.get(n),\n                                tree=form.vars.id,\n                                taxon=taxid,\n                                pruned=False)\n            n.id = i\n            i2n[i] = n\n\n        for n in t.root.iternodes():\n            if n.parent:\n                db.snode[n.id].update_record(parent=n.parent.id)\n            n.label = str(n.id)\n            n.length = None\n        db.stree[form.vars.id].update_record(newick_idstr=t.root.write())\n\n        session.flash = \'tree %s inserted\' % t.attrib.id\n        redirect(URL(\'study\',\'tbimport_trees\'))\n\n    return dict(study=study, tree=t, form=form)\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.IndentationError object>"
p13
sS'text'
p14
S'\' """   datey = time.strftime( "%Y%m%d" )\\n\''
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.IndentationError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.IndentationError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.IndentationError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.IndentationError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.IndentationError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.IndentationError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.IndentationError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.IndentationError'>"
p35
sS'filename'
p36
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p37
sS'lineno'
p38
S'180'
p39
sS'msg'
p40
S"'unindent does not match any outer indentation level'"
p41
sS'__doc__'
p42
S"'Improper indentation.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.IndentationError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.IndentationError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.IndentationError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S'(\'unindent does not match any outer indentation level\', (r\'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py\', 180, 41, \' """   datey = time.strftime( "%Y%m%d" )\\n\'))'
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'41'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.IndentationError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.IndentationError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.IndentationError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.IndentationError object>"
p65
ssS'evalue'
p66
S'unindent does not match any outer indentation level (controllers/stree.py, line 180)'
p67
sS'request'
p68
ccopy_reg
_reconstructor
p69
(cgluon.html
BEAUTIFY
p70
c__builtin__
object
p71
NtRp72
(dp73
S'attributes'
p74
(dp75
sS'components'
p76
(lp77
g69
(cgluon.html
TABLE
p78
g71
NtRp79
(dp80
g74
(dp81
S'level'
p82
I5
ssS'parent'
p83
Nsg76
(lp84
g69
(cgluon.html
TR
p85
g71
NtRp86
(dp87
g74
(dp88
sg83
g79
sg76
(lp89
g69
(cgluon.html
TD
p90
g71
NtRp91
(dp92
g74
(dp93
S'_style'
p94
S'font-weight:bold;vertical-align:top'
p95
ssg83
g86
sg76
(lp96
S'ajax'
p97
asbag69
(g90
g71
NtRp98
(dp99
g74
(dp100
S'_valign'
p101
S'top'
p102
ssg83
g86
sg76
(lp103
S':'
asbag69
(g90
g71
NtRp104
(dp105
g74
(dp106
sg83
g86
sg76
(lp107
g69
(g70
g71
NtRp108
(dp109
g74
(dp110
g82
I5
ssg83
g104
sg76
(lp111
S'False'
p112
asbasbasbag69
(g85
g71
NtRp113
(dp114
g74
(dp115
sg83
g79
sg76
(lp116
g69
(g90
g71
NtRp117
(dp118
g74
(dp119
g94
g95
ssg83
g113
sg76
(lp120
S'application'
p121
asbag69
(g90
g71
NtRp122
(dp123
g74
(dp124
g101
g102
ssg83
g113
sg76
(lp125
S':'
asbag69
(g90
g71
NtRp126
(dp127
g74
(dp128
sg83
g113
sg76
(lp129
g69
(g70
g71
NtRp130
(dp131
g74
(dp132
g82
I5
ssg83
g126
sg76
(lp133
S'Phylografter'
p134
asbasbasbag69
(g85
g71
NtRp135
(dp136
g74
(dp137
sg83
g79
sg76
(lp138
g69
(g90
g71
NtRp139
(dp140
g74
(dp141
g94
g95
ssg83
g135
sg76
(lp142
g52
asbag69
(g90
g71
NtRp143
(dp144
g74
(dp145
g101
g102
ssg83
g135
sg76
(lp146
S':'
asbag69
(g90
g71
NtRp147
(dp148
g74
(dp149
sg83
g135
sg76
(lp150
g69
(g70
g71
NtRp151
(dp152
g74
(dp153
g82
I5
ssg83
g147
sg76
(lp154
g69
(g78
g71
NtRp155
(dp156
g74
(dp157
g82
I4
ssg83
Nsg76
(lp158
sbasbasbasbag69
(g85
g71
NtRp159
(dp160
g74
(dp161
sg83
g79
sg76
(lp162
g69
(g90
g71
NtRp163
(dp164
g74
(dp165
g94
g95
ssg83
g159
sg76
(lp166
S'body'
p167
asbag69
(g90
g71
NtRp168
(dp169
g74
(dp170
g101
g102
ssg83
g159
sg76
(lp171
S':'
asbag69
(g90
g71
NtRp172
(dp173
g74
(dp174
sg83
g159
sg76
(lp175
g69
(g70
g71
NtRp176
(dp177
g74
(dp178
g82
I5
ssg83
g172
sg76
(lp179
S'<cStringIO.StringO object at 0x0A92A6C0>'
p180
asbasbasbag69
(g85
g71
NtRp181
(dp182
g74
(dp183
sg83
g79
sg76
(lp184
g69
(g90
g71
NtRp185
(dp186
g74
(dp187
g94
g95
ssg83
g181
sg76
(lp188
S'client'
p189
asbag69
(g90
g71
NtRp190
(dp191
g74
(dp192
g101
g102
ssg83
g181
sg76
(lp193
S':'
asbag69
(g90
g71
NtRp194
(dp195
g74
(dp196
sg83
g181
sg76
(lp197
g69
(g70
g71
NtRp198
(dp199
g74
(dp200
g82
I5
ssg83
g194
sg76
(lp201
S'127.0.0.1'
p202
asbasbasbag69
(g85
g71
NtRp203
(dp204
g74
(dp205
sg83
g79
sg76
(lp206
g69
(g90
g71
NtRp207
(dp208
g74
(dp209
g94
g95
ssg83
g203
sg76
(lp210
S'controller'
p211
asbag69
(g90
g71
NtRp212
(dp213
g74
(dp214
g101
g102
ssg83
g203
sg76
(lp215
S':'
asbag69
(g90
g71
NtRp216
(dp217
g74
(dp218
sg83
g203
sg76
(lp219
g69
(g70
g71
NtRp220
(dp221
g74
(dp222
g82
I5
ssg83
g216
sg76
(lp223
S'stree'
p224
asbasbasbag69
(g85
g71
NtRp225
(dp226
g74
(dp227
sg83
g79
sg76
(lp228
g69
(g90
g71
NtRp229
(dp230
g74
(dp231
g94
g95
ssg83
g225
sg76
(lp232
S'cookies'
p233
asbag69
(g90
g71
NtRp234
(dp235
g74
(dp236
g101
g102
ssg83
g225
sg76
(lp237
S':'
asbag69
(g90
g71
NtRp238
(dp239
g74
(dp240
sg83
g225
sg76
(lp241
g69
(g70
g71
NtRp242
(dp243
g74
(dp244
g82
I5
ssg83
g238
sg76
(lp245
g69
(g78
g71
NtRp246
(dp247
g74
(dp248
g82
I4
ssg83
Nsg76
(lp249
g69
(g85
g71
NtRp250
(dp251
g74
(dp252
sg83
g246
sg76
(lp253
g69
(g90
g71
NtRp254
(dp255
g74
(dp256
g94
g95
ssg83
g250
sg76
(lp257
S'session_id_phylografter'
p258
asbag69
(g90
g71
NtRp259
(dp260
g74
(dp261
g101
g102
ssg83
g250
sg76
(lp262
S':'
asbag69
(g90
g71
NtRp263
(dp264
g74
(dp265
sg83
g250
sg76
(lp266
g69
(g70
g71
NtRp267
(dp268
g74
(dp269
g82
I4
ssg83
g263
sg76
(lp270
g69
(g78
g71
NtRp271
(dp272
g74
(dp273
g82
I3
ssg83
Nsg76
(lp274
g69
(g85
g71
NtRp275
(dp276
g74
(dp277
sg83
g271
sg76
(lp278
g69
(g90
g71
NtRp279
(dp280
g74
(dp281
g94
g95
ssg83
g275
sg76
(lp282
S'comment'
p283
asbag69
(g90
g71
NtRp284
(dp285
g74
(dp286
g101
g102
ssg83
g275
sg76
(lp287
S':'
asbag69
(g90
g71
NtRp288
(dp289
g74
(dp290
sg83
g275
sg76
(lp291
g69
(g70
g71
NtRp292
(dp293
g74
(dp294
g82
I3
ssg83
g288
sg76
(lp295
S''
asbasbasbag69
(g85
g71
NtRp296
(dp297
g74
(dp298
sg83
g271
sg76
(lp299
g69
(g90
g71
NtRp300
(dp301
g74
(dp302
g94
g95
ssg83
g296
sg76
(lp303
S'domain'
p304
asbag69
(g90
g71
NtRp305
(dp306
g74
(dp307
g101
g102
ssg83
g296
sg76
(lp308
S':'
asbag69
(g90
g71
NtRp309
(dp310
g74
(dp311
sg83
g296
sg76
(lp312
g69
(g70
g71
NtRp313
(dp314
g74
(dp315
g82
I3
ssg83
g309
sg76
(lp316
S''
asbasbasbag69
(g85
g71
NtRp317
(dp318
g74
(dp319
sg83
g271
sg76
(lp320
g69
(g90
g71
NtRp321
(dp322
g74
(dp323
g94
g95
ssg83
g317
sg76
(lp324
S'expires'
p325
asbag69
(g90
g71
NtRp326
(dp327
g74
(dp328
g101
g102
ssg83
g317
sg76
(lp329
S':'
asbag69
(g90
g71
NtRp330
(dp331
g74
(dp332
sg83
g317
sg76
(lp333
g69
(g70
g71
NtRp334
(dp335
g74
(dp336
g82
I3
ssg83
g330
sg76
(lp337
S''
asbasbasbag69
(g85
g71
NtRp338
(dp339
g74
(dp340
sg83
g271
sg76
(lp341
g69
(g90
g71
NtRp342
(dp343
g74
(dp344
g94
g95
ssg83
g338
sg76
(lp345
S'httponly'
p346
asbag69
(g90
g71
NtRp347
(dp348
g74
(dp349
g101
g102
ssg83
g338
sg76
(lp350
S':'
asbag69
(g90
g71
NtRp351
(dp352
g74
(dp353
sg83
g338
sg76
(lp354
g69
(g70
g71
NtRp355
(dp356
g74
(dp357
g82
I3
ssg83
g351
sg76
(lp358
S''
asbasbasbag69
(g85
g71
NtRp359
(dp360
g74
(dp361
sg83
g271
sg76
(lp362
g69
(g90
g71
NtRp363
(dp364
g74
(dp365
g94
g95
ssg83
g359
sg76
(lp366
S'max-age'
p367
asbag69
(g90
g71
NtRp368
(dp369
g74
(dp370
g101
g102
ssg83
g359
sg76
(lp371
S':'
asbag69
(g90
g71
NtRp372
(dp373
g74
(dp374
sg83
g359
sg76
(lp375
g69
(g70
g71
NtRp376
(dp377
g74
(dp378
g82
I3
ssg83
g372
sg76
(lp379
S''
asbasbasbag69
(g85
g71
NtRp380
(dp381
g74
(dp382
sg83
g271
sg76
(lp383
g69
(g90
g71
NtRp384
(dp385
g74
(dp386
g94
g95
ssg83
g380
sg76
(lp387
S'path'
p388
asbag69
(g90
g71
NtRp389
(dp390
g74
(dp391
g101
g102
ssg83
g380
sg76
(lp392
S':'
asbag69
(g90
g71
NtRp393
(dp394
g74
(dp395
sg83
g380
sg76
(lp396
g69
(g70
g71
NtRp397
(dp398
g74
(dp399
g82
I3
ssg83
g393
sg76
(lp400
S''
asbasbasbag69
(g85
g71
NtRp401
(dp402
g74
(dp403
sg83
g271
sg76
(lp404
g69
(g90
g71
NtRp405
(dp406
g74
(dp407
g94
g95
ssg83
g401
sg76
(lp408
S'secure'
p409
asbag69
(g90
g71
NtRp410
(dp411
g74
(dp412
g101
g102
ssg83
g401
sg76
(lp413
S':'
asbag69
(g90
g71
NtRp414
(dp415
g74
(dp416
sg83
g401
sg76
(lp417
g69
(g70
g71
NtRp418
(dp419
g74
(dp420
g82
I3
ssg83
g414
sg76
(lp421
S''
asbasbasbag69
(g85
g71
NtRp422
(dp423
g74
(dp424
sg83
g271
sg76
(lp425
g69
(g90
g71
NtRp426
(dp427
g74
(dp428
g94
g95
ssg83
g422
sg76
(lp429
S'version'
p430
asbag69
(g90
g71
NtRp431
(dp432
g74
(dp433
g101
g102
ssg83
g422
sg76
(lp434
S':'
asbag69
(g90
g71
NtRp435
(dp436
g74
(dp437
sg83
g422
sg76
(lp438
g69
(g70
g71
NtRp439
(dp440
g74
(dp441
g82
I3
ssg83
g435
sg76
(lp442
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp443
(dp444
g74
(dp445
sg83
g246
sg76
(lp446
g69
(g90
g71
NtRp447
(dp448
g74
(dp449
g94
g95
ssg83
g443
sg76
(lp450
S'session_id_welcome'
p451
asbag69
(g90
g71
NtRp452
(dp453
g74
(dp454
g101
g102
ssg83
g443
sg76
(lp455
S':'
asbag69
(g90
g71
NtRp456
(dp457
g74
(dp458
sg83
g443
sg76
(lp459
g69
(g70
g71
NtRp460
(dp461
g74
(dp462
g82
I4
ssg83
g456
sg76
(lp463
g69
(g78
g71
NtRp464
(dp465
g74
(dp466
g82
I3
ssg83
Nsg76
(lp467
g69
(g85
g71
NtRp468
(dp469
g74
(dp470
sg83
g464
sg76
(lp471
g69
(g90
g71
NtRp472
(dp473
g74
(dp474
g94
g95
ssg83
g468
sg76
(lp475
g283
asbag69
(g90
g71
NtRp476
(dp477
g74
(dp478
g101
g102
ssg83
g468
sg76
(lp479
S':'
asbag69
(g90
g71
NtRp480
(dp481
g74
(dp482
sg83
g468
sg76
(lp483
g69
(g70
g71
NtRp484
(dp485
g74
(dp486
g82
I3
ssg83
g480
sg76
(lp487
S''
asbasbasbag69
(g85
g71
NtRp488
(dp489
g74
(dp490
sg83
g464
sg76
(lp491
g69
(g90
g71
NtRp492
(dp493
g74
(dp494
g94
g95
ssg83
g488
sg76
(lp495
g304
asbag69
(g90
g71
NtRp496
(dp497
g74
(dp498
g101
g102
ssg83
g488
sg76
(lp499
S':'
asbag69
(g90
g71
NtRp500
(dp501
g74
(dp502
sg83
g488
sg76
(lp503
g69
(g70
g71
NtRp504
(dp505
g74
(dp506
g82
I3
ssg83
g500
sg76
(lp507
S''
asbasbasbag69
(g85
g71
NtRp508
(dp509
g74
(dp510
sg83
g464
sg76
(lp511
g69
(g90
g71
NtRp512
(dp513
g74
(dp514
g94
g95
ssg83
g508
sg76
(lp515
g325
asbag69
(g90
g71
NtRp516
(dp517
g74
(dp518
g101
g102
ssg83
g508
sg76
(lp519
S':'
asbag69
(g90
g71
NtRp520
(dp521
g74
(dp522
sg83
g508
sg76
(lp523
g69
(g70
g71
NtRp524
(dp525
g74
(dp526
g82
I3
ssg83
g520
sg76
(lp527
S''
asbasbasbag69
(g85
g71
NtRp528
(dp529
g74
(dp530
sg83
g464
sg76
(lp531
g69
(g90
g71
NtRp532
(dp533
g74
(dp534
g94
g95
ssg83
g528
sg76
(lp535
g346
asbag69
(g90
g71
NtRp536
(dp537
g74
(dp538
g101
g102
ssg83
g528
sg76
(lp539
S':'
asbag69
(g90
g71
NtRp540
(dp541
g74
(dp542
sg83
g528
sg76
(lp543
g69
(g70
g71
NtRp544
(dp545
g74
(dp546
g82
I3
ssg83
g540
sg76
(lp547
S''
asbasbasbag69
(g85
g71
NtRp548
(dp549
g74
(dp550
sg83
g464
sg76
(lp551
g69
(g90
g71
NtRp552
(dp553
g74
(dp554
g94
g95
ssg83
g548
sg76
(lp555
g367
asbag69
(g90
g71
NtRp556
(dp557
g74
(dp558
g101
g102
ssg83
g548
sg76
(lp559
S':'
asbag69
(g90
g71
NtRp560
(dp561
g74
(dp562
sg83
g548
sg76
(lp563
g69
(g70
g71
NtRp564
(dp565
g74
(dp566
g82
I3
ssg83
g560
sg76
(lp567
S''
asbasbasbag69
(g85
g71
NtRp568
(dp569
g74
(dp570
sg83
g464
sg76
(lp571
g69
(g90
g71
NtRp572
(dp573
g74
(dp574
g94
g95
ssg83
g568
sg76
(lp575
g388
asbag69
(g90
g71
NtRp576
(dp577
g74
(dp578
g101
g102
ssg83
g568
sg76
(lp579
S':'
asbag69
(g90
g71
NtRp580
(dp581
g74
(dp582
sg83
g568
sg76
(lp583
g69
(g70
g71
NtRp584
(dp585
g74
(dp586
g82
I3
ssg83
g580
sg76
(lp587
S''
asbasbasbag69
(g85
g71
NtRp588
(dp589
g74
(dp590
sg83
g464
sg76
(lp591
g69
(g90
g71
NtRp592
(dp593
g74
(dp594
g94
g95
ssg83
g588
sg76
(lp595
g409
asbag69
(g90
g71
NtRp596
(dp597
g74
(dp598
g101
g102
ssg83
g588
sg76
(lp599
S':'
asbag69
(g90
g71
NtRp600
(dp601
g74
(dp602
sg83
g588
sg76
(lp603
g69
(g70
g71
NtRp604
(dp605
g74
(dp606
g82
I3
ssg83
g600
sg76
(lp607
S''
asbasbasbag69
(g85
g71
NtRp608
(dp609
g74
(dp610
sg83
g464
sg76
(lp611
g69
(g90
g71
NtRp612
(dp613
g74
(dp614
g94
g95
ssg83
g608
sg76
(lp615
g430
asbag69
(g90
g71
NtRp616
(dp617
g74
(dp618
g101
g102
ssg83
g608
sg76
(lp619
S':'
asbag69
(g90
g71
NtRp620
(dp621
g74
(dp622
sg83
g608
sg76
(lp623
g69
(g70
g71
NtRp624
(dp625
g74
(dp626
g82
I3
ssg83
g620
sg76
(lp627
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp628
(dp629
g74
(dp630
sg83
g79
sg76
(lp631
g69
(g90
g71
NtRp632
(dp633
g74
(dp634
g94
g95
ssg83
g628
sg76
(lp635
S'env'
p636
asbag69
(g90
g71
NtRp637
(dp638
g74
(dp639
g101
g102
ssg83
g628
sg76
(lp640
S':'
asbag69
(g90
g71
NtRp641
(dp642
g74
(dp643
sg83
g628
sg76
(lp644
g69
(g70
g71
NtRp645
(dp646
g74
(dp647
g82
I5
ssg83
g641
sg76
(lp648
g69
(g78
g71
NtRp649
(dp650
g74
(dp651
g82
I4
ssg83
Nsg76
(lp652
g69
(g85
g71
NtRp653
(dp654
g74
(dp655
sg83
g649
sg76
(lp656
g69
(g90
g71
NtRp657
(dp658
g74
(dp659
g94
g95
ssg83
g653
sg76
(lp660
S'app_folders'
p661
asbag69
(g90
g71
NtRp662
(dp663
g74
(dp664
g101
g102
ssg83
g653
sg76
(lp665
S':'
asbag69
(g90
g71
NtRp666
(dp667
g74
(dp668
sg83
g653
sg76
(lp669
g69
(g70
g71
NtRp670
(dp671
g74
(dp672
g82
I4
ssg83
g666
sg76
(lp673
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p674
asbasbasbag69
(g85
g71
NtRp675
(dp676
g74
(dp677
sg83
g649
sg76
(lp678
g69
(g90
g71
NtRp679
(dp680
g74
(dp681
g94
g95
ssg83
g675
sg76
(lp682
S'applications_parent'
p683
asbag69
(g90
g71
NtRp684
(dp685
g74
(dp686
g101
g102
ssg83
g675
sg76
(lp687
S':'
asbag69
(g90
g71
NtRp688
(dp689
g74
(dp690
sg83
g675
sg76
(lp691
g69
(g70
g71
NtRp692
(dp693
g74
(dp694
g82
I4
ssg83
g688
sg76
(lp695
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p696
asbasbasbag69
(g85
g71
NtRp697
(dp698
g74
(dp699
sg83
g649
sg76
(lp700
g69
(g90
g71
NtRp701
(dp702
g74
(dp703
g94
g95
ssg83
g697
sg76
(lp704
S'cmd_args'
p705
asbag69
(g90
g71
NtRp706
(dp707
g74
(dp708
g101
g102
ssg83
g697
sg76
(lp709
S':'
asbag69
(g90
g71
NtRp710
(dp711
g74
(dp712
sg83
g697
sg76
(lp713
g69
(g70
g71
NtRp714
(dp715
g74
(dp716
g82
I4
ssg83
g710
sg76
(lp717
g69
(g78
g71
NtRp718
(dp719
g74
(dp720
g82
I3
ssg83
Nsg76
(lp721
sbasbasbasbag69
(g85
g71
NtRp722
(dp723
g74
(dp724
sg83
g649
sg76
(lp725
g69
(g90
g71
NtRp726
(dp727
g74
(dp728
g94
g95
ssg83
g722
sg76
(lp729
S'cmd_options'
p730
asbag69
(g90
g71
NtRp731
(dp732
g74
(dp733
g101
g102
ssg83
g722
sg76
(lp734
S':'
asbag69
(g90
g71
NtRp735
(dp736
g74
(dp737
sg83
g722
sg76
(lp738
g69
(g70
g71
NtRp739
(dp740
g74
(dp741
g82
I4
ssg83
g735
sg76
(lp742
S"<Values at 0x174ff08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p743
asbasbasbag69
(g85
g71
NtRp744
(dp745
g74
(dp746
sg83
g649
sg76
(lp747
g69
(g90
g71
NtRp748
(dp749
g74
(dp750
g94
g95
ssg83
g744
sg76
(lp751
S'db_sessions'
p752
asbag69
(g90
g71
NtRp753
(dp754
g74
(dp755
g101
g102
ssg83
g744
sg76
(lp756
S':'
asbag69
(g90
g71
NtRp757
(dp758
g74
(dp759
sg83
g744
sg76
(lp760
g69
(g70
g71
NtRp761
(dp762
g74
(dp763
g82
I4
ssg83
g757
sg76
(lp764
S'set([])'
p765
asbasbasbag69
(g85
g71
NtRp766
(dp767
g74
(dp768
sg83
g649
sg76
(lp769
g69
(g90
g71
NtRp770
(dp771
g74
(dp772
g94
g95
ssg83
g766
sg76
(lp773
S'debugging'
p774
asbag69
(g90
g71
NtRp775
(dp776
g74
(dp777
g101
g102
ssg83
g766
sg76
(lp778
S':'
asbag69
(g90
g71
NtRp779
(dp780
g74
(dp781
sg83
g766
sg76
(lp782
g69
(g70
g71
NtRp783
(dp784
g74
(dp785
g82
I4
ssg83
g779
sg76
(lp786
g112
asbasbasbag69
(g85
g71
NtRp787
(dp788
g74
(dp789
sg83
g649
sg76
(lp790
g69
(g90
g71
NtRp791
(dp792
g74
(dp793
g94
g95
ssg83
g787
sg76
(lp794
S'gluon_parent'
p795
asbag69
(g90
g71
NtRp796
(dp797
g74
(dp798
g101
g102
ssg83
g787
sg76
(lp799
S':'
asbag69
(g90
g71
NtRp800
(dp801
g74
(dp802
sg83
g787
sg76
(lp803
g69
(g70
g71
NtRp804
(dp805
g74
(dp806
g82
I4
ssg83
g800
sg76
(lp807
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py'
p808
asbasbasbag69
(g85
g71
NtRp809
(dp810
g74
(dp811
sg83
g649
sg76
(lp812
g69
(g90
g71
NtRp813
(dp814
g74
(dp815
g94
g95
ssg83
g809
sg76
(lp816
S'http_accept'
p817
asbag69
(g90
g71
NtRp818
(dp819
g74
(dp820
g101
g102
ssg83
g809
sg76
(lp821
S':'
asbag69
(g90
g71
NtRp822
(dp823
g74
(dp824
sg83
g809
sg76
(lp825
g69
(g70
g71
NtRp826
(dp827
g74
(dp828
g82
I4
ssg83
g822
sg76
(lp829
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p830
asbasbasbag69
(g85
g71
NtRp831
(dp832
g74
(dp833
sg83
g649
sg76
(lp834
g69
(g90
g71
NtRp835
(dp836
g74
(dp837
g94
g95
ssg83
g831
sg76
(lp838
S'http_accept_charset'
p839
asbag69
(g90
g71
NtRp840
(dp841
g74
(dp842
g101
g102
ssg83
g831
sg76
(lp843
S':'
asbag69
(g90
g71
NtRp844
(dp845
g74
(dp846
sg83
g831
sg76
(lp847
g69
(g70
g71
NtRp848
(dp849
g74
(dp850
g82
I4
ssg83
g844
sg76
(lp851
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p852
asbasbasbag69
(g85
g71
NtRp853
(dp854
g74
(dp855
sg83
g649
sg76
(lp856
g69
(g90
g71
NtRp857
(dp858
g74
(dp859
g94
g95
ssg83
g853
sg76
(lp860
S'http_accept_encoding'
p861
asbag69
(g90
g71
NtRp862
(dp863
g74
(dp864
g101
g102
ssg83
g853
sg76
(lp865
S':'
asbag69
(g90
g71
NtRp866
(dp867
g74
(dp868
sg83
g853
sg76
(lp869
g69
(g70
g71
NtRp870
(dp871
g74
(dp872
g82
I4
ssg83
g866
sg76
(lp873
S'gzip,deflate,sdch'
p874
asbasbasbag69
(g85
g71
NtRp875
(dp876
g74
(dp877
sg83
g649
sg76
(lp878
g69
(g90
g71
NtRp879
(dp880
g74
(dp881
g94
g95
ssg83
g875
sg76
(lp882
S'http_accept_language'
p883
asbag69
(g90
g71
NtRp884
(dp885
g74
(dp886
g101
g102
ssg83
g875
sg76
(lp887
S':'
asbag69
(g90
g71
NtRp888
(dp889
g74
(dp890
sg83
g875
sg76
(lp891
g69
(g70
g71
NtRp892
(dp893
g74
(dp894
g82
I4
ssg83
g888
sg76
(lp895
S'en-US,en;q=0.8'
p896
asbasbasbag69
(g85
g71
NtRp897
(dp898
g74
(dp899
sg83
g649
sg76
(lp900
g69
(g90
g71
NtRp901
(dp902
g74
(dp903
g94
g95
ssg83
g897
sg76
(lp904
S'http_connection'
p905
asbag69
(g90
g71
NtRp906
(dp907
g74
(dp908
g101
g102
ssg83
g897
sg76
(lp909
S':'
asbag69
(g90
g71
NtRp910
(dp911
g74
(dp912
sg83
g897
sg76
(lp913
g69
(g70
g71
NtRp914
(dp915
g74
(dp916
g82
I4
ssg83
g910
sg76
(lp917
S'keep-alive'
p918
asbasbasbag69
(g85
g71
NtRp919
(dp920
g74
(dp921
sg83
g649
sg76
(lp922
g69
(g90
g71
NtRp923
(dp924
g74
(dp925
g94
g95
ssg83
g919
sg76
(lp926
S'http_cookie'
p927
asbag69
(g90
g71
NtRp928
(dp929
g74
(dp930
g101
g102
ssg83
g919
sg76
(lp931
S':'
asbag69
(g90
g71
NtRp932
(dp933
g74
(dp934
sg83
g919
sg76
(lp935
g69
(g70
g71
NtRp936
(dp937
g74
(dp938
g82
I4
ssg83
g932
sg76
(lp939
S'session_id_welcome=127.0.0.1-f5a8704c-a955-48cc-896b-3ae9b36d4204; session_id_phylografter=127.0.0.1-6af658a1-9890-462f-a9ae-2fb92424f1e9'
p940
asbasbasbag69
(g85
g71
NtRp941
(dp942
g74
(dp943
sg83
g649
sg76
(lp944
g69
(g90
g71
NtRp945
(dp946
g74
(dp947
g94
g95
ssg83
g941
sg76
(lp948
S'http_host'
p949
asbag69
(g90
g71
NtRp950
(dp951
g74
(dp952
g101
g102
ssg83
g941
sg76
(lp953
S':'
asbag69
(g90
g71
NtRp954
(dp955
g74
(dp956
sg83
g941
sg76
(lp957
g69
(g70
g71
NtRp958
(dp959
g74
(dp960
g82
I4
ssg83
g954
sg76
(lp961
S'127.0.0.1:8000'
p962
asbasbasbag69
(g85
g71
NtRp963
(dp964
g74
(dp965
sg83
g649
sg76
(lp966
g69
(g90
g71
NtRp967
(dp968
g74
(dp969
g94
g95
ssg83
g963
sg76
(lp970
S'http_referer'
p971
asbag69
(g90
g71
NtRp972
(dp973
g74
(dp974
g101
g102
ssg83
g963
sg76
(lp975
S':'
asbag69
(g90
g71
NtRp976
(dp977
g74
(dp978
sg83
g963
sg76
(lp979
g69
(g70
g71
NtRp980
(dp981
g74
(dp982
g82
I4
ssg83
g976
sg76
(lp983
S'http://127.0.0.1:8000/Phylografter/default/index'
p984
asbasbasbag69
(g85
g71
NtRp985
(dp986
g74
(dp987
sg83
g649
sg76
(lp988
g69
(g90
g71
NtRp989
(dp990
g74
(dp991
g94
g95
ssg83
g985
sg76
(lp992
S'http_user_agent'
p993
asbag69
(g90
g71
NtRp994
(dp995
g74
(dp996
g101
g102
ssg83
g985
sg76
(lp997
S':'
asbag69
(g90
g71
NtRp998
(dp999
g74
(dp1000
sg83
g985
sg76
(lp1001
g69
(g70
g71
NtRp1002
(dp1003
g74
(dp1004
g82
I4
ssg83
g998
sg76
(lp1005
S'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11'
p1006
asbasbasbag69
(g85
g71
NtRp1007
(dp1008
g74
(dp1009
sg83
g649
sg76
(lp1010
g69
(g90
g71
NtRp1011
(dp1012
g74
(dp1013
g94
g95
ssg83
g1007
sg76
(lp1014
S'is_jython'
p1015
asbag69
(g90
g71
NtRp1016
(dp1017
g74
(dp1018
g101
g102
ssg83
g1007
sg76
(lp1019
S':'
asbag69
(g90
g71
NtRp1020
(dp1021
g74
(dp1022
sg83
g1007
sg76
(lp1023
g69
(g70
g71
NtRp1024
(dp1025
g74
(dp1026
g82
I4
ssg83
g1020
sg76
(lp1027
g112
asbasbasbag69
(g85
g71
NtRp1028
(dp1029
g74
(dp1030
sg83
g649
sg76
(lp1031
g69
(g90
g71
NtRp1032
(dp1033
g74
(dp1034
g94
g95
ssg83
g1028
sg76
(lp1035
S'is_pypy'
p1036
asbag69
(g90
g71
NtRp1037
(dp1038
g74
(dp1039
g101
g102
ssg83
g1028
sg76
(lp1040
S':'
asbag69
(g90
g71
NtRp1041
(dp1042
g74
(dp1043
sg83
g1028
sg76
(lp1044
g69
(g70
g71
NtRp1045
(dp1046
g74
(dp1047
g82
I4
ssg83
g1041
sg76
(lp1048
g112
asbasbasbag69
(g85
g71
NtRp1049
(dp1050
g74
(dp1051
sg83
g649
sg76
(lp1052
g69
(g90
g71
NtRp1053
(dp1054
g74
(dp1055
g94
g95
ssg83
g1049
sg76
(lp1056
S'path_info'
p1057
asbag69
(g90
g71
NtRp1058
(dp1059
g74
(dp1060
g101
g102
ssg83
g1049
sg76
(lp1061
S':'
asbag69
(g90
g71
NtRp1062
(dp1063
g74
(dp1064
sg83
g1049
sg76
(lp1065
g69
(g70
g71
NtRp1066
(dp1067
g74
(dp1068
g82
I4
ssg83
g1062
sg76
(lp1069
S'/Phylografter/stree/index'
p1070
asbasbasbag69
(g85
g71
NtRp1071
(dp1072
g74
(dp1073
sg83
g649
sg76
(lp1074
g69
(g90
g71
NtRp1075
(dp1076
g74
(dp1077
g94
g95
ssg83
g1071
sg76
(lp1078
S'query_string'
p1079
asbag69
(g90
g71
NtRp1080
(dp1081
g74
(dp1082
g101
g102
ssg83
g1071
sg76
(lp1083
S':'
asbag69
(g90
g71
NtRp1084
(dp1085
g74
(dp1086
sg83
g1071
sg76
(lp1087
g69
(g70
g71
NtRp1088
(dp1089
g74
(dp1090
g82
I4
ssg83
g1084
sg76
(lp1091
S''
asbasbasbag69
(g85
g71
NtRp1092
(dp1093
g74
(dp1094
sg83
g649
sg76
(lp1095
g69
(g90
g71
NtRp1096
(dp1097
g74
(dp1098
g94
g95
ssg83
g1092
sg76
(lp1099
S'remote_addr'
p1100
asbag69
(g90
g71
NtRp1101
(dp1102
g74
(dp1103
g101
g102
ssg83
g1092
sg76
(lp1104
S':'
asbag69
(g90
g71
NtRp1105
(dp1106
g74
(dp1107
sg83
g1092
sg76
(lp1108
g69
(g70
g71
NtRp1109
(dp1110
g74
(dp1111
g82
I4
ssg83
g1105
sg76
(lp1112
g202
asbasbasbag69
(g85
g71
NtRp1113
(dp1114
g74
(dp1115
sg83
g649
sg76
(lp1116
g69
(g90
g71
NtRp1117
(dp1118
g74
(dp1119
g94
g95
ssg83
g1113
sg76
(lp1120
S'remote_port'
p1121
asbag69
(g90
g71
NtRp1122
(dp1123
g74
(dp1124
g101
g102
ssg83
g1113
sg76
(lp1125
S':'
asbag69
(g90
g71
NtRp1126
(dp1127
g74
(dp1128
sg83
g1113
sg76
(lp1129
g69
(g70
g71
NtRp1130
(dp1131
g74
(dp1132
g82
I4
ssg83
g1126
sg76
(lp1133
S'2454'
p1134
asbasbasbag69
(g85
g71
NtRp1135
(dp1136
g74
(dp1137
sg83
g649
sg76
(lp1138
g69
(g90
g71
NtRp1139
(dp1140
g74
(dp1141
g94
g95
ssg83
g1135
sg76
(lp1142
S'request_method'
p1143
asbag69
(g90
g71
NtRp1144
(dp1145
g74
(dp1146
g101
g102
ssg83
g1135
sg76
(lp1147
S':'
asbag69
(g90
g71
NtRp1148
(dp1149
g74
(dp1150
sg83
g1135
sg76
(lp1151
g69
(g70
g71
NtRp1152
(dp1153
g74
(dp1154
g82
I4
ssg83
g1148
sg76
(lp1155
S'GET'
p1156
asbasbasbag69
(g85
g71
NtRp1157
(dp1158
g74
(dp1159
sg83
g649
sg76
(lp1160
g69
(g90
g71
NtRp1161
(dp1162
g74
(dp1163
g94
g95
ssg83
g1157
sg76
(lp1164
S'script_name'
p1165
asbag69
(g90
g71
NtRp1166
(dp1167
g74
(dp1168
g101
g102
ssg83
g1157
sg76
(lp1169
S':'
asbag69
(g90
g71
NtRp1170
(dp1171
g74
(dp1172
sg83
g1157
sg76
(lp1173
g69
(g70
g71
NtRp1174
(dp1175
g74
(dp1176
g82
I4
ssg83
g1170
sg76
(lp1177
S''
asbasbasbag69
(g85
g71
NtRp1178
(dp1179
g74
(dp1180
sg83
g649
sg76
(lp1181
g69
(g90
g71
NtRp1182
(dp1183
g74
(dp1184
g94
g95
ssg83
g1178
sg76
(lp1185
S'server_name'
p1186
asbag69
(g90
g71
NtRp1187
(dp1188
g74
(dp1189
g101
g102
ssg83
g1178
sg76
(lp1190
S':'
asbag69
(g90
g71
NtRp1191
(dp1192
g74
(dp1193
sg83
g1178
sg76
(lp1194
g69
(g70
g71
NtRp1195
(dp1196
g74
(dp1197
g82
I4
ssg83
g1191
sg76
(lp1198
S'fm-biosync-int1'
p1199
asbasbasbag69
(g85
g71
NtRp1200
(dp1201
g74
(dp1202
sg83
g649
sg76
(lp1203
g69
(g90
g71
NtRp1204
(dp1205
g74
(dp1206
g94
g95
ssg83
g1200
sg76
(lp1207
S'server_port'
p1208
asbag69
(g90
g71
NtRp1209
(dp1210
g74
(dp1211
g101
g102
ssg83
g1200
sg76
(lp1212
S':'
asbag69
(g90
g71
NtRp1213
(dp1214
g74
(dp1215
sg83
g1200
sg76
(lp1216
g69
(g70
g71
NtRp1217
(dp1218
g74
(dp1219
g82
I4
ssg83
g1213
sg76
(lp1220
S'8000'
p1221
asbasbasbag69
(g85
g71
NtRp1222
(dp1223
g74
(dp1224
sg83
g649
sg76
(lp1225
g69
(g90
g71
NtRp1226
(dp1227
g74
(dp1228
g94
g95
ssg83
g1222
sg76
(lp1229
S'server_protocol'
p1230
asbag69
(g90
g71
NtRp1231
(dp1232
g74
(dp1233
g101
g102
ssg83
g1222
sg76
(lp1234
S':'
asbag69
(g90
g71
NtRp1235
(dp1236
g74
(dp1237
sg83
g1222
sg76
(lp1238
g69
(g70
g71
NtRp1239
(dp1240
g74
(dp1241
g82
I4
ssg83
g1235
sg76
(lp1242
S'HTTP/1.1'
p1243
asbasbasbag69
(g85
g71
NtRp1244
(dp1245
g74
(dp1246
sg83
g649
sg76
(lp1247
g69
(g90
g71
NtRp1248
(dp1249
g74
(dp1250
g94
g95
ssg83
g1244
sg76
(lp1251
S'server_software'
p1252
asbag69
(g90
g71
NtRp1253
(dp1254
g74
(dp1255
g101
g102
ssg83
g1244
sg76
(lp1256
S':'
asbag69
(g90
g71
NtRp1257
(dp1258
g74
(dp1259
sg83
g1244
sg76
(lp1260
g69
(g70
g71
NtRp1261
(dp1262
g74
(dp1263
g82
I4
ssg83
g1257
sg76
(lp1264
S'Rocket 1.2.4'
p1265
asbasbasbag69
(g85
g71
NtRp1266
(dp1267
g74
(dp1268
sg83
g649
sg76
(lp1269
g69
(g90
g71
NtRp1270
(dp1271
g74
(dp1272
g94
g95
ssg83
g1266
sg76
(lp1273
S'web2py_crontype'
p1274
asbag69
(g90
g71
NtRp1275
(dp1276
g74
(dp1277
g101
g102
ssg83
g1266
sg76
(lp1278
S':'
asbag69
(g90
g71
NtRp1279
(dp1280
g74
(dp1281
sg83
g1266
sg76
(lp1282
g69
(g70
g71
NtRp1283
(dp1284
g74
(dp1285
g82
I4
ssg83
g1279
sg76
(lp1286
S'hard'
p1287
asbasbasbag69
(g85
g71
NtRp1288
(dp1289
g74
(dp1290
sg83
g649
sg76
(lp1291
g69
(g90
g71
NtRp1292
(dp1293
g74
(dp1294
g94
g95
ssg83
g1288
sg76
(lp1295
S'web2py_path'
p1296
asbag69
(g90
g71
NtRp1297
(dp1298
g74
(dp1299
g101
g102
ssg83
g1288
sg76
(lp1300
S':'
asbag69
(g90
g71
NtRp1301
(dp1302
g74
(dp1303
sg83
g1288
sg76
(lp1304
g69
(g70
g71
NtRp1305
(dp1306
g74
(dp1307
g82
I4
ssg83
g1301
sg76
(lp1308
g696
asbasbasbag69
(g85
g71
NtRp1309
(dp1310
g74
(dp1311
sg83
g649
sg76
(lp1312
g69
(g90
g71
NtRp1313
(dp1314
g74
(dp1315
g94
g95
ssg83
g1309
sg76
(lp1316
S'web2py_version'
p1317
asbag69
(g90
g71
NtRp1318
(dp1319
g74
(dp1320
g101
g102
ssg83
g1309
sg76
(lp1321
S':'
asbag69
(g90
g71
NtRp1322
(dp1323
g74
(dp1324
sg83
g1309
sg76
(lp1325
g69
(g70
g71
NtRp1326
(dp1327
g74
(dp1328
g82
I4
ssg83
g1322
sg76
(lp1329
g69
(g78
g71
NtRp1330
(dp1331
g74
(dp1332
g82
I3
ssg83
Nsg76
(lp1333
g69
(g85
g71
NtRp1334
(dp1335
g74
(dp1336
sg83
g1330
sg76
(lp1337
g69
(g90
g71
NtRp1338
(dp1339
g74
(dp1340
sg83
g1334
sg76
(lp1341
g69
(g70
g71
NtRp1342
(dp1343
g74
(dp1344
g82
I3
ssg83
g1338
sg76
(lp1345
S'1'
asbasbasbag69
(g85
g71
NtRp1346
(dp1347
g74
(dp1348
sg83
g1330
sg76
(lp1349
g69
(g90
g71
NtRp1350
(dp1351
g74
(dp1352
sg83
g1346
sg76
(lp1353
g69
(g70
g71
NtRp1354
(dp1355
g74
(dp1356
g82
I3
ssg83
g1350
sg76
(lp1357
S'99'
p1358
asbasbasbag69
(g85
g71
NtRp1359
(dp1360
g74
(dp1361
sg83
g1330
sg76
(lp1362
g69
(g90
g71
NtRp1363
(dp1364
g74
(dp1365
sg83
g1359
sg76
(lp1366
g69
(g70
g71
NtRp1367
(dp1368
g74
(dp1369
g82
I3
ssg83
g1363
sg76
(lp1370
S'7'
asbasbasbag69
(g85
g71
NtRp1371
(dp1372
g74
(dp1373
sg83
g1330
sg76
(lp1374
g69
(g90
g71
NtRp1375
(dp1376
g74
(dp1377
sg83
g1371
sg76
(lp1378
g69
(g70
g71
NtRp1379
(dp1380
g74
(dp1381
g82
I3
ssg83
g1375
sg76
(lp1382
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1383
asbasbasbag69
(g85
g71
NtRp1384
(dp1385
g74
(dp1386
sg83
g1330
sg76
(lp1387
g69
(g90
g71
NtRp1388
(dp1389
g74
(dp1390
sg83
g1384
sg76
(lp1391
g69
(g70
g71
NtRp1392
(dp1393
g74
(dp1394
g82
I3
ssg83
g1388
sg76
(lp1395
S'stable'
p1396
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1397
(dp1398
g74
(dp1399
sg83
g649
sg76
(lp1400
g69
(g90
g71
NtRp1401
(dp1402
g74
(dp1403
g94
g95
ssg83
g1397
sg76
(lp1404
S'wsgi_errors'
p1405
asbag69
(g90
g71
NtRp1406
(dp1407
g74
(dp1408
g101
g102
ssg83
g1397
sg76
(lp1409
S':'
asbag69
(g90
g71
NtRp1410
(dp1411
g74
(dp1412
sg83
g1397
sg76
(lp1413
g69
(g70
g71
NtRp1414
(dp1415
g74
(dp1416
g82
I4
ssg83
g1410
sg76
(lp1417
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p1418
asbasbasbag69
(g85
g71
NtRp1419
(dp1420
g74
(dp1421
sg83
g649
sg76
(lp1422
g69
(g90
g71
NtRp1423
(dp1424
g74
(dp1425
g94
g95
ssg83
g1419
sg76
(lp1426
S'wsgi_file_wrapper'
p1427
asbag69
(g90
g71
NtRp1428
(dp1429
g74
(dp1430
g101
g102
ssg83
g1419
sg76
(lp1431
S':'
asbag69
(g90
g71
NtRp1432
(dp1433
g74
(dp1434
sg83
g1419
sg76
(lp1435
g69
(g70
g71
NtRp1436
(dp1437
g74
(dp1438
g82
I4
ssg83
g1432
sg76
(lp1439
S'<class wsgiref.util.FileWrapper at 0x0164ADF8>'
p1440
asbasbasbag69
(g85
g71
NtRp1441
(dp1442
g74
(dp1443
sg83
g649
sg76
(lp1444
g69
(g90
g71
NtRp1445
(dp1446
g74
(dp1447
g94
g95
ssg83
g1441
sg76
(lp1448
S'wsgi_input'
p1449
asbag69
(g90
g71
NtRp1450
(dp1451
g74
(dp1452
g101
g102
ssg83
g1441
sg76
(lp1453
S':'
asbag69
(g90
g71
NtRp1454
(dp1455
g74
(dp1456
sg83
g1441
sg76
(lp1457
g69
(g70
g71
NtRp1458
(dp1459
g74
(dp1460
g82
I4
ssg83
g1454
sg76
(lp1461
S'<socket._fileobject object at 0x1F9128B0>'
p1462
asbasbasbag69
(g85
g71
NtRp1463
(dp1464
g74
(dp1465
sg83
g649
sg76
(lp1466
g69
(g90
g71
NtRp1467
(dp1468
g74
(dp1469
g94
g95
ssg83
g1463
sg76
(lp1470
S'wsgi_multiprocess'
p1471
asbag69
(g90
g71
NtRp1472
(dp1473
g74
(dp1474
g101
g102
ssg83
g1463
sg76
(lp1475
S':'
asbag69
(g90
g71
NtRp1476
(dp1477
g74
(dp1478
sg83
g1463
sg76
(lp1479
g69
(g70
g71
NtRp1480
(dp1481
g74
(dp1482
g82
I4
ssg83
g1476
sg76
(lp1483
g112
asbasbasbag69
(g85
g71
NtRp1484
(dp1485
g74
(dp1486
sg83
g649
sg76
(lp1487
g69
(g90
g71
NtRp1488
(dp1489
g74
(dp1490
g94
g95
ssg83
g1484
sg76
(lp1491
S'wsgi_multithread'
p1492
asbag69
(g90
g71
NtRp1493
(dp1494
g74
(dp1495
g101
g102
ssg83
g1484
sg76
(lp1496
S':'
asbag69
(g90
g71
NtRp1497
(dp1498
g74
(dp1499
sg83
g1484
sg76
(lp1500
g69
(g70
g71
NtRp1501
(dp1502
g74
(dp1503
g82
I4
ssg83
g1497
sg76
(lp1504
S'True'
p1505
asbasbasbag69
(g85
g71
NtRp1506
(dp1507
g74
(dp1508
sg83
g649
sg76
(lp1509
g69
(g90
g71
NtRp1510
(dp1511
g74
(dp1512
g94
g95
ssg83
g1506
sg76
(lp1513
S'wsgi_run_once'
p1514
asbag69
(g90
g71
NtRp1515
(dp1516
g74
(dp1517
g101
g102
ssg83
g1506
sg76
(lp1518
S':'
asbag69
(g90
g71
NtRp1519
(dp1520
g74
(dp1521
sg83
g1506
sg76
(lp1522
g69
(g70
g71
NtRp1523
(dp1524
g74
(dp1525
g82
I4
ssg83
g1519
sg76
(lp1526
g112
asbasbasbag69
(g85
g71
NtRp1527
(dp1528
g74
(dp1529
sg83
g649
sg76
(lp1530
g69
(g90
g71
NtRp1531
(dp1532
g74
(dp1533
g94
g95
ssg83
g1527
sg76
(lp1534
S'wsgi_url_scheme'
p1535
asbag69
(g90
g71
NtRp1536
(dp1537
g74
(dp1538
g101
g102
ssg83
g1527
sg76
(lp1539
S':'
asbag69
(g90
g71
NtRp1540
(dp1541
g74
(dp1542
sg83
g1527
sg76
(lp1543
g69
(g70
g71
NtRp1544
(dp1545
g74
(dp1546
g82
I4
ssg83
g1540
sg76
(lp1547
S'http'
p1548
asbasbasbag69
(g85
g71
NtRp1549
(dp1550
g74
(dp1551
sg83
g649
sg76
(lp1552
g69
(g90
g71
NtRp1553
(dp1554
g74
(dp1555
g94
g95
ssg83
g1549
sg76
(lp1556
S'wsgi_version'
p1557
asbag69
(g90
g71
NtRp1558
(dp1559
g74
(dp1560
g101
g102
ssg83
g1549
sg76
(lp1561
S':'
asbag69
(g90
g71
NtRp1562
(dp1563
g74
(dp1564
sg83
g1549
sg76
(lp1565
g69
(g70
g71
NtRp1566
(dp1567
g74
(dp1568
g82
I4
ssg83
g1562
sg76
(lp1569
g69
(g78
g71
NtRp1570
(dp1571
g74
(dp1572
g82
I3
ssg83
Nsg76
(lp1573
g69
(g85
g71
NtRp1574
(dp1575
g74
(dp1576
sg83
g1570
sg76
(lp1577
g69
(g90
g71
NtRp1578
(dp1579
g74
(dp1580
sg83
g1574
sg76
(lp1581
g69
(g70
g71
NtRp1582
(dp1583
g74
(dp1584
g82
I3
ssg83
g1578
sg76
(lp1585
S'1'
asbasbasbag69
(g85
g71
NtRp1586
(dp1587
g74
(dp1588
sg83
g1570
sg76
(lp1589
g69
(g90
g71
NtRp1590
(dp1591
g74
(dp1592
sg83
g1586
sg76
(lp1593
g69
(g70
g71
NtRp1594
(dp1595
g74
(dp1596
g82
I3
ssg83
g1590
sg76
(lp1597
S'0'
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp1598
(dp1599
g74
(dp1600
sg83
g79
sg76
(lp1601
g69
(g90
g71
NtRp1602
(dp1603
g74
(dp1604
g94
g95
ssg83
g1598
sg76
(lp1605
S'extension'
p1606
asbag69
(g90
g71
NtRp1607
(dp1608
g74
(dp1609
g101
g102
ssg83
g1598
sg76
(lp1610
S':'
asbag69
(g90
g71
NtRp1611
(dp1612
g74
(dp1613
sg83
g1598
sg76
(lp1614
g69
(g70
g71
NtRp1615
(dp1616
g74
(dp1617
g82
I5
ssg83
g1611
sg76
(lp1618
S'html'
p1619
asbasbasbag69
(g85
g71
NtRp1620
(dp1621
g74
(dp1622
sg83
g79
sg76
(lp1623
g69
(g90
g71
NtRp1624
(dp1625
g74
(dp1626
g94
g95
ssg83
g1620
sg76
(lp1627
S'folder'
p1628
asbag69
(g90
g71
NtRp1629
(dp1630
g74
(dp1631
g101
g102
ssg83
g1620
sg76
(lp1632
S':'
asbag69
(g90
g71
NtRp1633
(dp1634
g74
(dp1635
sg83
g1620
sg76
(lp1636
g69
(g70
g71
NtRp1637
(dp1638
g74
(dp1639
g82
I5
ssg83
g1633
sg76
(lp1640
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\'
p1641
asbasbasbag69
(g85
g71
NtRp1642
(dp1643
g74
(dp1644
sg83
g79
sg76
(lp1645
g69
(g90
g71
NtRp1646
(dp1647
g74
(dp1648
g94
g95
ssg83
g1642
sg76
(lp1649
S'function'
p1650
asbag69
(g90
g71
NtRp1651
(dp1652
g74
(dp1653
g101
g102
ssg83
g1642
sg76
(lp1654
S':'
asbag69
(g90
g71
NtRp1655
(dp1656
g74
(dp1657
sg83
g1642
sg76
(lp1658
g69
(g70
g71
NtRp1659
(dp1660
g74
(dp1661
g82
I5
ssg83
g1655
sg76
(lp1662
S'index'
p1663
asbasbasbag69
(g85
g71
NtRp1664
(dp1665
g74
(dp1666
sg83
g79
sg76
(lp1667
g69
(g90
g71
NtRp1668
(dp1669
g74
(dp1670
g94
g95
ssg83
g1664
sg76
(lp1671
S'get_vars'
p1672
asbag69
(g90
g71
NtRp1673
(dp1674
g74
(dp1675
g101
g102
ssg83
g1664
sg76
(lp1676
S':'
asbag69
(g90
g71
NtRp1677
(dp1678
g74
(dp1679
sg83
g1664
sg76
(lp1680
g69
(g70
g71
NtRp1681
(dp1682
g74
(dp1683
g82
I5
ssg83
g1677
sg76
(lp1684
g69
(g78
g71
NtRp1685
(dp1686
g74
(dp1687
g82
I4
ssg83
Nsg76
(lp1688
sbasbasbasbag69
(g85
g71
NtRp1689
(dp1690
g74
(dp1691
sg83
g79
sg76
(lp1692
g69
(g90
g71
NtRp1693
(dp1694
g74
(dp1695
g94
g95
ssg83
g1689
sg76
(lp1696
S'global_settings'
p1697
asbag69
(g90
g71
NtRp1698
(dp1699
g74
(dp1700
g101
g102
ssg83
g1689
sg76
(lp1701
S':'
asbag69
(g90
g71
NtRp1702
(dp1703
g74
(dp1704
sg83
g1689
sg76
(lp1705
g69
(g70
g71
NtRp1706
(dp1707
g74
(dp1708
g82
I5
ssg83
g1702
sg76
(lp1709
g69
(g78
g71
NtRp1710
(dp1711
g74
(dp1712
g82
I4
ssg83
Nsg76
(lp1713
g69
(g85
g71
NtRp1714
(dp1715
g74
(dp1716
sg83
g1710
sg76
(lp1717
g69
(g90
g71
NtRp1718
(dp1719
g74
(dp1720
g94
g95
ssg83
g1714
sg76
(lp1721
g661
asbag69
(g90
g71
NtRp1722
(dp1723
g74
(dp1724
g101
g102
ssg83
g1714
sg76
(lp1725
S':'
asbag69
(g90
g71
NtRp1726
(dp1727
g74
(dp1728
sg83
g1714
sg76
(lp1729
g69
(g70
g71
NtRp1730
(dp1731
g74
(dp1732
g82
I4
ssg83
g1726
sg76
(lp1733
S"set(['C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\welcome\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\admin\\\\', 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py\\\\applications\\\\Phylografter\\\\'])"
p1734
asbasbasbag69
(g85
g71
NtRp1735
(dp1736
g74
(dp1737
sg83
g1710
sg76
(lp1738
g69
(g90
g71
NtRp1739
(dp1740
g74
(dp1741
g94
g95
ssg83
g1735
sg76
(lp1742
g683
asbag69
(g90
g71
NtRp1743
(dp1744
g74
(dp1745
g101
g102
ssg83
g1735
sg76
(lp1746
S':'
asbag69
(g90
g71
NtRp1747
(dp1748
g74
(dp1749
sg83
g1735
sg76
(lp1750
g69
(g70
g71
NtRp1751
(dp1752
g74
(dp1753
g82
I4
ssg83
g1747
sg76
(lp1754
g696
asbasbasbag69
(g85
g71
NtRp1755
(dp1756
g74
(dp1757
sg83
g1710
sg76
(lp1758
g69
(g90
g71
NtRp1759
(dp1760
g74
(dp1761
g94
g95
ssg83
g1755
sg76
(lp1762
g705
asbag69
(g90
g71
NtRp1763
(dp1764
g74
(dp1765
g101
g102
ssg83
g1755
sg76
(lp1766
S':'
asbag69
(g90
g71
NtRp1767
(dp1768
g74
(dp1769
sg83
g1755
sg76
(lp1770
g69
(g70
g71
NtRp1771
(dp1772
g74
(dp1773
g82
I4
ssg83
g1767
sg76
(lp1774
g69
(g78
g71
NtRp1775
(dp1776
g74
(dp1777
g82
I3
ssg83
Nsg76
(lp1778
sbasbasbasbag69
(g85
g71
NtRp1779
(dp1780
g74
(dp1781
sg83
g1710
sg76
(lp1782
g69
(g90
g71
NtRp1783
(dp1784
g74
(dp1785
g94
g95
ssg83
g1779
sg76
(lp1786
g730
asbag69
(g90
g71
NtRp1787
(dp1788
g74
(dp1789
g101
g102
ssg83
g1779
sg76
(lp1790
S':'
asbag69
(g90
g71
NtRp1791
(dp1792
g74
(dp1793
sg83
g1779
sg76
(lp1794
g69
(g70
g71
NtRp1795
(dp1796
g74
(dp1797
g82
I4
ssg83
g1791
sg76
(lp1798
S"<Values at 0x174ff08: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'fm-biosync-int1', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': 'C:\\\\Documents and Settings\\\\Guest\\\\Desktop\\\\web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1799
asbasbasbag69
(g85
g71
NtRp1800
(dp1801
g74
(dp1802
sg83
g1710
sg76
(lp1803
g69
(g90
g71
NtRp1804
(dp1805
g74
(dp1806
g94
g95
ssg83
g1800
sg76
(lp1807
g752
asbag69
(g90
g71
NtRp1808
(dp1809
g74
(dp1810
g101
g102
ssg83
g1800
sg76
(lp1811
S':'
asbag69
(g90
g71
NtRp1812
(dp1813
g74
(dp1814
sg83
g1800
sg76
(lp1815
g69
(g70
g71
NtRp1816
(dp1817
g74
(dp1818
g82
I4
ssg83
g1812
sg76
(lp1819
S'set([])'
p1820
asbasbasbag69
(g85
g71
NtRp1821
(dp1822
g74
(dp1823
sg83
g1710
sg76
(lp1824
g69
(g90
g71
NtRp1825
(dp1826
g74
(dp1827
g94
g95
ssg83
g1821
sg76
(lp1828
g774
asbag69
(g90
g71
NtRp1829
(dp1830
g74
(dp1831
g101
g102
ssg83
g1821
sg76
(lp1832
S':'
asbag69
(g90
g71
NtRp1833
(dp1834
g74
(dp1835
sg83
g1821
sg76
(lp1836
g69
(g70
g71
NtRp1837
(dp1838
g74
(dp1839
g82
I4
ssg83
g1833
sg76
(lp1840
g112
asbasbasbag69
(g85
g71
NtRp1841
(dp1842
g74
(dp1843
sg83
g1710
sg76
(lp1844
g69
(g90
g71
NtRp1845
(dp1846
g74
(dp1847
g94
g95
ssg83
g1841
sg76
(lp1848
g795
asbag69
(g90
g71
NtRp1849
(dp1850
g74
(dp1851
g101
g102
ssg83
g1841
sg76
(lp1852
S':'
asbag69
(g90
g71
NtRp1853
(dp1854
g74
(dp1855
sg83
g1841
sg76
(lp1856
g69
(g70
g71
NtRp1857
(dp1858
g74
(dp1859
g82
I4
ssg83
g1853
sg76
(lp1860
g808
asbasbasbag69
(g85
g71
NtRp1861
(dp1862
g74
(dp1863
sg83
g1710
sg76
(lp1864
g69
(g90
g71
NtRp1865
(dp1866
g74
(dp1867
g94
g95
ssg83
g1861
sg76
(lp1868
g1015
asbag69
(g90
g71
NtRp1869
(dp1870
g74
(dp1871
g101
g102
ssg83
g1861
sg76
(lp1872
S':'
asbag69
(g90
g71
NtRp1873
(dp1874
g74
(dp1875
sg83
g1861
sg76
(lp1876
g69
(g70
g71
NtRp1877
(dp1878
g74
(dp1879
g82
I4
ssg83
g1873
sg76
(lp1880
g112
asbasbasbag69
(g85
g71
NtRp1881
(dp1882
g74
(dp1883
sg83
g1710
sg76
(lp1884
g69
(g90
g71
NtRp1885
(dp1886
g74
(dp1887
g94
g95
ssg83
g1881
sg76
(lp1888
g1036
asbag69
(g90
g71
NtRp1889
(dp1890
g74
(dp1891
g101
g102
ssg83
g1881
sg76
(lp1892
S':'
asbag69
(g90
g71
NtRp1893
(dp1894
g74
(dp1895
sg83
g1881
sg76
(lp1896
g69
(g70
g71
NtRp1897
(dp1898
g74
(dp1899
g82
I4
ssg83
g1893
sg76
(lp1900
g112
asbasbasbag69
(g85
g71
NtRp1901
(dp1902
g74
(dp1903
sg83
g1710
sg76
(lp1904
g69
(g90
g71
NtRp1905
(dp1906
g74
(dp1907
g94
g95
ssg83
g1901
sg76
(lp1908
g1274
asbag69
(g90
g71
NtRp1909
(dp1910
g74
(dp1911
g101
g102
ssg83
g1901
sg76
(lp1912
S':'
asbag69
(g90
g71
NtRp1913
(dp1914
g74
(dp1915
sg83
g1901
sg76
(lp1916
g69
(g70
g71
NtRp1917
(dp1918
g74
(dp1919
g82
I4
ssg83
g1913
sg76
(lp1920
g1287
asbasbasbag69
(g85
g71
NtRp1921
(dp1922
g74
(dp1923
sg83
g1710
sg76
(lp1924
g69
(g90
g71
NtRp1925
(dp1926
g74
(dp1927
g94
g95
ssg83
g1921
sg76
(lp1928
g1317
asbag69
(g90
g71
NtRp1929
(dp1930
g74
(dp1931
g101
g102
ssg83
g1921
sg76
(lp1932
S':'
asbag69
(g90
g71
NtRp1933
(dp1934
g74
(dp1935
sg83
g1921
sg76
(lp1936
g69
(g70
g71
NtRp1937
(dp1938
g74
(dp1939
g82
I4
ssg83
g1933
sg76
(lp1940
g69
(g78
g71
NtRp1941
(dp1942
g74
(dp1943
g82
I3
ssg83
Nsg76
(lp1944
g69
(g85
g71
NtRp1945
(dp1946
g74
(dp1947
sg83
g1941
sg76
(lp1948
g69
(g90
g71
NtRp1949
(dp1950
g74
(dp1951
sg83
g1945
sg76
(lp1952
g69
(g70
g71
NtRp1953
(dp1954
g74
(dp1955
g82
I3
ssg83
g1949
sg76
(lp1956
S'1'
asbasbasbag69
(g85
g71
NtRp1957
(dp1958
g74
(dp1959
sg83
g1941
sg76
(lp1960
g69
(g90
g71
NtRp1961
(dp1962
g74
(dp1963
sg83
g1957
sg76
(lp1964
g69
(g70
g71
NtRp1965
(dp1966
g74
(dp1967
g82
I3
ssg83
g1961
sg76
(lp1968
S'99'
p1969
asbasbasbag69
(g85
g71
NtRp1970
(dp1971
g74
(dp1972
sg83
g1941
sg76
(lp1973
g69
(g90
g71
NtRp1974
(dp1975
g74
(dp1976
sg83
g1970
sg76
(lp1977
g69
(g70
g71
NtRp1978
(dp1979
g74
(dp1980
g82
I3
ssg83
g1974
sg76
(lp1981
S'7'
asbasbasbag69
(g85
g71
NtRp1982
(dp1983
g74
(dp1984
sg83
g1941
sg76
(lp1985
g69
(g90
g71
NtRp1986
(dp1987
g74
(dp1988
sg83
g1982
sg76
(lp1989
g69
(g70
g71
NtRp1990
(dp1991
g74
(dp1992
g82
I3
ssg83
g1986
sg76
(lp1993
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1994
asbasbasbag69
(g85
g71
NtRp1995
(dp1996
g74
(dp1997
sg83
g1941
sg76
(lp1998
g69
(g90
g71
NtRp1999
(dp2000
g74
(dp2001
sg83
g1995
sg76
(lp2002
g69
(g70
g71
NtRp2003
(dp2004
g74
(dp2005
g82
I3
ssg83
g1999
sg76
(lp2006
g1396
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp2007
(dp2008
g74
(dp2009
sg83
g79
sg76
(lp2010
g69
(g90
g71
NtRp2011
(dp2012
g74
(dp2013
g94
g95
ssg83
g2007
sg76
(lp2014
S'is_https'
p2015
asbag69
(g90
g71
NtRp2016
(dp2017
g74
(dp2018
g101
g102
ssg83
g2007
sg76
(lp2019
S':'
asbag69
(g90
g71
NtRp2020
(dp2021
g74
(dp2022
sg83
g2007
sg76
(lp2023
g69
(g70
g71
NtRp2024
(dp2025
g74
(dp2026
g82
I5
ssg83
g2020
sg76
(lp2027
g112
asbasbasbag69
(g85
g71
NtRp2028
(dp2029
g74
(dp2030
sg83
g79
sg76
(lp2031
g69
(g90
g71
NtRp2032
(dp2033
g74
(dp2034
g94
g95
ssg83
g2028
sg76
(lp2035
S'is_local'
p2036
asbag69
(g90
g71
NtRp2037
(dp2038
g74
(dp2039
g101
g102
ssg83
g2028
sg76
(lp2040
S':'
asbag69
(g90
g71
NtRp2041
(dp2042
g74
(dp2043
sg83
g2028
sg76
(lp2044
g69
(g70
g71
NtRp2045
(dp2046
g74
(dp2047
g82
I5
ssg83
g2041
sg76
(lp2048
g1505
asbasbasbag69
(g85
g71
NtRp2049
(dp2050
g74
(dp2051
sg83
g79
sg76
(lp2052
g69
(g90
g71
NtRp2053
(dp2054
g74
(dp2055
g94
g95
ssg83
g2049
sg76
(lp2056
S'is_restful'
p2057
asbag69
(g90
g71
NtRp2058
(dp2059
g74
(dp2060
g101
g102
ssg83
g2049
sg76
(lp2061
S':'
asbag69
(g90
g71
NtRp2062
(dp2063
g74
(dp2064
sg83
g2049
sg76
(lp2065
g69
(g70
g71
NtRp2066
(dp2067
g74
(dp2068
g82
I5
ssg83
g2062
sg76
(lp2069
g112
asbasbasbag69
(g85
g71
NtRp2070
(dp2071
g74
(dp2072
sg83
g79
sg76
(lp2073
g69
(g90
g71
NtRp2074
(dp2075
g74
(dp2076
g94
g95
ssg83
g2070
sg76
(lp2077
S'now'
p2078
asbag69
(g90
g71
NtRp2079
(dp2080
g74
(dp2081
g101
g102
ssg83
g2070
sg76
(lp2082
S':'
asbag69
(g90
g71
NtRp2083
(dp2084
g74
(dp2085
sg83
g2070
sg76
(lp2086
g69
(g70
g71
NtRp2087
(dp2088
g74
(dp2089
g82
I5
ssg83
g2083
sg76
(lp2090
S'datetime.datetime(2012, 7, 17, 11, 3, 47, 916000)'
p2091
asbasbasbag69
(g85
g71
NtRp2092
(dp2093
g74
(dp2094
sg83
g79
sg76
(lp2095
g69
(g90
g71
NtRp2096
(dp2097
g74
(dp2098
g94
g95
ssg83
g2092
sg76
(lp2099
S'post_vars'
p2100
asbag69
(g90
g71
NtRp2101
(dp2102
g74
(dp2103
g101
g102
ssg83
g2092
sg76
(lp2104
S':'
asbag69
(g90
g71
NtRp2105
(dp2106
g74
(dp2107
sg83
g2092
sg76
(lp2108
g69
(g70
g71
NtRp2109
(dp2110
g74
(dp2111
g82
I5
ssg83
g2105
sg76
(lp2112
g69
(g78
g71
NtRp2113
(dp2114
g74
(dp2115
g82
I4
ssg83
Nsg76
(lp2116
sbasbasbasbag69
(g85
g71
NtRp2117
(dp2118
g74
(dp2119
sg83
g79
sg76
(lp2120
g69
(g90
g71
NtRp2121
(dp2122
g74
(dp2123
g94
g95
ssg83
g2117
sg76
(lp2124
S'url'
p2125
asbag69
(g90
g71
NtRp2126
(dp2127
g74
(dp2128
g101
g102
ssg83
g2117
sg76
(lp2129
S':'
asbag69
(g90
g71
NtRp2130
(dp2131
g74
(dp2132
sg83
g2117
sg76
(lp2133
g69
(g70
g71
NtRp2134
(dp2135
g74
(dp2136
g82
I5
ssg83
g2130
sg76
(lp2137
S'/Phylografter/stree/index'
p2138
asbasbasbag69
(g85
g71
NtRp2139
(dp2140
g74
(dp2141
sg83
g79
sg76
(lp2142
g69
(g90
g71
NtRp2143
(dp2144
g74
(dp2145
g94
g95
ssg83
g2139
sg76
(lp2146
S'utcnow'
p2147
asbag69
(g90
g71
NtRp2148
(dp2149
g74
(dp2150
g101
g102
ssg83
g2139
sg76
(lp2151
S':'
asbag69
(g90
g71
NtRp2152
(dp2153
g74
(dp2154
sg83
g2139
sg76
(lp2155
g69
(g70
g71
NtRp2156
(dp2157
g74
(dp2158
g82
I5
ssg83
g2152
sg76
(lp2159
S'datetime.datetime(2012, 7, 17, 16, 3, 47, 916000)'
p2160
asbasbasbag69
(g85
g71
NtRp2161
(dp2162
g74
(dp2163
sg83
g79
sg76
(lp2164
g69
(g90
g71
NtRp2165
(dp2166
g74
(dp2167
g94
g95
ssg83
g2161
sg76
(lp2168
S'uuid'
p2169
asbag69
(g90
g71
NtRp2170
(dp2171
g74
(dp2172
g101
g102
ssg83
g2161
sg76
(lp2173
S':'
asbag69
(g90
g71
NtRp2174
(dp2175
g74
(dp2176
sg83
g2161
sg76
(lp2177
g69
(g70
g71
NtRp2178
(dp2179
g74
(dp2180
g82
I5
ssg83
g2174
sg76
(lp2181
S'Phylografter/127.0.0.1.2012-07-17.11-03-47.1ff2c225-077c-4ada-8fcb-4e1c24959708'
p2182
asbasbasbag69
(g85
g71
NtRp2183
(dp2184
g74
(dp2185
sg83
g79
sg76
(lp2186
g69
(g90
g71
NtRp2187
(dp2188
g74
(dp2189
g94
g95
ssg83
g2183
sg76
(lp2190
S'vars'
p2191
asbag69
(g90
g71
NtRp2192
(dp2193
g74
(dp2194
g101
g102
ssg83
g2183
sg76
(lp2195
S':'
asbag69
(g90
g71
NtRp2196
(dp2197
g74
(dp2198
sg83
g2183
sg76
(lp2199
g69
(g70
g71
NtRp2200
(dp2201
g74
(dp2202
g82
I5
ssg83
g2196
sg76
(lp2203
g69
(g78
g71
NtRp2204
(dp2205
g74
(dp2206
g82
I4
ssg83
Nsg76
(lp2207
sbasbasbasbag69
(g85
g71
NtRp2208
(dp2209
g74
(dp2210
sg83
g79
sg76
(lp2211
g69
(g90
g71
NtRp2212
(dp2213
g74
(dp2214
g94
g95
ssg83
g2208
sg76
(lp2215
S'wsgi'
p2216
asbag69
(g90
g71
NtRp2217
(dp2218
g74
(dp2219
g101
g102
ssg83
g2208
sg76
(lp2220
S':'
asbag69
(g90
g71
NtRp2221
(dp2222
g74
(dp2223
sg83
g2208
sg76
(lp2224
g69
(g70
g71
NtRp2225
(dp2226
g74
(dp2227
g82
I5
ssg83
g2221
sg76
(lp2228
g69
(g78
g71
NtRp2229
(dp2230
g74
(dp2231
g82
I4
ssg83
Nsg76
(lp2232
g69
(g85
g71
NtRp2233
(dp2234
g74
(dp2235
sg83
g2229
sg76
(lp2236
g69
(g90
g71
NtRp2237
(dp2238
g74
(dp2239
g94
g95
ssg83
g2233
sg76
(lp2240
S'environ'
p2241
asbag69
(g90
g71
NtRp2242
(dp2243
g74
(dp2244
g101
g102
ssg83
g2233
sg76
(lp2245
S':'
asbag69
(g90
g71
NtRp2246
(dp2247
g74
(dp2248
sg83
g2233
sg76
(lp2249
g69
(g70
g71
NtRp2250
(dp2251
g74
(dp2252
g82
I4
ssg83
g2246
sg76
(lp2253
g69
(g78
g71
NtRp2254
(dp2255
g74
(dp2256
g82
I3
ssg83
Nsg76
(lp2257
g69
(g85
g71
NtRp2258
(dp2259
g74
(dp2260
sg83
g2254
sg76
(lp2261
g69
(g90
g71
NtRp2262
(dp2263
g74
(dp2264
g94
g95
ssg83
g2258
sg76
(lp2265
S'HTTP_ACCEPT'
p2266
asbag69
(g90
g71
NtRp2267
(dp2268
g74
(dp2269
g101
g102
ssg83
g2258
sg76
(lp2270
S':'
asbag69
(g90
g71
NtRp2271
(dp2272
g74
(dp2273
sg83
g2258
sg76
(lp2274
g69
(g70
g71
NtRp2275
(dp2276
g74
(dp2277
g82
I3
ssg83
g2271
sg76
(lp2278
g830
asbasbasbag69
(g85
g71
NtRp2279
(dp2280
g74
(dp2281
sg83
g2254
sg76
(lp2282
g69
(g90
g71
NtRp2283
(dp2284
g74
(dp2285
g94
g95
ssg83
g2279
sg76
(lp2286
S'HTTP_ACCEPT_CHARSET'
p2287
asbag69
(g90
g71
NtRp2288
(dp2289
g74
(dp2290
g101
g102
ssg83
g2279
sg76
(lp2291
S':'
asbag69
(g90
g71
NtRp2292
(dp2293
g74
(dp2294
sg83
g2279
sg76
(lp2295
g69
(g70
g71
NtRp2296
(dp2297
g74
(dp2298
g82
I3
ssg83
g2292
sg76
(lp2299
g852
asbasbasbag69
(g85
g71
NtRp2300
(dp2301
g74
(dp2302
sg83
g2254
sg76
(lp2303
g69
(g90
g71
NtRp2304
(dp2305
g74
(dp2306
g94
g95
ssg83
g2300
sg76
(lp2307
S'HTTP_ACCEPT_ENCODING'
p2308
asbag69
(g90
g71
NtRp2309
(dp2310
g74
(dp2311
g101
g102
ssg83
g2300
sg76
(lp2312
S':'
asbag69
(g90
g71
NtRp2313
(dp2314
g74
(dp2315
sg83
g2300
sg76
(lp2316
g69
(g70
g71
NtRp2317
(dp2318
g74
(dp2319
g82
I3
ssg83
g2313
sg76
(lp2320
g874
asbasbasbag69
(g85
g71
NtRp2321
(dp2322
g74
(dp2323
sg83
g2254
sg76
(lp2324
g69
(g90
g71
NtRp2325
(dp2326
g74
(dp2327
g94
g95
ssg83
g2321
sg76
(lp2328
S'HTTP_ACCEPT_LANGUAGE'
p2329
asbag69
(g90
g71
NtRp2330
(dp2331
g74
(dp2332
g101
g102
ssg83
g2321
sg76
(lp2333
S':'
asbag69
(g90
g71
NtRp2334
(dp2335
g74
(dp2336
sg83
g2321
sg76
(lp2337
g69
(g70
g71
NtRp2338
(dp2339
g74
(dp2340
g82
I3
ssg83
g2334
sg76
(lp2341
g896
asbasbasbag69
(g85
g71
NtRp2342
(dp2343
g74
(dp2344
sg83
g2254
sg76
(lp2345
g69
(g90
g71
NtRp2346
(dp2347
g74
(dp2348
g94
g95
ssg83
g2342
sg76
(lp2349
S'HTTP_CONNECTION'
p2350
asbag69
(g90
g71
NtRp2351
(dp2352
g74
(dp2353
g101
g102
ssg83
g2342
sg76
(lp2354
S':'
asbag69
(g90
g71
NtRp2355
(dp2356
g74
(dp2357
sg83
g2342
sg76
(lp2358
g69
(g70
g71
NtRp2359
(dp2360
g74
(dp2361
g82
I3
ssg83
g2355
sg76
(lp2362
g918
asbasbasbag69
(g85
g71
NtRp2363
(dp2364
g74
(dp2365
sg83
g2254
sg76
(lp2366
g69
(g90
g71
NtRp2367
(dp2368
g74
(dp2369
g94
g95
ssg83
g2363
sg76
(lp2370
S'HTTP_COOKIE'
p2371
asbag69
(g90
g71
NtRp2372
(dp2373
g74
(dp2374
g101
g102
ssg83
g2363
sg76
(lp2375
S':'
asbag69
(g90
g71
NtRp2376
(dp2377
g74
(dp2378
sg83
g2363
sg76
(lp2379
g69
(g70
g71
NtRp2380
(dp2381
g74
(dp2382
g82
I3
ssg83
g2376
sg76
(lp2383
g940
asbasbasbag69
(g85
g71
NtRp2384
(dp2385
g74
(dp2386
sg83
g2254
sg76
(lp2387
g69
(g90
g71
NtRp2388
(dp2389
g74
(dp2390
g94
g95
ssg83
g2384
sg76
(lp2391
S'HTTP_HOST'
p2392
asbag69
(g90
g71
NtRp2393
(dp2394
g74
(dp2395
g101
g102
ssg83
g2384
sg76
(lp2396
S':'
asbag69
(g90
g71
NtRp2397
(dp2398
g74
(dp2399
sg83
g2384
sg76
(lp2400
g69
(g70
g71
NtRp2401
(dp2402
g74
(dp2403
g82
I3
ssg83
g2397
sg76
(lp2404
g962
asbasbasbag69
(g85
g71
NtRp2405
(dp2406
g74
(dp2407
sg83
g2254
sg76
(lp2408
g69
(g90
g71
NtRp2409
(dp2410
g74
(dp2411
g94
g95
ssg83
g2405
sg76
(lp2412
S'HTTP_REFERER'
p2413
asbag69
(g90
g71
NtRp2414
(dp2415
g74
(dp2416
g101
g102
ssg83
g2405
sg76
(lp2417
S':'
asbag69
(g90
g71
NtRp2418
(dp2419
g74
(dp2420
sg83
g2405
sg76
(lp2421
g69
(g70
g71
NtRp2422
(dp2423
g74
(dp2424
g82
I3
ssg83
g2418
sg76
(lp2425
g984
asbasbasbag69
(g85
g71
NtRp2426
(dp2427
g74
(dp2428
sg83
g2254
sg76
(lp2429
g69
(g90
g71
NtRp2430
(dp2431
g74
(dp2432
g94
g95
ssg83
g2426
sg76
(lp2433
S'HTTP_USER_AGENT'
p2434
asbag69
(g90
g71
NtRp2435
(dp2436
g74
(dp2437
g101
g102
ssg83
g2426
sg76
(lp2438
S':'
asbag69
(g90
g71
NtRp2439
(dp2440
g74
(dp2441
sg83
g2426
sg76
(lp2442
g69
(g70
g71
NtRp2443
(dp2444
g74
(dp2445
g82
I3
ssg83
g2439
sg76
(lp2446
g1006
asbasbasbag69
(g85
g71
NtRp2447
(dp2448
g74
(dp2449
sg83
g2254
sg76
(lp2450
g69
(g90
g71
NtRp2451
(dp2452
g74
(dp2453
g94
g95
ssg83
g2447
sg76
(lp2454
S'PATH_INFO'
p2455
asbag69
(g90
g71
NtRp2456
(dp2457
g74
(dp2458
g101
g102
ssg83
g2447
sg76
(lp2459
S':'
asbag69
(g90
g71
NtRp2460
(dp2461
g74
(dp2462
sg83
g2447
sg76
(lp2463
g69
(g70
g71
NtRp2464
(dp2465
g74
(dp2466
g82
I3
ssg83
g2460
sg76
(lp2467
g1070
asbasbasbag69
(g85
g71
NtRp2468
(dp2469
g74
(dp2470
sg83
g2254
sg76
(lp2471
g69
(g90
g71
NtRp2472
(dp2473
g74
(dp2474
g94
g95
ssg83
g2468
sg76
(lp2475
S'QUERY_STRING'
p2476
asbag69
(g90
g71
NtRp2477
(dp2478
g74
(dp2479
g101
g102
ssg83
g2468
sg76
(lp2480
S':'
asbag69
(g90
g71
NtRp2481
(dp2482
g74
(dp2483
sg83
g2468
sg76
(lp2484
g69
(g70
g71
NtRp2485
(dp2486
g74
(dp2487
g82
I3
ssg83
g2481
sg76
(lp2488
S''
asbasbasbag69
(g85
g71
NtRp2489
(dp2490
g74
(dp2491
sg83
g2254
sg76
(lp2492
g69
(g90
g71
NtRp2493
(dp2494
g74
(dp2495
g94
g95
ssg83
g2489
sg76
(lp2496
S'REMOTE_ADDR'
p2497
asbag69
(g90
g71
NtRp2498
(dp2499
g74
(dp2500
g101
g102
ssg83
g2489
sg76
(lp2501
S':'
asbag69
(g90
g71
NtRp2502
(dp2503
g74
(dp2504
sg83
g2489
sg76
(lp2505
g69
(g70
g71
NtRp2506
(dp2507
g74
(dp2508
g82
I3
ssg83
g2502
sg76
(lp2509
g202
asbasbasbag69
(g85
g71
NtRp2510
(dp2511
g74
(dp2512
sg83
g2254
sg76
(lp2513
g69
(g90
g71
NtRp2514
(dp2515
g74
(dp2516
g94
g95
ssg83
g2510
sg76
(lp2517
S'REMOTE_PORT'
p2518
asbag69
(g90
g71
NtRp2519
(dp2520
g74
(dp2521
g101
g102
ssg83
g2510
sg76
(lp2522
S':'
asbag69
(g90
g71
NtRp2523
(dp2524
g74
(dp2525
sg83
g2510
sg76
(lp2526
g69
(g70
g71
NtRp2527
(dp2528
g74
(dp2529
g82
I3
ssg83
g2523
sg76
(lp2530
g1134
asbasbasbag69
(g85
g71
NtRp2531
(dp2532
g74
(dp2533
sg83
g2254
sg76
(lp2534
g69
(g90
g71
NtRp2535
(dp2536
g74
(dp2537
g94
g95
ssg83
g2531
sg76
(lp2538
S'REQUEST_METHOD'
p2539
asbag69
(g90
g71
NtRp2540
(dp2541
g74
(dp2542
g101
g102
ssg83
g2531
sg76
(lp2543
S':'
asbag69
(g90
g71
NtRp2544
(dp2545
g74
(dp2546
sg83
g2531
sg76
(lp2547
g69
(g70
g71
NtRp2548
(dp2549
g74
(dp2550
g82
I3
ssg83
g2544
sg76
(lp2551
g1156
asbasbasbag69
(g85
g71
NtRp2552
(dp2553
g74
(dp2554
sg83
g2254
sg76
(lp2555
g69
(g90
g71
NtRp2556
(dp2557
g74
(dp2558
g94
g95
ssg83
g2552
sg76
(lp2559
S'SCRIPT_NAME'
p2560
asbag69
(g90
g71
NtRp2561
(dp2562
g74
(dp2563
g101
g102
ssg83
g2552
sg76
(lp2564
S':'
asbag69
(g90
g71
NtRp2565
(dp2566
g74
(dp2567
sg83
g2552
sg76
(lp2568
g69
(g70
g71
NtRp2569
(dp2570
g74
(dp2571
g82
I3
ssg83
g2565
sg76
(lp2572
S''
asbasbasbag69
(g85
g71
NtRp2573
(dp2574
g74
(dp2575
sg83
g2254
sg76
(lp2576
g69
(g90
g71
NtRp2577
(dp2578
g74
(dp2579
g94
g95
ssg83
g2573
sg76
(lp2580
S'SERVER_NAME'
p2581
asbag69
(g90
g71
NtRp2582
(dp2583
g74
(dp2584
g101
g102
ssg83
g2573
sg76
(lp2585
S':'
asbag69
(g90
g71
NtRp2586
(dp2587
g74
(dp2588
sg83
g2573
sg76
(lp2589
g69
(g70
g71
NtRp2590
(dp2591
g74
(dp2592
g82
I3
ssg83
g2586
sg76
(lp2593
g1199
asbasbasbag69
(g85
g71
NtRp2594
(dp2595
g74
(dp2596
sg83
g2254
sg76
(lp2597
g69
(g90
g71
NtRp2598
(dp2599
g74
(dp2600
g94
g95
ssg83
g2594
sg76
(lp2601
S'SERVER_PORT'
p2602
asbag69
(g90
g71
NtRp2603
(dp2604
g74
(dp2605
g101
g102
ssg83
g2594
sg76
(lp2606
S':'
asbag69
(g90
g71
NtRp2607
(dp2608
g74
(dp2609
sg83
g2594
sg76
(lp2610
g69
(g70
g71
NtRp2611
(dp2612
g74
(dp2613
g82
I3
ssg83
g2607
sg76
(lp2614
g1221
asbasbasbag69
(g85
g71
NtRp2615
(dp2616
g74
(dp2617
sg83
g2254
sg76
(lp2618
g69
(g90
g71
NtRp2619
(dp2620
g74
(dp2621
g94
g95
ssg83
g2615
sg76
(lp2622
S'SERVER_PROTOCOL'
p2623
asbag69
(g90
g71
NtRp2624
(dp2625
g74
(dp2626
g101
g102
ssg83
g2615
sg76
(lp2627
S':'
asbag69
(g90
g71
NtRp2628
(dp2629
g74
(dp2630
sg83
g2615
sg76
(lp2631
g69
(g70
g71
NtRp2632
(dp2633
g74
(dp2634
g82
I3
ssg83
g2628
sg76
(lp2635
g1243
asbasbasbag69
(g85
g71
NtRp2636
(dp2637
g74
(dp2638
sg83
g2254
sg76
(lp2639
g69
(g90
g71
NtRp2640
(dp2641
g74
(dp2642
g94
g95
ssg83
g2636
sg76
(lp2643
S'SERVER_SOFTWARE'
p2644
asbag69
(g90
g71
NtRp2645
(dp2646
g74
(dp2647
g101
g102
ssg83
g2636
sg76
(lp2648
S':'
asbag69
(g90
g71
NtRp2649
(dp2650
g74
(dp2651
sg83
g2636
sg76
(lp2652
g69
(g70
g71
NtRp2653
(dp2654
g74
(dp2655
g82
I3
ssg83
g2649
sg76
(lp2656
g1265
asbasbasbag69
(g85
g71
NtRp2657
(dp2658
g74
(dp2659
sg83
g2254
sg76
(lp2660
g69
(g90
g71
NtRp2661
(dp2662
g74
(dp2663
g94
g95
ssg83
g2657
sg76
(lp2664
S'wsgi.errors'
p2665
asbag69
(g90
g71
NtRp2666
(dp2667
g74
(dp2668
g101
g102
ssg83
g2657
sg76
(lp2669
S':'
asbag69
(g90
g71
NtRp2670
(dp2671
g74
(dp2672
sg83
g2657
sg76
(lp2673
g69
(g70
g71
NtRp2674
(dp2675
g74
(dp2676
g82
I3
ssg83
g2670
sg76
(lp2677
S"<open file '<stderr>', mode 'w' at 0x00A650D0>"
p2678
asbasbasbag69
(g85
g71
NtRp2679
(dp2680
g74
(dp2681
sg83
g2254
sg76
(lp2682
g69
(g90
g71
NtRp2683
(dp2684
g74
(dp2685
g94
g95
ssg83
g2679
sg76
(lp2686
S'wsgi.file_wrapper'
p2687
asbag69
(g90
g71
NtRp2688
(dp2689
g74
(dp2690
g101
g102
ssg83
g2679
sg76
(lp2691
S':'
asbag69
(g90
g71
NtRp2692
(dp2693
g74
(dp2694
sg83
g2679
sg76
(lp2695
g69
(g70
g71
NtRp2696
(dp2697
g74
(dp2698
g82
I3
ssg83
g2692
sg76
(lp2699
S'<class wsgiref.util.FileWrapper at 0x0164ADF8>'
p2700
asbasbasbag69
(g85
g71
NtRp2701
(dp2702
g74
(dp2703
sg83
g2254
sg76
(lp2704
g69
(g90
g71
NtRp2705
(dp2706
g74
(dp2707
g94
g95
ssg83
g2701
sg76
(lp2708
S'wsgi.input'
p2709
asbag69
(g90
g71
NtRp2710
(dp2711
g74
(dp2712
g101
g102
ssg83
g2701
sg76
(lp2713
S':'
asbag69
(g90
g71
NtRp2714
(dp2715
g74
(dp2716
sg83
g2701
sg76
(lp2717
g69
(g70
g71
NtRp2718
(dp2719
g74
(dp2720
g82
I3
ssg83
g2714
sg76
(lp2721
S'<cStringIO.StringO object at 0x0A92A6C0>'
p2722
asbasbasbag69
(g85
g71
NtRp2723
(dp2724
g74
(dp2725
sg83
g2254
sg76
(lp2726
g69
(g90
g71
NtRp2727
(dp2728
g74
(dp2729
g94
g95
ssg83
g2723
sg76
(lp2730
S'wsgi.multiprocess'
p2731
asbag69
(g90
g71
NtRp2732
(dp2733
g74
(dp2734
g101
g102
ssg83
g2723
sg76
(lp2735
S':'
asbag69
(g90
g71
NtRp2736
(dp2737
g74
(dp2738
sg83
g2723
sg76
(lp2739
g69
(g70
g71
NtRp2740
(dp2741
g74
(dp2742
g82
I3
ssg83
g2736
sg76
(lp2743
g112
asbasbasbag69
(g85
g71
NtRp2744
(dp2745
g74
(dp2746
sg83
g2254
sg76
(lp2747
g69
(g90
g71
NtRp2748
(dp2749
g74
(dp2750
g94
g95
ssg83
g2744
sg76
(lp2751
S'wsgi.multithread'
p2752
asbag69
(g90
g71
NtRp2753
(dp2754
g74
(dp2755
g101
g102
ssg83
g2744
sg76
(lp2756
S':'
asbag69
(g90
g71
NtRp2757
(dp2758
g74
(dp2759
sg83
g2744
sg76
(lp2760
g69
(g70
g71
NtRp2761
(dp2762
g74
(dp2763
g82
I3
ssg83
g2757
sg76
(lp2764
g1505
asbasbasbag69
(g85
g71
NtRp2765
(dp2766
g74
(dp2767
sg83
g2254
sg76
(lp2768
g69
(g90
g71
NtRp2769
(dp2770
g74
(dp2771
g94
g95
ssg83
g2765
sg76
(lp2772
S'wsgi.run_once'
p2773
asbag69
(g90
g71
NtRp2774
(dp2775
g74
(dp2776
g101
g102
ssg83
g2765
sg76
(lp2777
S':'
asbag69
(g90
g71
NtRp2778
(dp2779
g74
(dp2780
sg83
g2765
sg76
(lp2781
g69
(g70
g71
NtRp2782
(dp2783
g74
(dp2784
g82
I3
ssg83
g2778
sg76
(lp2785
g112
asbasbasbag69
(g85
g71
NtRp2786
(dp2787
g74
(dp2788
sg83
g2254
sg76
(lp2789
g69
(g90
g71
NtRp2790
(dp2791
g74
(dp2792
g94
g95
ssg83
g2786
sg76
(lp2793
S'wsgi.url_scheme'
p2794
asbag69
(g90
g71
NtRp2795
(dp2796
g74
(dp2797
g101
g102
ssg83
g2786
sg76
(lp2798
S':'
asbag69
(g90
g71
NtRp2799
(dp2800
g74
(dp2801
sg83
g2786
sg76
(lp2802
g69
(g70
g71
NtRp2803
(dp2804
g74
(dp2805
g82
I3
ssg83
g2799
sg76
(lp2806
g1548
asbasbasbag69
(g85
g71
NtRp2807
(dp2808
g74
(dp2809
sg83
g2254
sg76
(lp2810
g69
(g90
g71
NtRp2811
(dp2812
g74
(dp2813
g94
g95
ssg83
g2807
sg76
(lp2814
S'wsgi.version'
p2815
asbag69
(g90
g71
NtRp2816
(dp2817
g74
(dp2818
g101
g102
ssg83
g2807
sg76
(lp2819
S':'
asbag69
(g90
g71
NtRp2820
(dp2821
g74
(dp2822
sg83
g2807
sg76
(lp2823
g69
(g70
g71
NtRp2824
(dp2825
g74
(dp2826
g82
I3
ssg83
g2820
sg76
(lp2827
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2828
(lp2829
(dp2830
S'file'
p2831
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py'
p2832
sS'dump'
p2833
(dp2834
S'code'
p2835
S'\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\''
p2836
sS'layer'
p2837
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p2838
sS'global compile2'
p2839
S'<function compile2>'
p2840
sS'ccode'
p2841
S'undefined'
p2842
ssS'lnum'
p2843
I204
sS'lines'
p2844
(dp2845
I199
S"    environment['__name__'] = '__restricted__'"
p2846
sI200
S'    try:'
p2847
sI201
S'        if type(code) == types.CodeType:'
p2848
sI202
S'            ccode = code'
p2849
sI203
S'        else:'
p2850
sI204
S'            ccode = compile2(code,layer)'
p2851
sI205
S'        exec ccode in environment'
p2852
sI206
S'    except HTTP:'
p2853
sI207
S'        raise'
p2854
sI208
S'    except RestrictedError:'
p2855
ssS'call'
p2856
S'(code=\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, ...}, layer=r\'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py\')'
p2857
sS'func'
p2858
S'restricted'
p2859
sa(dp2860
g2831
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py'
p2861
sg2833
(dp2862
S'builtincompile'
p2863
S'<built-in function compile>'
p2864
sS'code'
p2865
S'\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\''
p2866
sS'code.rstrip'
p2867
S'<built-in method rstrip of str object>'
p2868
sS').replace'
p2869
g2842
sS'layer'
p2870
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p2871
ssg2843
I189
sg2844
(dp2872
I192
S'    """'
p2873
sI193
S'    runs code in environment and returns the output. if an exception occurs'
p2874
sI184
S''
sI185
S'def compile2(code,layer):'
p2875
sI186
S'    """'
p2876
sI187
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p2877
sI188
S'    """'
p2878
sI189
S"    return compile(code.rstrip().replace('\\r\\n','\\n')+'\\n', layer, 'exec')"
p2879
sI190
S''
sI191
S"def restricted(code, environment=None, layer='Unknown'):"
p2880
ssg2856
S'(code=\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\', layer=r\'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py\')'
p2881
sg2858
S'compile2'
p2882
sasS'pyver'
p2883
S'Python 2.7.3: C:\\Python27\\python.exe'
p2884
sS'session'
p2885
g69
(g70
g71
NtRp2886
(dp2887
g74
(dp2888
sg76
(lp2889
g69
(g78
g71
NtRp2890
(dp2891
g74
(dp2892
g82
I5
ssg83
Nsg76
(lp2893
g69
(g85
g71
NtRp2894
(dp2895
g74
(dp2896
sg83
g2890
sg76
(lp2897
g69
(g90
g71
NtRp2898
(dp2899
g74
(dp2900
g94
g95
ssg83
g2894
sg76
(lp2901
S'scrollbarWidth'
p2902
asbag69
(g90
g71
NtRp2903
(dp2904
g74
(dp2905
g101
g102
ssg83
g2894
sg76
(lp2906
S':'
asbag69
(g90
g71
NtRp2907
(dp2908
g74
(dp2909
sg83
g2894
sg76
(lp2910
g69
(g70
g71
NtRp2911
(dp2912
g74
(dp2913
g82
I5
ssg83
g2907
sg76
(lp2914
S'17'
p2915
asbasbasbag69
(g85
g71
NtRp2916
(dp2917
g74
(dp2918
sg83
g2890
sg76
(lp2919
g69
(g90
g71
NtRp2920
(dp2921
g74
(dp2922
g94
g95
ssg83
g2916
sg76
(lp2923
S'textWidthMetric'
p2924
asbag69
(g90
g71
NtRp2925
(dp2926
g74
(dp2927
g101
g102
ssg83
g2916
sg76
(lp2928
S':'
asbag69
(g90
g71
NtRp2929
(dp2930
g74
(dp2931
sg83
g2916
sg76
(lp2932
g69
(g70
g71
NtRp2933
(dp2934
g74
(dp2935
g82
I5
ssg83
g2929
sg76
(lp2936
S'10.0'
p2937
asbasbasbag69
(g85
g71
NtRp2938
(dp2939
g74
(dp2940
sg83
g2890
sg76
(lp2941
g69
(g90
g71
NtRp2942
(dp2943
g74
(dp2944
g94
g95
ssg83
g2938
sg76
(lp2945
S'windowHeight'
p2946
asbag69
(g90
g71
NtRp2947
(dp2948
g74
(dp2949
g101
g102
ssg83
g2938
sg76
(lp2950
S':'
asbag69
(g90
g71
NtRp2951
(dp2952
g74
(dp2953
sg83
g2938
sg76
(lp2954
g69
(g70
g71
NtRp2955
(dp2956
g74
(dp2957
g82
I5
ssg83
g2951
sg76
(lp2958
S'959'
p2959
asbasbasbag69
(g85
g71
NtRp2960
(dp2961
g74
(dp2962
sg83
g2890
sg76
(lp2963
g69
(g90
g71
NtRp2964
(dp2965
g74
(dp2966
g94
g95
ssg83
g2960
sg76
(lp2967
S'windowWidth'
p2968
asbag69
(g90
g71
NtRp2969
(dp2970
g74
(dp2971
g101
g102
ssg83
g2960
sg76
(lp2972
S':'
asbag69
(g90
g71
NtRp2973
(dp2974
g74
(dp2975
sg83
g2960
sg76
(lp2976
g69
(g70
g71
NtRp2977
(dp2978
g74
(dp2979
g82
I5
ssg83
g2973
sg76
(lp2980
S'1680'
p2981
asbasbasbasbasbsS'etype'
p2982
S"<type 'exceptions.IndentationError'>"
p2983
sS'date'
p2984
S'Tue Jul 17 11:03:48 2012'
p2985
sS'response'
p2986
g69
(g70
g71
NtRp2987
(dp2988
g74
(dp2989
sg76
(lp2990
g69
(g78
g71
NtRp2991
(dp2992
g74
(dp2993
g82
I5
ssg83
Nsg76
(lp2994
g69
(g85
g71
NtRp2995
(dp2996
g74
(dp2997
sg83
g2991
sg76
(lp2998
g69
(g90
g71
NtRp2999
(dp3000
g74
(dp3001
g94
g95
ssg83
g2995
sg76
(lp3002
g167
asbag69
(g90
g71
NtRp3003
(dp3004
g74
(dp3005
g101
g102
ssg83
g2995
sg76
(lp3006
S':'
asbag69
(g90
g71
NtRp3007
(dp3008
g74
(dp3009
sg83
g2995
sg76
(lp3010
g69
(g70
g71
NtRp3011
(dp3012
g74
(dp3013
g82
I5
ssg83
g3007
sg76
(lp3014
S'<cStringIO.StringO object at 0x212E3F80>'
p3015
asbasbasbag69
(g85
g71
NtRp3016
(dp3017
g74
(dp3018
sg83
g2991
sg76
(lp3019
g69
(g90
g71
NtRp3020
(dp3021
g74
(dp3022
g94
g95
ssg83
g3016
sg76
(lp3023
g233
asbag69
(g90
g71
NtRp3024
(dp3025
g74
(dp3026
g101
g102
ssg83
g3016
sg76
(lp3027
S':'
asbag69
(g90
g71
NtRp3028
(dp3029
g74
(dp3030
sg83
g3016
sg76
(lp3031
g69
(g70
g71
NtRp3032
(dp3033
g74
(dp3034
g82
I5
ssg83
g3028
sg76
(lp3035
g69
(g78
g71
NtRp3036
(dp3037
g74
(dp3038
g82
I4
ssg83
Nsg76
(lp3039
g69
(g85
g71
NtRp3040
(dp3041
g74
(dp3042
sg83
g3036
sg76
(lp3043
g69
(g90
g71
NtRp3044
(dp3045
g74
(dp3046
g94
g95
ssg83
g3040
sg76
(lp3047
S'session_id_phylografter'
p3048
asbag69
(g90
g71
NtRp3049
(dp3050
g74
(dp3051
g101
g102
ssg83
g3040
sg76
(lp3052
S':'
asbag69
(g90
g71
NtRp3053
(dp3054
g74
(dp3055
sg83
g3040
sg76
(lp3056
g69
(g70
g71
NtRp3057
(dp3058
g74
(dp3059
g82
I4
ssg83
g3053
sg76
(lp3060
g69
(g78
g71
NtRp3061
(dp3062
g74
(dp3063
g82
I3
ssg83
Nsg76
(lp3064
g69
(g85
g71
NtRp3065
(dp3066
g74
(dp3067
sg83
g3061
sg76
(lp3068
g69
(g90
g71
NtRp3069
(dp3070
g74
(dp3071
g94
g95
ssg83
g3065
sg76
(lp3072
g283
asbag69
(g90
g71
NtRp3073
(dp3074
g74
(dp3075
g101
g102
ssg83
g3065
sg76
(lp3076
S':'
asbag69
(g90
g71
NtRp3077
(dp3078
g74
(dp3079
sg83
g3065
sg76
(lp3080
g69
(g70
g71
NtRp3081
(dp3082
g74
(dp3083
g82
I3
ssg83
g3077
sg76
(lp3084
S''
asbasbasbag69
(g85
g71
NtRp3085
(dp3086
g74
(dp3087
sg83
g3061
sg76
(lp3088
g69
(g90
g71
NtRp3089
(dp3090
g74
(dp3091
g94
g95
ssg83
g3085
sg76
(lp3092
g304
asbag69
(g90
g71
NtRp3093
(dp3094
g74
(dp3095
g101
g102
ssg83
g3085
sg76
(lp3096
S':'
asbag69
(g90
g71
NtRp3097
(dp3098
g74
(dp3099
sg83
g3085
sg76
(lp3100
g69
(g70
g71
NtRp3101
(dp3102
g74
(dp3103
g82
I3
ssg83
g3097
sg76
(lp3104
S''
asbasbasbag69
(g85
g71
NtRp3105
(dp3106
g74
(dp3107
sg83
g3061
sg76
(lp3108
g69
(g90
g71
NtRp3109
(dp3110
g74
(dp3111
g94
g95
ssg83
g3105
sg76
(lp3112
g325
asbag69
(g90
g71
NtRp3113
(dp3114
g74
(dp3115
g101
g102
ssg83
g3105
sg76
(lp3116
S':'
asbag69
(g90
g71
NtRp3117
(dp3118
g74
(dp3119
sg83
g3105
sg76
(lp3120
g69
(g70
g71
NtRp3121
(dp3122
g74
(dp3123
g82
I3
ssg83
g3117
sg76
(lp3124
S''
asbasbasbag69
(g85
g71
NtRp3125
(dp3126
g74
(dp3127
sg83
g3061
sg76
(lp3128
g69
(g90
g71
NtRp3129
(dp3130
g74
(dp3131
g94
g95
ssg83
g3125
sg76
(lp3132
g346
asbag69
(g90
g71
NtRp3133
(dp3134
g74
(dp3135
g101
g102
ssg83
g3125
sg76
(lp3136
S':'
asbag69
(g90
g71
NtRp3137
(dp3138
g74
(dp3139
sg83
g3125
sg76
(lp3140
g69
(g70
g71
NtRp3141
(dp3142
g74
(dp3143
g82
I3
ssg83
g3137
sg76
(lp3144
S''
asbasbasbag69
(g85
g71
NtRp3145
(dp3146
g74
(dp3147
sg83
g3061
sg76
(lp3148
g69
(g90
g71
NtRp3149
(dp3150
g74
(dp3151
g94
g95
ssg83
g3145
sg76
(lp3152
g367
asbag69
(g90
g71
NtRp3153
(dp3154
g74
(dp3155
g101
g102
ssg83
g3145
sg76
(lp3156
S':'
asbag69
(g90
g71
NtRp3157
(dp3158
g74
(dp3159
sg83
g3145
sg76
(lp3160
g69
(g70
g71
NtRp3161
(dp3162
g74
(dp3163
g82
I3
ssg83
g3157
sg76
(lp3164
S''
asbasbasbag69
(g85
g71
NtRp3165
(dp3166
g74
(dp3167
sg83
g3061
sg76
(lp3168
g69
(g90
g71
NtRp3169
(dp3170
g74
(dp3171
g94
g95
ssg83
g3165
sg76
(lp3172
g388
asbag69
(g90
g71
NtRp3173
(dp3174
g74
(dp3175
g101
g102
ssg83
g3165
sg76
(lp3176
S':'
asbag69
(g90
g71
NtRp3177
(dp3178
g74
(dp3179
sg83
g3165
sg76
(lp3180
g69
(g70
g71
NtRp3181
(dp3182
g74
(dp3183
g82
I3
ssg83
g3177
sg76
(lp3184
S'/'
asbasbasbag69
(g85
g71
NtRp3185
(dp3186
g74
(dp3187
sg83
g3061
sg76
(lp3188
g69
(g90
g71
NtRp3189
(dp3190
g74
(dp3191
g94
g95
ssg83
g3185
sg76
(lp3192
g409
asbag69
(g90
g71
NtRp3193
(dp3194
g74
(dp3195
g101
g102
ssg83
g3185
sg76
(lp3196
S':'
asbag69
(g90
g71
NtRp3197
(dp3198
g74
(dp3199
sg83
g3185
sg76
(lp3200
g69
(g70
g71
NtRp3201
(dp3202
g74
(dp3203
g82
I3
ssg83
g3197
sg76
(lp3204
S''
asbasbasbag69
(g85
g71
NtRp3205
(dp3206
g74
(dp3207
sg83
g3061
sg76
(lp3208
g69
(g90
g71
NtRp3209
(dp3210
g74
(dp3211
g94
g95
ssg83
g3205
sg76
(lp3212
g430
asbag69
(g90
g71
NtRp3213
(dp3214
g74
(dp3215
g101
g102
ssg83
g3205
sg76
(lp3216
S':'
asbag69
(g90
g71
NtRp3217
(dp3218
g74
(dp3219
sg83
g3205
sg76
(lp3220
g69
(g70
g71
NtRp3221
(dp3222
g74
(dp3223
g82
I3
ssg83
g3217
sg76
(lp3224
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3225
(dp3226
g74
(dp3227
sg83
g2991
sg76
(lp3228
g69
(g90
g71
NtRp3229
(dp3230
g74
(dp3231
g94
g95
ssg83
g3225
sg76
(lp3232
S'delimiters'
p3233
asbag69
(g90
g71
NtRp3234
(dp3235
g74
(dp3236
g101
g102
ssg83
g3225
sg76
(lp3237
S':'
asbag69
(g90
g71
NtRp3238
(dp3239
g74
(dp3240
sg83
g3225
sg76
(lp3241
g69
(g70
g71
NtRp3242
(dp3243
g74
(dp3244
g82
I5
ssg83
g3238
sg76
(lp3245
g69
(g78
g71
NtRp3246
(dp3247
g74
(dp3248
g82
I4
ssg83
Nsg76
(lp3249
g69
(g85
g71
NtRp3250
(dp3251
g74
(dp3252
sg83
g3246
sg76
(lp3253
g69
(g90
g71
NtRp3254
(dp3255
g74
(dp3256
sg83
g3250
sg76
(lp3257
g69
(g70
g71
NtRp3258
(dp3259
g74
(dp3260
g82
I4
ssg83
g3254
sg76
(lp3261
S'{{'
p3262
asbasbasbag69
(g85
g71
NtRp3263
(dp3264
g74
(dp3265
sg83
g3246
sg76
(lp3266
g69
(g90
g71
NtRp3267
(dp3268
g74
(dp3269
sg83
g3263
sg76
(lp3270
g69
(g70
g71
NtRp3271
(dp3272
g74
(dp3273
g82
I4
ssg83
g3267
sg76
(lp3274
S'}}'
p3275
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3276
(dp3277
g74
(dp3278
sg83
g2991
sg76
(lp3279
g69
(g90
g71
NtRp3280
(dp3281
g74
(dp3282
g94
g95
ssg83
g3276
sg76
(lp3283
S'files'
p3284
asbag69
(g90
g71
NtRp3285
(dp3286
g74
(dp3287
g101
g102
ssg83
g3276
sg76
(lp3288
S':'
asbag69
(g90
g71
NtRp3289
(dp3290
g74
(dp3291
sg83
g3276
sg76
(lp3292
g69
(g70
g71
NtRp3293
(dp3294
g74
(dp3295
g82
I5
ssg83
g3289
sg76
(lp3296
g69
(g78
g71
NtRp3297
(dp3298
g74
(dp3299
g82
I4
ssg83
Nsg76
(lp3300
sbasbasbasbag69
(g85
g71
NtRp3301
(dp3302
g74
(dp3303
sg83
g2991
sg76
(lp3304
g69
(g90
g71
NtRp3305
(dp3306
g74
(dp3307
g94
g95
ssg83
g3301
sg76
(lp3308
S'flash'
p3309
asbag69
(g90
g71
NtRp3310
(dp3311
g74
(dp3312
g101
g102
ssg83
g3301
sg76
(lp3313
S':'
asbag69
(g90
g71
NtRp3314
(dp3315
g74
(dp3316
sg83
g3301
sg76
(lp3317
g69
(g70
g71
NtRp3318
(dp3319
g74
(dp3320
g82
I5
ssg83
g3314
sg76
(lp3321
S''
asbasbasbag69
(g85
g71
NtRp3322
(dp3323
g74
(dp3324
sg83
g2991
sg76
(lp3325
g69
(g90
g71
NtRp3326
(dp3327
g74
(dp3328
g94
g95
ssg83
g3322
sg76
(lp3329
S'generic_patterns'
p3330
asbag69
(g90
g71
NtRp3331
(dp3332
g74
(dp3333
g101
g102
ssg83
g3322
sg76
(lp3334
S':'
asbag69
(g90
g71
NtRp3335
(dp3336
g74
(dp3337
sg83
g3322
sg76
(lp3338
g69
(g70
g71
NtRp3339
(dp3340
g74
(dp3341
g82
I5
ssg83
g3335
sg76
(lp3342
g69
(g78
g71
NtRp3343
(dp3344
g74
(dp3345
g82
I4
ssg83
Nsg76
(lp3346
sbasbasbasbag69
(g85
g71
NtRp3347
(dp3348
g74
(dp3349
sg83
g2991
sg76
(lp3350
g69
(g90
g71
NtRp3351
(dp3352
g74
(dp3353
g94
g95
ssg83
g3347
sg76
(lp3354
S'headers'
p3355
asbag69
(g90
g71
NtRp3356
(dp3357
g74
(dp3358
g101
g102
ssg83
g3347
sg76
(lp3359
S':'
asbag69
(g90
g71
NtRp3360
(dp3361
g74
(dp3362
sg83
g3347
sg76
(lp3363
g69
(g70
g71
NtRp3364
(dp3365
g74
(dp3366
g82
I5
ssg83
g3360
sg76
(lp3367
g69
(g78
g71
NtRp3368
(dp3369
g74
(dp3370
g82
I4
ssg83
Nsg76
(lp3371
g69
(g85
g71
NtRp3372
(dp3373
g74
(dp3374
sg83
g3368
sg76
(lp3375
g69
(g90
g71
NtRp3376
(dp3377
g74
(dp3378
g94
g95
ssg83
g3372
sg76
(lp3379
S'Cache-Control'
p3380
asbag69
(g90
g71
NtRp3381
(dp3382
g74
(dp3383
g101
g102
ssg83
g3372
sg76
(lp3384
S':'
asbag69
(g90
g71
NtRp3385
(dp3386
g74
(dp3387
sg83
g3372
sg76
(lp3388
g69
(g70
g71
NtRp3389
(dp3390
g74
(dp3391
g82
I4
ssg83
g3385
sg76
(lp3392
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3393
asbasbasbag69
(g85
g71
NtRp3394
(dp3395
g74
(dp3396
sg83
g3368
sg76
(lp3397
g69
(g90
g71
NtRp3398
(dp3399
g74
(dp3400
g94
g95
ssg83
g3394
sg76
(lp3401
S'Content-Type'
p3402
asbag69
(g90
g71
NtRp3403
(dp3404
g74
(dp3405
g101
g102
ssg83
g3394
sg76
(lp3406
S':'
asbag69
(g90
g71
NtRp3407
(dp3408
g74
(dp3409
sg83
g3394
sg76
(lp3410
g69
(g70
g71
NtRp3411
(dp3412
g74
(dp3413
g82
I4
ssg83
g3407
sg76
(lp3414
S'text/html; charset=utf-8'
p3415
asbasbasbag69
(g85
g71
NtRp3416
(dp3417
g74
(dp3418
sg83
g3368
sg76
(lp3419
g69
(g90
g71
NtRp3420
(dp3421
g74
(dp3422
g94
g95
ssg83
g3416
sg76
(lp3423
S'Expires'
p3424
asbag69
(g90
g71
NtRp3425
(dp3426
g74
(dp3427
g101
g102
ssg83
g3416
sg76
(lp3428
S':'
asbag69
(g90
g71
NtRp3429
(dp3430
g74
(dp3431
sg83
g3416
sg76
(lp3432
g69
(g70
g71
NtRp3433
(dp3434
g74
(dp3435
g82
I4
ssg83
g3429
sg76
(lp3436
S'Tue, 17 Jul 2012 16:03:47 GMT'
p3437
asbasbasbag69
(g85
g71
NtRp3438
(dp3439
g74
(dp3440
sg83
g3368
sg76
(lp3441
g69
(g90
g71
NtRp3442
(dp3443
g74
(dp3444
g94
g95
ssg83
g3438
sg76
(lp3445
S'Pragma'
p3446
asbag69
(g90
g71
NtRp3447
(dp3448
g74
(dp3449
g101
g102
ssg83
g3438
sg76
(lp3450
S':'
asbag69
(g90
g71
NtRp3451
(dp3452
g74
(dp3453
sg83
g3438
sg76
(lp3454
g69
(g70
g71
NtRp3455
(dp3456
g74
(dp3457
g82
I4
ssg83
g3451
sg76
(lp3458
S'no-cache'
p3459
asbasbasbag69
(g85
g71
NtRp3460
(dp3461
g74
(dp3462
sg83
g3368
sg76
(lp3463
g69
(g90
g71
NtRp3464
(dp3465
g74
(dp3466
g94
g95
ssg83
g3460
sg76
(lp3467
S'X-Powered-By'
p3468
asbag69
(g90
g71
NtRp3469
(dp3470
g74
(dp3471
g101
g102
ssg83
g3460
sg76
(lp3472
S':'
asbag69
(g90
g71
NtRp3473
(dp3474
g74
(dp3475
sg83
g3460
sg76
(lp3476
g69
(g70
g71
NtRp3477
(dp3478
g74
(dp3479
g82
I4
ssg83
g3473
sg76
(lp3480
S'web2py'
p3481
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3482
(dp3483
g74
(dp3484
sg83
g2991
sg76
(lp3485
g69
(g90
g71
NtRp3486
(dp3487
g74
(dp3488
g94
g95
ssg83
g3482
sg76
(lp3489
S'menu'
p3490
asbag69
(g90
g71
NtRp3491
(dp3492
g74
(dp3493
g101
g102
ssg83
g3482
sg76
(lp3494
S':'
asbag69
(g90
g71
NtRp3495
(dp3496
g74
(dp3497
sg83
g3482
sg76
(lp3498
g69
(g70
g71
NtRp3499
(dp3500
g74
(dp3501
g82
I5
ssg83
g3495
sg76
(lp3502
g69
(g78
g71
NtRp3503
(dp3504
g74
(dp3505
g82
I4
ssg83
Nsg76
(lp3506
g69
(g85
g71
NtRp3507
(dp3508
g74
(dp3509
sg83
g3503
sg76
(lp3510
g69
(g90
g71
NtRp3511
(dp3512
g74
(dp3513
sg83
g3507
sg76
(lp3514
g69
(g70
g71
NtRp3515
(dp3516
g74
(dp3517
g82
I4
ssg83
g3511
sg76
(lp3518
g69
(g78
g71
NtRp3519
(dp3520
g74
(dp3521
g82
I3
ssg83
Nsg76
(lp3522
g69
(g85
g71
NtRp3523
(dp3524
g74
(dp3525
sg83
g3519
sg76
(lp3526
g69
(g90
g71
NtRp3527
(dp3528
g74
(dp3529
sg83
g3523
sg76
(lp3530
g69
(g70
g71
NtRp3531
(dp3532
g74
(dp3533
g82
I3
ssg83
g3527
sg76
(lp3534
cgluon.languages
lazyT_unpickle
p3535
(S't\x04\x00\x00\x00Home'
tRp3536
asbasbasbag69
(g85
g71
NtRp3537
(dp3538
g74
(dp3539
sg83
g3519
sg76
(lp3540
g69
(g90
g71
NtRp3541
(dp3542
g74
(dp3543
sg83
g3537
sg76
(lp3544
g69
(g70
g71
NtRp3545
(dp3546
g74
(dp3547
g82
I3
ssg83
g3541
sg76
(lp3548
g112
asbasbasbag69
(g85
g71
NtRp3549
(dp3550
g74
(dp3551
sg83
g3519
sg76
(lp3552
g69
(g90
g71
NtRp3553
(dp3554
g74
(dp3555
sg83
g3549
sg76
(lp3556
g69
(g70
g71
NtRp3557
(dp3558
g74
(dp3559
g82
I3
ssg83
g3553
sg76
(lp3560
S'/Phylografter/default/index'
p3561
asbasbasbag69
(g85
g71
NtRp3562
(dp3563
g74
(dp3564
sg83
g3519
sg76
(lp3565
g69
(g90
g71
NtRp3566
(dp3567
g74
(dp3568
sg83
g3562
sg76
(lp3569
g69
(g70
g71
NtRp3570
(dp3571
g74
(dp3572
g82
I3
ssg83
g3566
sg76
(lp3573
g69
(g78
g71
NtRp3574
(dp3575
g74
(dp3576
g82
I2
ssg83
Nsg76
(lp3577
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3578
(dp3579
g74
(dp3580
sg83
g3503
sg76
(lp3581
g69
(g90
g71
NtRp3582
(dp3583
g74
(dp3584
sg83
g3578
sg76
(lp3585
g69
(g70
g71
NtRp3586
(dp3587
g74
(dp3588
g82
I4
ssg83
g3582
sg76
(lp3589
g69
(g78
g71
NtRp3590
(dp3591
g74
(dp3592
g82
I3
ssg83
Nsg76
(lp3593
g69
(g85
g71
NtRp3594
(dp3595
g74
(dp3596
sg83
g3590
sg76
(lp3597
g69
(g90
g71
NtRp3598
(dp3599
g74
(dp3600
sg83
g3594
sg76
(lp3601
g69
(g70
g71
NtRp3602
(dp3603
g74
(dp3604
g82
I3
ssg83
g3598
sg76
(lp3605
g3535
(S't\x04\x00\x00\x00Taxa'
tRp3606
asbasbasbag69
(g85
g71
NtRp3607
(dp3608
g74
(dp3609
sg83
g3590
sg76
(lp3610
g69
(g90
g71
NtRp3611
(dp3612
g74
(dp3613
sg83
g3607
sg76
(lp3614
g69
(g70
g71
NtRp3615
(dp3616
g74
(dp3617
g82
I3
ssg83
g3611
sg76
(lp3618
g112
asbasbasbag69
(g85
g71
NtRp3619
(dp3620
g74
(dp3621
sg83
g3590
sg76
(lp3622
g69
(g90
g71
NtRp3623
(dp3624
g74
(dp3625
sg83
g3619
sg76
(lp3626
g69
(g70
g71
NtRp3627
(dp3628
g74
(dp3629
g82
I3
ssg83
g3623
sg76
(lp3630
S'/Phylografter/taxon/index'
p3631
asbasbasbag69
(g85
g71
NtRp3632
(dp3633
g74
(dp3634
sg83
g3590
sg76
(lp3635
g69
(g90
g71
NtRp3636
(dp3637
g74
(dp3638
sg83
g3632
sg76
(lp3639
g69
(g70
g71
NtRp3640
(dp3641
g74
(dp3642
g82
I3
ssg83
g3636
sg76
(lp3643
g69
(g78
g71
NtRp3644
(dp3645
g74
(dp3646
g82
I2
ssg83
Nsg76
(lp3647
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3648
(dp3649
g74
(dp3650
sg83
g3503
sg76
(lp3651
g69
(g90
g71
NtRp3652
(dp3653
g74
(dp3654
sg83
g3648
sg76
(lp3655
g69
(g70
g71
NtRp3656
(dp3657
g74
(dp3658
g82
I4
ssg83
g3652
sg76
(lp3659
g69
(g78
g71
NtRp3660
(dp3661
g74
(dp3662
g82
I3
ssg83
Nsg76
(lp3663
g69
(g85
g71
NtRp3664
(dp3665
g74
(dp3666
sg83
g3660
sg76
(lp3667
g69
(g90
g71
NtRp3668
(dp3669
g74
(dp3670
sg83
g3664
sg76
(lp3671
g69
(g70
g71
NtRp3672
(dp3673
g74
(dp3674
g82
I3
ssg83
g3668
sg76
(lp3675
g3535
(S't\x07\x00\x00\x00Studies'
tRp3676
asbasbasbag69
(g85
g71
NtRp3677
(dp3678
g74
(dp3679
sg83
g3660
sg76
(lp3680
g69
(g90
g71
NtRp3681
(dp3682
g74
(dp3683
sg83
g3677
sg76
(lp3684
g69
(g70
g71
NtRp3685
(dp3686
g74
(dp3687
g82
I3
ssg83
g3681
sg76
(lp3688
g112
asbasbasbag69
(g85
g71
NtRp3689
(dp3690
g74
(dp3691
sg83
g3660
sg76
(lp3692
g69
(g90
g71
NtRp3693
(dp3694
g74
(dp3695
sg83
g3689
sg76
(lp3696
g69
(g70
g71
NtRp3697
(dp3698
g74
(dp3699
g82
I3
ssg83
g3693
sg76
(lp3700
S'/Phylografter/study/index'
p3701
asbasbasbag69
(g85
g71
NtRp3702
(dp3703
g74
(dp3704
sg83
g3660
sg76
(lp3705
g69
(g90
g71
NtRp3706
(dp3707
g74
(dp3708
sg83
g3702
sg76
(lp3709
g69
(g70
g71
NtRp3710
(dp3711
g74
(dp3712
g82
I3
ssg83
g3706
sg76
(lp3713
g69
(g78
g71
NtRp3714
(dp3715
g74
(dp3716
g82
I2
ssg83
Nsg76
(lp3717
g69
(g85
g71
NtRp3718
(dp3719
g74
(dp3720
sg83
g3714
sg76
(lp3721
g69
(g90
g71
NtRp3722
(dp3723
g74
(dp3724
sg83
g3718
sg76
(lp3725
g69
(g70
g71
NtRp3726
(dp3727
g74
(dp3728
g82
I2
ssg83
g3722
sg76
(lp3729
g69
(g78
g71
NtRp3730
(dp3731
g74
(dp3732
g82
I1
ssg83
Nsg76
(lp3733
g69
(g85
g71
NtRp3734
(dp3735
g74
(dp3736
sg83
g3730
sg76
(lp3737
g69
(g90
g71
NtRp3738
(dp3739
g74
(dp3740
sg83
g3734
sg76
(lp3741
g69
(g70
g71
NtRp3742
(dp3743
g74
(dp3744
g82
I1
ssg83
g3738
sg76
(lp3745
S'New study'
p3746
asbasbasbag69
(g85
g71
NtRp3747
(dp3748
g74
(dp3749
sg83
g3730
sg76
(lp3750
g69
(g90
g71
NtRp3751
(dp3752
g74
(dp3753
sg83
g3747
sg76
(lp3754
g69
(g70
g71
NtRp3755
(dp3756
g74
(dp3757
g82
I1
ssg83
g3751
sg76
(lp3758
I00
asbasbasbag69
(g85
g71
NtRp3759
(dp3760
g74
(dp3761
sg83
g3730
sg76
(lp3762
g69
(g90
g71
NtRp3763
(dp3764
g74
(dp3765
sg83
g3759
sg76
(lp3766
g69
(g70
g71
NtRp3767
(dp3768
g74
(dp3769
g82
I1
ssg83
g3763
sg76
(lp3770
S'/Phylografter/study/create'
p3771
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3772
(dp3773
g74
(dp3774
sg83
g3714
sg76
(lp3775
g69
(g90
g71
NtRp3776
(dp3777
g74
(dp3778
sg83
g3772
sg76
(lp3779
g69
(g70
g71
NtRp3780
(dp3781
g74
(dp3782
g82
I2
ssg83
g3776
sg76
(lp3783
g69
(g78
g71
NtRp3784
(dp3785
g74
(dp3786
g82
I1
ssg83
Nsg76
(lp3787
g69
(g85
g71
NtRp3788
(dp3789
g74
(dp3790
sg83
g3784
sg76
(lp3791
g69
(g90
g71
NtRp3792
(dp3793
g74
(dp3794
sg83
g3788
sg76
(lp3795
g69
(g70
g71
NtRp3796
(dp3797
g74
(dp3798
g82
I1
ssg83
g3792
sg76
(lp3799
S'Import from TreeBASE'
p3800
asbasbasbag69
(g85
g71
NtRp3801
(dp3802
g74
(dp3803
sg83
g3784
sg76
(lp3804
g69
(g90
g71
NtRp3805
(dp3806
g74
(dp3807
sg83
g3801
sg76
(lp3808
g69
(g70
g71
NtRp3809
(dp3810
g74
(dp3811
g82
I1
ssg83
g3805
sg76
(lp3812
I00
asbasbasbag69
(g85
g71
NtRp3813
(dp3814
g74
(dp3815
sg83
g3784
sg76
(lp3816
g69
(g90
g71
NtRp3817
(dp3818
g74
(dp3819
sg83
g3813
sg76
(lp3820
g69
(g70
g71
NtRp3821
(dp3822
g74
(dp3823
g82
I1
ssg83
g3817
sg76
(lp3824
S'/Phylografter/study/tbimport'
p3825
asbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3826
(dp3827
g74
(dp3828
sg83
g3503
sg76
(lp3829
g69
(g90
g71
NtRp3830
(dp3831
g74
(dp3832
sg83
g3826
sg76
(lp3833
g69
(g70
g71
NtRp3834
(dp3835
g74
(dp3836
g82
I4
ssg83
g3830
sg76
(lp3837
g69
(g78
g71
NtRp3838
(dp3839
g74
(dp3840
g82
I3
ssg83
Nsg76
(lp3841
g69
(g85
g71
NtRp3842
(dp3843
g74
(dp3844
sg83
g3838
sg76
(lp3845
g69
(g90
g71
NtRp3846
(dp3847
g74
(dp3848
sg83
g3842
sg76
(lp3849
g69
(g70
g71
NtRp3850
(dp3851
g74
(dp3852
g82
I3
ssg83
g3846
sg76
(lp3853
g3535
(S's\x0c\x00\x00\x00Source Trees'
tRp3854
asbasbasbag69
(g85
g71
NtRp3855
(dp3856
g74
(dp3857
sg83
g3838
sg76
(lp3858
g69
(g90
g71
NtRp3859
(dp3860
g74
(dp3861
sg83
g3855
sg76
(lp3862
g69
(g70
g71
NtRp3863
(dp3864
g74
(dp3865
g82
I3
ssg83
g3859
sg76
(lp3866
g112
asbasbasbag69
(g85
g71
NtRp3867
(dp3868
g74
(dp3869
sg83
g3838
sg76
(lp3870
g69
(g90
g71
NtRp3871
(dp3872
g74
(dp3873
sg83
g3867
sg76
(lp3874
g69
(g70
g71
NtRp3875
(dp3876
g74
(dp3877
g82
I3
ssg83
g3871
sg76
(lp3878
S'/Phylografter/stree/index'
p3879
asbasbasbag69
(g85
g71
NtRp3880
(dp3881
g74
(dp3882
sg83
g3838
sg76
(lp3883
g69
(g90
g71
NtRp3884
(dp3885
g74
(dp3886
sg83
g3880
sg76
(lp3887
g69
(g70
g71
NtRp3888
(dp3889
g74
(dp3890
g82
I3
ssg83
g3884
sg76
(lp3891
g69
(g78
g71
NtRp3892
(dp3893
g74
(dp3894
g82
I2
ssg83
Nsg76
(lp3895
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3896
(dp3897
g74
(dp3898
sg83
g3503
sg76
(lp3899
g69
(g90
g71
NtRp3900
(dp3901
g74
(dp3902
sg83
g3896
sg76
(lp3903
g69
(g70
g71
NtRp3904
(dp3905
g74
(dp3906
g82
I4
ssg83
g3900
sg76
(lp3907
g69
(g78
g71
NtRp3908
(dp3909
g74
(dp3910
g82
I3
ssg83
Nsg76
(lp3911
g69
(g85
g71
NtRp3912
(dp3913
g74
(dp3914
sg83
g3908
sg76
(lp3915
g69
(g90
g71
NtRp3916
(dp3917
g74
(dp3918
sg83
g3912
sg76
(lp3919
g69
(g70
g71
NtRp3920
(dp3921
g74
(dp3922
g82
I3
ssg83
g3916
sg76
(lp3923
g3535
(S's\r\x00\x00\x00Grafted Trees'
tRp3924
asbasbasbag69
(g85
g71
NtRp3925
(dp3926
g74
(dp3927
sg83
g3908
sg76
(lp3928
g69
(g90
g71
NtRp3929
(dp3930
g74
(dp3931
sg83
g3925
sg76
(lp3932
g69
(g70
g71
NtRp3933
(dp3934
g74
(dp3935
g82
I3
ssg83
g3929
sg76
(lp3936
g112
asbasbasbag69
(g85
g71
NtRp3937
(dp3938
g74
(dp3939
sg83
g3908
sg76
(lp3940
g69
(g90
g71
NtRp3941
(dp3942
g74
(dp3943
sg83
g3937
sg76
(lp3944
g69
(g70
g71
NtRp3945
(dp3946
g74
(dp3947
g82
I3
ssg83
g3941
sg76
(lp3948
S'/Phylografter/gtree/index'
p3949
asbasbasbag69
(g85
g71
NtRp3950
(dp3951
g74
(dp3952
sg83
g3908
sg76
(lp3953
g69
(g90
g71
NtRp3954
(dp3955
g74
(dp3956
sg83
g3950
sg76
(lp3957
g69
(g70
g71
NtRp3958
(dp3959
g74
(dp3960
g82
I3
ssg83
g3954
sg76
(lp3961
g69
(g78
g71
NtRp3962
(dp3963
g74
(dp3964
g82
I2
ssg83
Nsg76
(lp3965
sbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3966
(dp3967
g74
(dp3968
sg83
g2991
sg76
(lp3969
g69
(g90
g71
NtRp3970
(dp3971
g74
(dp3972
g94
g95
ssg83
g3966
sg76
(lp3973
S'meta'
p3974
asbag69
(g90
g71
NtRp3975
(dp3976
g74
(dp3977
g101
g102
ssg83
g3966
sg76
(lp3978
S':'
asbag69
(g90
g71
NtRp3979
(dp3980
g74
(dp3981
sg83
g3966
sg76
(lp3982
g69
(g70
g71
NtRp3983
(dp3984
g74
(dp3985
g82
I5
ssg83
g3979
sg76
(lp3986
g69
(g78
g71
NtRp3987
(dp3988
g74
(dp3989
g82
I4
ssg83
Nsg76
(lp3990
g69
(g85
g71
NtRp3991
(dp3992
g74
(dp3993
sg83
g3987
sg76
(lp3994
g69
(g90
g71
NtRp3995
(dp3996
g74
(dp3997
g94
g95
ssg83
g3991
sg76
(lp3998
S'author'
p3999
asbag69
(g90
g71
NtRp4000
(dp4001
g74
(dp4002
g101
g102
ssg83
g3991
sg76
(lp4003
S':'
asbag69
(g90
g71
NtRp4004
(dp4005
g74
(dp4006
sg83
g3991
sg76
(lp4007
g69
(g70
g71
NtRp4008
(dp4009
g74
(dp4010
g82
I4
ssg83
g4004
sg76
(lp4011
S'Richard Ree'
p4012
asbasbasbag69
(g85
g71
NtRp4013
(dp4014
g74
(dp4015
sg83
g3987
sg76
(lp4016
g69
(g90
g71
NtRp4017
(dp4018
g74
(dp4019
g94
g95
ssg83
g4013
sg76
(lp4020
S'copyright'
p4021
asbag69
(g90
g71
NtRp4022
(dp4023
g74
(dp4024
g101
g102
ssg83
g4013
sg76
(lp4025
S':'
asbag69
(g90
g71
NtRp4026
(dp4027
g74
(dp4028
sg83
g4013
sg76
(lp4029
g69
(g70
g71
NtRp4030
(dp4031
g74
(dp4032
g82
I4
ssg83
g4026
sg76
(lp4033
S'Copyright 2007-2010'
p4034
asbasbasbag69
(g85
g71
NtRp4035
(dp4036
g74
(dp4037
sg83
g3987
sg76
(lp4038
g69
(g90
g71
NtRp4039
(dp4040
g74
(dp4041
g94
g95
ssg83
g4035
sg76
(lp4042
S'description'
p4043
asbag69
(g90
g71
NtRp4044
(dp4045
g74
(dp4046
g101
g102
ssg83
g4035
sg76
(lp4047
S':'
asbag69
(g90
g71
NtRp4048
(dp4049
g74
(dp4050
sg83
g4035
sg76
(lp4051
g69
(g70
g71
NtRp4052
(dp4053
g74
(dp4054
g82
I4
ssg83
g4048
sg76
(lp4055
S'Phylografter: Angiosperm phylogeny database'
p4056
asbasbasbag69
(g85
g71
NtRp4057
(dp4058
g74
(dp4059
sg83
g3987
sg76
(lp4060
g69
(g90
g71
NtRp4061
(dp4062
g74
(dp4063
g94
g95
ssg83
g4057
sg76
(lp4064
S'generator'
p4065
asbag69
(g90
g71
NtRp4066
(dp4067
g74
(dp4068
g101
g102
ssg83
g4057
sg76
(lp4069
S':'
asbag69
(g90
g71
NtRp4070
(dp4071
g74
(dp4072
sg83
g4057
sg76
(lp4073
g69
(g70
g71
NtRp4074
(dp4075
g74
(dp4076
g82
I4
ssg83
g4070
sg76
(lp4077
S'Web2py Enterprise Framework'
p4078
asbasbasbag69
(g85
g71
NtRp4079
(dp4080
g74
(dp4081
sg83
g3987
sg76
(lp4082
g69
(g90
g71
NtRp4083
(dp4084
g74
(dp4085
g94
g95
ssg83
g4079
sg76
(lp4086
S'keywords'
p4087
asbag69
(g90
g71
NtRp4088
(dp4089
g74
(dp4090
g101
g102
ssg83
g4079
sg76
(lp4091
S':'
asbag69
(g90
g71
NtRp4092
(dp4093
g74
(dp4094
sg83
g4079
sg76
(lp4095
g69
(g70
g71
NtRp4096
(dp4097
g74
(dp4098
g82
I4
ssg83
g4092
sg76
(lp4099
S'flowering plants, phylogeny, web2py, python, framework'
p4100
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4101
(dp4102
g74
(dp4103
sg83
g2991
sg76
(lp4104
g69
(g90
g71
NtRp4105
(dp4106
g74
(dp4107
g94
g95
ssg83
g4101
sg76
(lp4108
S'postprocessing'
p4109
asbag69
(g90
g71
NtRp4110
(dp4111
g74
(dp4112
g101
g102
ssg83
g4101
sg76
(lp4113
S':'
asbag69
(g90
g71
NtRp4114
(dp4115
g74
(dp4116
sg83
g4101
sg76
(lp4117
g69
(g70
g71
NtRp4118
(dp4119
g74
(dp4120
g82
I5
ssg83
g4114
sg76
(lp4121
g69
(g78
g71
NtRp4122
(dp4123
g74
(dp4124
g82
I4
ssg83
Nsg76
(lp4125
sbasbasbasbag69
(g85
g71
NtRp4126
(dp4127
g74
(dp4128
sg83
g2991
sg76
(lp4129
g69
(g90
g71
NtRp4130
(dp4131
g74
(dp4132
g94
g95
ssg83
g4126
sg76
(lp4133
S'session_file'
p4134
asbag69
(g90
g71
NtRp4135
(dp4136
g74
(dp4137
g101
g102
ssg83
g4126
sg76
(lp4138
S':'
asbag69
(g90
g71
NtRp4139
(dp4140
g74
(dp4141
sg83
g4126
sg76
(lp4142
g69
(g70
g71
NtRp4143
(dp4144
g74
(dp4145
g82
I5
ssg83
g4139
sg76
(lp4146
S"<open file 'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-6af658a1-9890-462f-a9ae-2fb92424f1e9', mode 'rb+' at 0x01A7F020>"
p4147
asbasbasbag69
(g85
g71
NtRp4148
(dp4149
g74
(dp4150
sg83
g2991
sg76
(lp4151
g69
(g90
g71
NtRp4152
(dp4153
g74
(dp4154
g94
g95
ssg83
g4148
sg76
(lp4155
S'session_filename'
p4156
asbag69
(g90
g71
NtRp4157
(dp4158
g74
(dp4159
g101
g102
ssg83
g4148
sg76
(lp4160
S':'
asbag69
(g90
g71
NtRp4161
(dp4162
g74
(dp4163
sg83
g4148
sg76
(lp4164
g69
(g70
g71
NtRp4165
(dp4166
g74
(dp4167
g82
I5
ssg83
g4161
sg76
(lp4168
S'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\sessions\\127.0.0.1-6af658a1-9890-462f-a9ae-2fb92424f1e9'
p4169
asbasbasbag69
(g85
g71
NtRp4170
(dp4171
g74
(dp4172
sg83
g2991
sg76
(lp4173
g69
(g90
g71
NtRp4174
(dp4175
g74
(dp4176
g94
g95
ssg83
g4170
sg76
(lp4177
S'session_id'
p4178
asbag69
(g90
g71
NtRp4179
(dp4180
g74
(dp4181
g101
g102
ssg83
g4170
sg76
(lp4182
S':'
asbag69
(g90
g71
NtRp4183
(dp4184
g74
(dp4185
sg83
g4170
sg76
(lp4186
g69
(g70
g71
NtRp4187
(dp4188
g74
(dp4189
g82
I5
ssg83
g4183
sg76
(lp4190
S'127.0.0.1-6af658a1-9890-462f-a9ae-2fb92424f1e9'
p4191
asbasbasbag69
(g85
g71
NtRp4192
(dp4193
g74
(dp4194
sg83
g2991
sg76
(lp4195
g69
(g90
g71
NtRp4196
(dp4197
g74
(dp4198
g94
g95
ssg83
g4192
sg76
(lp4199
S'session_id_name'
p4200
asbag69
(g90
g71
NtRp4201
(dp4202
g74
(dp4203
g101
g102
ssg83
g4192
sg76
(lp4204
S':'
asbag69
(g90
g71
NtRp4205
(dp4206
g74
(dp4207
sg83
g4192
sg76
(lp4208
g69
(g70
g71
NtRp4209
(dp4210
g74
(dp4211
g82
I5
ssg83
g4205
sg76
(lp4212
g3048
asbasbasbag69
(g85
g71
NtRp4213
(dp4214
g74
(dp4215
sg83
g2991
sg76
(lp4216
g69
(g90
g71
NtRp4217
(dp4218
g74
(dp4219
g94
g95
ssg83
g4213
sg76
(lp4220
S'session_locked'
p4221
asbag69
(g90
g71
NtRp4222
(dp4223
g74
(dp4224
g101
g102
ssg83
g4213
sg76
(lp4225
S':'
asbag69
(g90
g71
NtRp4226
(dp4227
g74
(dp4228
sg83
g4213
sg76
(lp4229
g69
(g70
g71
NtRp4230
(dp4231
g74
(dp4232
g82
I5
ssg83
g4226
sg76
(lp4233
g1505
asbasbasbag69
(g85
g71
NtRp4234
(dp4235
g74
(dp4236
sg83
g2991
sg76
(lp4237
g69
(g90
g71
NtRp4238
(dp4239
g74
(dp4240
g94
g95
ssg83
g4234
sg76
(lp4241
S'session_new'
p4242
asbag69
(g90
g71
NtRp4243
(dp4244
g74
(dp4245
g101
g102
ssg83
g4234
sg76
(lp4246
S':'
asbag69
(g90
g71
NtRp4247
(dp4248
g74
(dp4249
sg83
g4234
sg76
(lp4250
g69
(g70
g71
NtRp4251
(dp4252
g74
(dp4253
g82
I5
ssg83
g4247
sg76
(lp4254
g112
asbasbasbag69
(g85
g71
NtRp4255
(dp4256
g74
(dp4257
sg83
g2991
sg76
(lp4258
g69
(g90
g71
NtRp4259
(dp4260
g74
(dp4261
g94
g95
ssg83
g4255
sg76
(lp4262
S'status'
p4263
asbag69
(g90
g71
NtRp4264
(dp4265
g74
(dp4266
g101
g102
ssg83
g4255
sg76
(lp4267
S':'
asbag69
(g90
g71
NtRp4268
(dp4269
g74
(dp4270
sg83
g4255
sg76
(lp4271
g69
(g70
g71
NtRp4272
(dp4273
g74
(dp4274
g82
I5
ssg83
g4268
sg76
(lp4275
S'200'
p4276
asbasbasbag69
(g85
g71
NtRp4277
(dp4278
g74
(dp4279
sg83
g2991
sg76
(lp4280
g69
(g90
g71
NtRp4281
(dp4282
g74
(dp4283
g94
g95
ssg83
g4277
sg76
(lp4284
S'subtitle'
p4285
asbag69
(g90
g71
NtRp4286
(dp4287
g74
(dp4288
g101
g102
ssg83
g4277
sg76
(lp4289
S':'
asbag69
(g90
g71
NtRp4290
(dp4291
g74
(dp4292
sg83
g4277
sg76
(lp4293
g69
(g70
g71
NtRp4294
(dp4295
g74
(dp4296
g82
I5
ssg83
g4290
sg76
(lp4297
g3535
(S't\x04\x00\x00\x00home'
tRp4298
asbasbasbag69
(g85
g71
NtRp4299
(dp4300
g74
(dp4301
sg83
g2991
sg76
(lp4302
g69
(g90
g71
NtRp4303
(dp4304
g74
(dp4305
g94
g95
ssg83
g4299
sg76
(lp4306
S'title'
p4307
asbag69
(g90
g71
NtRp4308
(dp4309
g74
(dp4310
g101
g102
ssg83
g4299
sg76
(lp4311
S':'
asbag69
(g90
g71
NtRp4312
(dp4313
g74
(dp4314
sg83
g4299
sg76
(lp4315
g69
(g70
g71
NtRp4316
(dp4317
g74
(dp4318
g82
I5
ssg83
g4312
sg76
(lp4319
g134
asbasbasbag69
(g85
g71
NtRp4320
(dp4321
g74
(dp4322
sg83
g2991
sg76
(lp4323
g69
(g90
g71
NtRp4324
(dp4325
g74
(dp4326
g94
g95
ssg83
g4320
sg76
(lp4327
g2169
asbag69
(g90
g71
NtRp4328
(dp4329
g74
(dp4330
g101
g102
ssg83
g4320
sg76
(lp4331
S':'
asbag69
(g90
g71
NtRp4332
(dp4333
g74
(dp4334
sg83
g4320
sg76
(lp4335
g69
(g70
g71
NtRp4336
(dp4337
g74
(dp4338
g82
I5
ssg83
g4332
sg76
(lp4339
g2182
asbasbasbag69
(g85
g71
NtRp4340
(dp4341
g74
(dp4342
sg83
g2991
sg76
(lp4343
g69
(g90
g71
NtRp4344
(dp4345
g74
(dp4346
g94
g95
ssg83
g4340
sg76
(lp4347
S'view'
p4348
asbag69
(g90
g71
NtRp4349
(dp4350
g74
(dp4351
g101
g102
ssg83
g4340
sg76
(lp4352
S':'
asbag69
(g90
g71
NtRp4353
(dp4354
g74
(dp4355
sg83
g4340
sg76
(lp4356
g69
(g70
g71
NtRp4357
(dp4358
g74
(dp4359
g82
I5
ssg83
g4353
sg76
(lp4360
S'stree/index.html'
p4361
asbasbasbasbasbsS'locals'
p4362
(dp4363
g4
S"r'C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py'"
p4364
sg6
S'\'# coding: utf-8\\n## tree = local_import("tree", r...rm=form)\\n\\nresponse._vars=response._caller(index)\\n\''
p4365
sssS'traceback'
p4366
S'Traceback (most recent call last):\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py", line 204, in restricted\n    ccode = compile2(code,layer)\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\gluon\\restricted.py", line 189, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\', layer, \'exec\')\n  File "C:\\Documents and Settings\\Guest\\Desktop\\web2py\\applications\\Phylografter\\controllers/stree.py", line 180\n    """   datey = time.strftime( "%Y%m%d" )\n                                          ^\nIndentationError: unindent does not match any outer indentation level\n'
p4367
s.